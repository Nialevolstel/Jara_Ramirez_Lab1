# 		Laboratorio 1 Organizacion de Computadores: MIPS				#
#################################################################################################
#	Profesores: Felipe Garay, Erika Rosas, Nicolas Hidalgo					#
#	Ayudante: Ian Mejias									#
#################################################################################################
#	Nombre:	Felipe Jara Ramirez.								#
#	Rut:	18.993.812-8									#
#	Email:	felipe.jara.r@usach.cl								#
#################################################################################################
#
#	DATOS DEL PROGRAMA:
#	Tamaыo del display: 	512x512 - 	256x256
#	Tamaыo de un pixel:	8x8 	- 	4x4
#
#		LIMITES DEL DISPLAY:
#		------------------------------------------------------------------------
#		\0      							     252\
#		\									\
#		\1764								    2016\
#		\-----------------------------------------------------------------------\
#		\									\
#		\									\
#		\									\
#		\									\
#		\									\
#		\									\
#		\									\	
#		\									\
#		\									\
#		\									\
#		\									\
#		\									\
#		\									\
#		\									\
#		\16128								   16380\
#		-------------------------------------------------------------------------
#
# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии

.data

	#иииииииииииииииииииииииииииииииииииииииииииииии DISPLAY иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	display:		.word 		0:262144	# Display Grafico.
	display_bound:		.half 		16380		# Limite del Display.
	pixel_by_side:		.half 		64		# Cantidad de pixeles por lado.
	display_line_bound:	.half		252		# Limite de una linea horizontal del Display.
								# (display_line_bound = pixel_by_side * 4)
								
	score_bar_lines:	.half		7		# Cantidad de lineas destinadas para la barra de score
	score_bar_bound:	.half 		1764		# (score_bar_bound = score_bar_lines * display_line_bound


	#иииииииииииииииииииииииииииииииииииииииииии Configuraciones del juego иииииииииииииииииииииииииииииииииииииииииииииииииии
	# CONDICIONES:
	# xo_snake_position > xo_tail_position
	# yo_snake_position = yo_tail_position
	xo_snake_position:	.half		31		# Posiciзn X inicial de la cabeza de la serpiente.
	yo_snake_position:	.half		31		# PosiciЫn Y inicial de la cabeza de la serpiente.
	xo_tail_position:	.half		28		# PosiciЫn X inicial de la cola de la serpiente.
	yo_tail_position:	.half		31		# PosiciЫn Y inicial de la cola de la serpiente.
	obstacles_amount:	.half		40		# Cantidad de obstaculos que son incluidos en el terreno de juego.
	points_per_fruit:	.half		1		# Cantidad de puntos que se reciben por comer una fruta.
	snake_slowness:		.half 		65		# Lentitud con la que se mueve la serpiente

	#иииииииииииииииииииииииииииииииииииииииииииииииииии Colores иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	display_color:		.word		0x000000	# Color usado para representar un vacio existencial.
	score_bar_color:	.word		0xFFFFFF	# Color usado para representar la barra superior del juego.
	obstacles_color:	.word		0x3D3D3D	# Color usado para representar obstaculos.
	snake_color:		.word		0x002EB8	# Color  usado para representar el cuerpo de la serpiente.
	snake_tail_color:	.word		0xF12345	# Color usado para representar la cola de la serpiente
	fruit_color:		.word 		0xFF0000	# Color usado para representar alimento.
	
	
	#ииииииииииииииииииииииииииииииииииииииииииииии Variables del juego иииииииииииииииииииииииииииииииииииииииииииииииииии
	x_snake_position:	.half		31		# Posicion X de la serpiente durante el juego.
	y_snake_position:	.half		31		# Posicion Y de la serpiente durante el juego.
	x_tail_position:	.half		28		# Posicion X de la cola de la serpiente durante el juego.
	y_tail_position:	.half 		31		# Posicion Y de la cola de la serpiente durante el juego.
	score:			.word		0		# Score de la serpiente durante el juego.
	snake_direction:	.byte		0		# Direcciзn de la serpiente durante el juego.
								# >>	0: Sin moverse.
								# >>	1: Hacia arriba.
								# >>	-1: Hacia abajo.
								# >>	2: Hacia la derecha.
								# >>	-2: Hacia la izquierda.												
	arr_direction_change:	.word 		0:4096		# Arreglo que contiene las direcciones que debe seguir la cola.
	arr_size:		.half		4096		# Tamaыo del arreglo utilizado.
	arr_actual_index:	.half		0		# Indice conciderado en el arreglo arr_direction_change.
	arr_last_index:		.half		-1		# Indice del la ultima direccion incluida en el arreglo
	
	#ииииииииииииииииииииииииииииииииииииииииииииииииииии Mensajes иииииииииииииииииииииииииииииииииииииииииииииииииии
	mensaje0:		.asciiz 	"\nPara continuar y empezar una nueva partida, presione en el simulador de teclado la tecla 'a'.\nPara finalizar el juego, presione la letra 'q'\n"
	mensaje1:		.asciiz		"\nPara poder dar inicio al juego, el usuario debe ingresar POR CONSOLA un numero entero cualquiera. El numero ingresado permite\nconfigurar la <seed> del generador de numeros aleatorios, el cual es necesario para crear los obstaculos y alimentos en el\nterreno de juego.\n\nIngrese el numero a continuacion: "
	mensaje2:		.asciiz		"\nMapa del juego completado.\n"
	salto_linea: 		.asciiz 	"\n"	
	
	#ииииииииииииииииииииииииииииииииииииииииииииииииииии Imagenes иииииииииииииииииииииииииииииииииииииииииииииииииии
	imagen_inicial:		.word 		0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x000000, 0x01000000, 0x000000, 0x7d7d7d, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7a7a7a, 0x7a7a7a, 0x000000, 0x000000, 0x3a3a3a, 0x000000, 0x000000, 0x000000, 0x787878, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x000000, 0x000000, 0x000000, 0x797979, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0xcacaca, 0xcbcbcb, 0x191919, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x2d2d2d, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x424242, 0xffffff, 0xffffff, 0xf6f6f6, 0x9c9c9c, 0x303030, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x636363, 0x010101, 0x4e4e4e, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7c7c7c, 0x000000, 0x000000, 0xdadada, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xf7f7f7, 0xbababa, 0xababab, 0xababab, 0xaaaaaa, 0xc9c9c9, 0xf9f9f9, 0xeaeaea, 0x010101, 0x4f4f4f, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x424242, 0x000000, 0x6a6a6a, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xfdfdfd, 0x000000, 0x404040, 0x797979, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x717171, 0x010101, 0x161616, 0xefefef, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0x141414, 0x000000, 0x797979, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x010101, 0xa0a0a0, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x797979, 0x000000, 0x5e5e5e, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x010101, 0x000000, 0x525252, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xe2e2e2, 0x000000, 0x000000, 0x797979, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x000000, 0x060606, 0x030303, 0xeaeaea, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0x848484, 0x000000, 0x010101, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x020202, 0xababab, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x010101, 0x474747, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0xa2a2a2, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xeaeaea, 0x000000, 0x000000, 0x2c2c2c, 0x767676, 0x7a7a7a, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x838383, 0xd9d9d9, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xbfbfbf, 0x010101, 0x000000, 0x010101, 0x383838, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xfefefe, 0xffffff, 0xd0d0d0, 0x000000, 0x000000, 0x000000, 0x5e5e5e, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0x010101, 0x010101, 0x010101, 0x010101, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x767676, 0x7b7b7b, 0x767b75, 0x7b7b7b, 0x797b78, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x777b7a, 0x757c75, 0x7b7c7e, 0x797b7a, 0x7b7b79, 0x7b7b79, 0x7c7c7c, 0x7c7c7c, 0x7b7b7d, 0x767b77, 0x7b7b7d, 0x7a7a78, 0x7b7b7b, 0x7a7c79, 0x7b7b7b, 0x7b7b7b, 0x7c7c7a, 0x757b77, 0x7d7b7c, 0x7a7a78, 0x7b7b7d, 0x7b7b7b, 0x7a7c7b, 0x7a7c79, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x010101, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7d, 0x7b7b7d, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7c7a7b, 0x7b7b7d, 0x797b7a, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7d7a, 0x7b7b7b, 0x7b7b7b, 0x7a7c7b, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfbfbfb, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7b7b79, 0x7b7b7b, 0x7c7c7c, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x7c7c7c, 0x7c7a7b, 0x7c7c7c, 0x7b7b79, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x7a7c7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7c, 0x7b7b7b, 0x000002, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x767b75, 0x7b7b7b, 0x797b7a, 0x7b7b7d, 0x7b7b79, 0x7b7b79, 0x7a7a7a, 0x777b7a, 0x767b74, 0x7b7b7b, 0x7a7c7b, 0x777777, 0x575755, 0x525252, 0x343434, 0x000000, 0x000200, 0x010103, 0x000000, 0x000002, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7a7a78, 0x757b77, 0x7c7c7c, 0x797b7a, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x010101, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x767b77, 0x7b7b7b, 0x7a7c7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7a7a7a, 0x797e7a, 0x747973, 0x000002, 0x000000, 0x000000, 0x00000c, 0x00001a, 0x010028, 0x030037, 0x000026, 0x00001c, 0x00000c, 0x000000, 0x000000, 0x000000, 0x000000, 0x7a7c7b, 0x757c75, 0x7c7c7c, 0x797b7a, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7a7c7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x010101, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7c7c7e, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x000002, 0x010000, 0x151517, 0x000116, 0x03002d, 0xa7a1e7, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa6a3e6, 0x4f4f85, 0x47456c, 0x27243f, 0x00000c, 0x000000, 0x686868, 0x7a7a7a, 0x7b7b79, 0x7c7c7c, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x626262, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7c7c7c, 0x7b7b79, 0x6d6d6d, 0x000000, 0x0e0e0e, 0x000110, 0x02012d, 0x9f9ce1, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa7a2e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa8a3e6, 0x9b95db, 0x525274, 0x010101, 0x555555, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xd2d2d2, 0x000000, 0x000000, 0x7b7b7b, 0x767b77, 0x7b7b7b, 0x797b78, 0x7b7b7b, 0x6f6f6f, 0x000000, 0x2d2d2d, 0x030222, 0x9899d9, 0xa6a3e8, 0xa6a3e8, 0xa8a3e6, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa5a2e9, 0xa2a3e4, 0xa6a3ea, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e6, 0xa5a2e5, 0x797ca9, 0x000000, 0x4d4d4b, 0x7c7a7b, 0x7b797a, 0x7b7b7b, 0x7a7c7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x353535, 0x000000, 0x656565, 0x787a75, 0x7b7b7b, 0x7a7c7b, 0x716f72, 0x000000, 0x000116, 0x020032, 0x9d9adf, 0xa1a2e2, 0xa8a2ea, 0xa4a3e7, 0xa5a4e6, 0xa4a3e5, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa2a3e3, 0xa8a2e8, 0xa5a4e6, 0xa8a2e8, 0xa5a2e7, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa3a3e3, 0x8380b5, 0x000100, 0x646464, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xb8b8b8, 0x000000, 0x000000, 0x717171, 0x7a7a7a, 0x7b7b7b, 0x141414, 0x03002d, 0x9e98de, 0xa6a3e8, 0xa7a4e9, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa8a3e6, 0xa6a3e6, 0xa6a3e6, 0xa8a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0x010022, 0x000000, 0x7b7b79, 0x7b7b7d, 0x7a7a7a, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x7b7b7b, 0x000000, 0x000000, 0x666666, 0x000000, 0x000015, 0x9d9add, 0xa6a3e6, 0xa6a3e8, 0xa7a4e9, 0xa6a3e6, 0xa8a3e6, 0xa6a3e8, 0xa8a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa5a2e5, 0xa5a2e5, 0xa5a2e5, 0xa6a3e6, 0xa7a4e7, 0xa7a2e5, 0xa6a3e8, 0xa8a3e6, 0xa6a3e8, 0xa5a2e7, 0xa8a2e8, 0x010010, 0x353533, 0x7b7b7d, 0x7b7b79, 0x010101, 0x01000000, 0x000000, 0xdfdfdf, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0x000000, 0x000000, 0x000000, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x4d4d4d, 0x000100, 0x000000, 0x000000, 0x03002d, 0xa6a3e8, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa3a4e4, 0xa8a2e8, 0xa4a3e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa4a1e6, 0x51507c, 0x8d8ece, 0xa8a2e8, 0xa5a4e6, 0xa6a3e8, 0xa6a3e8, 0xa6a4e5, 0xa6a3e8, 0xa6a3e8, 0xa3a3e3, 0xa8a2ea, 0xa6a3e6, 0xadabda, 0x000201, 0x727272, 0x7a7c7b, 0x000000, 0x01000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0x000000, 0xfefefe, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfafafa, 0xffffff, 0xffffff, 0xd7d7d7, 0x1c211b, 0x000000, 0x000120, 0xa8a2e8, 0xa5a2e7, 0xa6a3e8, 0xa5a4e6, 0xa5a2e5, 0xa2a3e3, 0xa8a2e8, 0xa5a4e6, 0xa6a3e8, 0xa4a3e5, 0xa7a4e9, 0x9d9bcd, 0x000000, 0x383d51, 0xa7a4eb, 0xa5a4e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa3a3e3, 0xa9a3eb, 0xa6a3e8, 0xa6a3ea, 0x000116, 0x000000, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0x000000, 0xd3d3d3, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xf4f4f4, 0xffffff, 0x838383, 0x000000, 0x000000, 0x000000, 0x413e81, 0xa6a3e8, 0x7a79bd, 0x8f8cd1, 0xa8a2e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa7a4e7, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0x010022, 0xece08e, 0x000000, 0x8683c8, 0xa5a4e6, 0xa5a4e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0x908dba, 0x000000, 0x787878, 0x000000, 0x01000000, 0x000000, 0x292929, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x9d9d9d, 0x000000, 0x000000, 0x6d6d6d, 0x000000, 0x6865aa, 0x8984c7, 0x000000, 0x363376, 0xa6a3ea, 0xa6a3e8, 0xa6a5e9, 0xa5a2e5, 0xa5a4e6, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0x010012, 0xfff3a1, 0x5d5001, 0x6463a7, 0xa5a2e7, 0xa6a3e8, 0xa5a4e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa7a4e9, 0xa7a4e7, 0xa6a3e8, 0xa5a2e7, 0xa09bde, 0x010010, 0x777777, 0x000000, 0x01000000, 0x000000, 0x010101, 0x000000, 0x6e6e6e, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x010101, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xf3f3f3, 0x0b0b0b, 0x000000, 0x7b7b7b, 0x767b77, 0x020001, 0x8988cc, 0x020001, 0xfaed9e, 0x000000, 0x8885ca, 0xa5a2e7, 0xa2a3e3, 0xa9a3e9, 0xa6a5e9, 0xa5a4e8, 0xa4a3e5, 0xa6a3e8, 0x010010, 0xfef3a3, 0x585000, 0x4c498e, 0xa5a4e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa4a4e4, 0xa7a4e9, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0x000120, 0x686a69, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfdfdfd, 0xffffff, 0xfefefc, 0xffffff, 0xfeffff, 0xfbfbfb, 0x8b8b89, 0x000000, 0x000000, 0x7b7b79, 0x000100, 0x010101, 0xa5a2e5, 0x000000, 0xfef3a1, 0x000002, 0x7c7bbf, 0xa5a2e5, 0xa2a3e3, 0xa6a3e6, 0xa4a3e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0x020121, 0xfef3a3, 0x585000, 0x7d799c, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa7a1e7, 0xa6a3e6, 0xa2a3e3, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a5e7, 0x030133, 0x696969, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x000000, 0x000000, 0xf8f8f8, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfcfcfc, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xf3f1f2, 0x212121, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0xa5a2e5, 0x000000, 0xfef3a1, 0x000000, 0x7d7ac1, 0xa8a2e8, 0xa8a2e8, 0xa5a4e8, 0xa5a2e5, 0xa5a2e5, 0xa9a3e9, 0xa6a3e8, 0x69699b, 0x5c4f00, 0x020143, 0x928fd2, 0xa8a3e6, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0x020032, 0x68696b, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x000000, 0x000000, 0xc8c8c8, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x010101, 0x000000, 0x010101, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xeaeae8, 0x030303, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000002, 0xa6a3e8, 0x000000, 0xfaed9e, 0x000000, 0xa19ee3, 0xa6a3e6, 0xa5a2e5, 0xa7a1e7, 0xa5a2e7, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0x7471b8, 0x8d8acd, 0xa6a3e6, 0xa5a2e7, 0xa5a2e7, 0xa6a3e8, 0xa4a3e5, 0xa6a3e8, 0xa8a2e8, 0xa5a2e7, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0x010020, 0x686a69, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x5f5f5f, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfafffb, 0xffffff, 0xffffff, 0x706f6d, 0x000000, 0x010101, 0x7b7b7b, 0x000201, 0x000100, 0x020001, 0xa5a2e5, 0x000000, 0x20201e, 0x020044, 0xa6a3e8, 0xa6a3e6, 0xa3a4e4, 0xa9a3e9, 0xa6a3e6, 0xa8a2e8, 0xa5a2e7, 0xa6a5e7, 0xa8a3e6, 0xa5a4e6, 0xa2a3e3, 0xa9a3e9, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa5a2e5, 0xa6a3e6, 0xa6a3e6, 0xa3a4e4, 0xa7a4e9, 0xa5a2e5, 0xa6a3e8, 0x9d9ce0, 0x020111, 0x686868, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x5f5f5f, 0x010101, 0x010101, 0xffffff, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0x010101, 0x010101, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfafffb, 0xffffff, 0xfdfdfd, 0x2e2c2d, 0x000000, 0x000000, 0x797b7a, 0x000000, 0x000100, 0x000000, 0xa5a4e6, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa8a2e8, 0xa3a3e3, 0xa9a3e9, 0xa5a4e6, 0xa5a2e5, 0xa6a3e8, 0xa4a3e5, 0xa8a3e6, 0xa4a3e7, 0xa3a3e3, 0xa8a2e8, 0xa5a2e7, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa2a3e4, 0xa6a3e8, 0xa5a3e4, 0xa6a3e8, 0x9393c9, 0x000000, 0x7a7a7a, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x606060, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x5b5b5b, 0x000000, 0x000000, 0x000000, 0x000000, 0x070707, 0x7875ba, 0xa6a3e8, 0xa7a1e7, 0xa5a2e5, 0xa6a3e8, 0xa8a2e8, 0xa5a4e8, 0xa5a2e7, 0xa6a3e6, 0xa6a3ea, 0xa5a2e7, 0xa6a3e6, 0xa6a3ea, 0xa5a2e7, 0xa6a3e8, 0xa5a2e5, 0xa7a4e7, 0xa6a3e8, 0xa6a3e6, 0xa5a4e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0x7876a5, 0x010101, 0x7a7c79, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x4a4a4a, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfeffff, 0xffffff, 0xffffff, 0x959394, 0x000000, 0x010101, 0x010000, 0x4d4a91, 0x9c99dc, 0xa6a3ea, 0xa8a2e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e6, 0xa8a3e6, 0xa6a3e6, 0xa6a3e8, 0xa8a3e6, 0xa5a2e7, 0xa6a3e8, 0xa5a4e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa7a4e7, 0xa6a3e8, 0xa6a3e8, 0xa7a2e5, 0xa6a3e6, 0xa6a4e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0x565577, 0x000000, 0x7a7c7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x323232, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfcfefb, 0xffffff, 0xffffff, 0xe1e1e1, 0x000000, 0x000000, 0x857fc5, 0xa6a4e5, 0xa3a4e4, 0xa9a3e9, 0xa4a3e5, 0xa6a3e6, 0xa7a1e7, 0xa7a4e9, 0xa7a4e7, 0xa6a3e8, 0xa3a4e4, 0xa7a4e9, 0xa6a3e6, 0xa5a2e7, 0xa5a4e8, 0xa5a2e7, 0xa7a4e9, 0x9d9ce0, 0xa2a3e3, 0xa8a3e6, 0xa6a3e6, 0xa7a4e7, 0xa5a2e7, 0xa6a3e6, 0xa7a2e5, 0xa6a3e6, 0xa3a4e4, 0xa6a3e8, 0xa5a2e5, 0xa6a3e6, 0x000116, 0x000000, 0x7a7a7a, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x1a1a1a, 0x010101, 0x000000, 0x868686, 0xbababa, 0xf2f2f2, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xe2e2e2, 0x969696, 0x000100, 0x010103, 0x000000, 0x010101, 0x000201, 0xa5a2e5, 0xa6a3e8, 0xa7a4eb, 0xa4a4e4, 0xa9a2e8, 0xa5a4e6, 0xa6a3ea, 0xa6a3e8, 0xa5a2e5, 0xa5a2e5, 0xa5a4e8, 0xa3a4e4, 0xa8a2e8, 0xa4a3e5, 0xa6a3e8, 0x9a97dc, 0x534e91, 0x151257, 0x030043, 0x343575, 0xa59fe7, 0xa4a3e5, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa2a3e4, 0xa8a2e8, 0xa5a2e7, 0x9895da, 0x00000a, 0x000000, 0x797979, 0x000000, 0x01000000, 0x000000, 0x7a7a7a, 0x040404, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x707070, 0xdddddd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x8f8f8f, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa7a4e7, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa5a4e8, 0x7e7bc0, 0x3b387d, 0x02013a, 0x5e0000, 0xa24746, 0xc16363, 0x171717, 0x686789, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa7a2e5, 0xa6a3e8, 0xa5a2e5, 0xa5a2e7, 0x6865ac, 0x000000, 0x767676, 0x7a7a7a, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x4d4d4d, 0x4a4a4a, 0x000000, 0x373737, 0x151515, 0x000000, 0x000000, 0x000000, 0x000000, 0xf9f9f9, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xcecece, 0x222222, 0x000000, 0x030303, 0x1d1d1d, 0x464646, 0x68686a, 0x403f3d, 0x000000, 0x050043, 0xa6a3e8, 0xa8a2e8, 0xa5a4e8, 0xa5a2e7, 0xa5a4e6, 0xa5a4e8, 0x7d7abf, 0x5d5a9f, 0x5e5ba2, 0x5d5a9f, 0x5e5ba0, 0x5d5a9f, 0x2f2d6e, 0x0e0a3d, 0x5c0100, 0x6c0e0c, 0xb75758, 0xf89a9a, 0xffa4a3, 0xffa4a3, 0xd77778, 0x161356, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa8a3e6, 0xa5a2e7, 0xa6a3e8, 0xa5a4e8, 0xa5a2e5, 0xa7a1e7, 0x2f296f, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x5e5e5e, 0x2b2b2b, 0x000000, 0x000000, 0x010101, 0xc9c9c9, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xadadad, 0x000000, 0x010101, 0x424242, 0x757575, 0x7b7b7b, 0x7b7b7b, 0x787a77, 0x010101, 0x000100, 0xa6a3e8, 0xa4a3e5, 0xa5a2e5, 0xa6a3e8, 0xa5a4e8, 0x7071b2, 0x202022, 0x000100, 0x000002, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x882829, 0xcd6f6d, 0xffa1a1, 0xfea3a0, 0xfea2a3, 0xfea2a3, 0xffa4a3, 0xfaa39c, 0x151052, 0xa5a4e6, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa2a3e3, 0xa7a4e9, 0x9794d7, 0x010101, 0x000000, 0x7a7a7a, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x6f6f6f, 0x232323, 0x000000, 0x000000, 0xbdbdbd, 0xffffff, 0xffffff, 0xacacac, 0x000000, 0x151515, 0x707070, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x696e68, 0x010101, 0x020145, 0xa7a4e9, 0xa6a3e8, 0xa7a2e5, 0xa6a3e6, 0x7c79be, 0x000100, 0x010103, 0x5a0000, 0x5b0000, 0x5c0001, 0x5c0100, 0x5c0100, 0x6f1111, 0xb85f59, 0xffa1a1, 0xffa4a3, 0xffa4a3, 0xffa2a2, 0xffa4a3, 0xfea4a3, 0xffa4a3, 0xfba49d, 0x171254, 0xa6a3e8, 0xa7a4e9, 0xa5a4e6, 0xa6a3e8, 0xa6a3e6, 0xa5a2e5, 0xa5a3e4, 0xa7a4e7, 0x524f92, 0x010000, 0x767676, 0x7a7c7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7a7a7a, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x363636, 0x000000, 0x000000, 0xcacaca, 0xe4e4e4, 0x000000, 0x151515, 0x787878, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x555555, 0x000015, 0xa6a3e8, 0xa8a3e6, 0xa8a2e8, 0xa5a4e6, 0xa5a2e7, 0x2e2d4f, 0x000000, 0x5d0000, 0x5e0000, 0x5e0000, 0x5e0000, 0x600405, 0xa14240, 0xe68888, 0xffa4a3, 0xffa4a3, 0xfda3a3, 0xffa4a3, 0xfea2a3, 0xffa3a1, 0xfea2a3, 0xffa4a1, 0xfda2a1, 0x232063, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa5a2e7, 0xa5a4e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0x010010, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7d, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x434343, 0x000000, 0x000000, 0x3e3e3e, 0x000000, 0x787878, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x555555, 0x03002d, 0xa6a3e6, 0xa7a1e7, 0xa6a3e6, 0xa8a2e8, 0xa6a3e8, 0x1c1b2b, 0x000000, 0x5c0001, 0x5c0001, 0x5e0001, 0x7b1f20, 0xf09495, 0xfea3a0, 0xffa4a3, 0xfea4a3, 0xffa4a3, 0xfea2a3, 0xfea3a2, 0xfea2a3, 0xfea3a2, 0xffa4a3, 0xfea3a2, 0xca6c6c, 0x434087, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa6a3e6, 0xa5a2e5, 0xa8a3e6, 0xa6a5e9, 0xa7a4e7, 0x000000, 0x7a7a7a, 0x7b7b7b, 0x7b7a78, 0x7b7b7b, 0x010101, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7c7c7c, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x242424, 0x000000, 0x000000, 0x595959, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x5f6460, 0x020018, 0xa5a2e5, 0xa7a4e9, 0xa5a2e7, 0xa8a3e6, 0xa6a3e8, 0x1c1b2b, 0x000100, 0x5e0001, 0x5b0100, 0x751717, 0xfea2a3, 0xffa3a4, 0xfda3a3, 0xffa4a1, 0xfba39f, 0xffa4a3, 0xfea3a2, 0xffa3a4, 0xfea3a0, 0xfea2a3, 0xffa3a4, 0xf89a9a, 0x7a211b, 0x9e9be0, 0xa6a3e8, 0xa7a4e7, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa6a3e6, 0xa5a5e5, 0xa8a5e8, 0x010042, 0x7b7b79, 0x7b797a, 0x797b7a, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x696969, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x727874, 0x020001, 0x0b0a36, 0xa7a4e7, 0xa6a3e8, 0xa5a4e6, 0xa7a4e9, 0x4a496b, 0x000100, 0x5e0000, 0x5a0000, 0xe38585, 0xffa3a4, 0xffa3a4, 0xfea3a2, 0xfea3a2, 0xfba49d, 0xffa4a3, 0xfea3a2, 0xffa4a3, 0xfea3a2, 0xffa4a3, 0xfea3a0, 0xcb706f, 0x9397d4, 0xa8a2e8, 0xa6a3e6, 0xa7a6e8, 0xa5a2e7, 0xa8a2ea, 0xa7a4e7, 0x7a78aa, 0xa5a5e5, 0xa7a4e9, 0x030043, 0x000000, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x696969, 0x727272, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7c79, 0x2a2a2a, 0x00010e, 0xa6a3e8, 0xa8a3e6, 0xa8a2e8, 0xa6a3e8, 0x7573a5, 0x000000, 0x5b0000, 0x923434, 0xfea3a2, 0xffa4a3, 0xfea2a3, 0xffa4a3, 0xfea3a2, 0xffa2a2, 0xfea3a2, 0xfea2a3, 0xfea3a2, 0xfea3a2, 0xfea3a2, 0xa9a7e8, 0xa09de2, 0xa7a4e9, 0xa5a2e5, 0xa5a2e7, 0xa8a5e8, 0xa6a5e7, 0xa6a3e6, 0xa6a3e6, 0x000000, 0xa7a4e7, 0xa7a4e9, 0x000000, 0x000000, 0x757575, 0x7b7b7b, 0x7a7c7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x6a6a6a, 0x000200, 0x5c5b7b, 0xa6a3e8, 0xa7a5e6, 0xa6a3e8, 0xa6a3e8, 0x343247, 0x000000, 0xb45656, 0xfd9f9d, 0xfb9d9d, 0xfea3a2, 0xfea3a2, 0xfea3a2, 0xf99b9b, 0xfea2a3, 0xfea3a0, 0xfea4a4, 0xffa4a3, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa8a3e6, 0xa6a3e8, 0xa8a2ea, 0xa6a3e6, 0xa7a4e7, 0xa7a4e7, 0x000002, 0xa6a3e6, 0xa7a4e9, 0xa6a3e6, 0x464370, 0x1b1d1c, 0x040404, 0x747474, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x767b75, 0x7c7a7d, 0x454744, 0x000000, 0x6a6a9c, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0x9d9ddd, 0x5a587f, 0x1e1f3b, 0x211f37, 0x00001a, 0x5a5a7e, 0x7474aa, 0x5f5f95, 0x7374aa, 0xaca8e5, 0xa9a4e6, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa5a4e8, 0xa6a3e8, 0xa2a3e3, 0xa9a4e7, 0xa5a4e6, 0xa6a3e6, 0xff0d, 0x010100, 0xa7a4e7, 0xa7a4e9, 0xa5a5e5, 0xa6a3e8, 0xa5a2e7, 0x211f35, 0x1a1c19, 0x000000, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x767b77, 0x7b7b7d, 0x7b7b79, 0x272729, 0x000000, 0x010020, 0x9f99df, 0xa6a3e8, 0xa3a3e3, 0xa8a2e8, 0xa5a2e5, 0xa8a2e8, 0x9996db, 0x928cd2, 0x9e9be0, 0xa6a3e6, 0xa1a2e2, 0xa6a3e6, 0xa6a5e9, 0xa6a3e8, 0xa5a2e5, 0xa7a1e7, 0xa6a3e6, 0xa6a3e8, 0xa5a5e5, 0xa6a3e6, 0x4f5160, 0x000000, 0x020044, 0xa6a5e7, 0xa6a5e7, 0xa6a3e6, 0xa2a3e3, 0xa6a3e8, 0xa8a3e6, 0xa4a0d3, 0x010100, 0x000000, 0x757776, 0x010000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x343434, 0x010000, 0x010010, 0x03002d, 0x9a97da, 0xa5a4e8, 0xa8a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e8, 0xa5a4e8, 0xa6a3e8, 0xa5a4e8, 0xa8a3e6, 0xa6a3e6, 0xa6a3e8, 0x9f9eca, 0x5a5b70, 0x000000, 0x000000, 0x000000, 0xa6a3e8, 0xa7a4e9, 0xa7a4e7, 0xa6a3e8, 0xa4a3e7, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0x6a6989, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x7b7b79, 0x5f5d5e, 0x0d0d0d, 0x000000, 0x010010, 0x000120, 0x7d7bad, 0x9a97dc, 0xa6a3e6, 0xa5a2e5, 0xa7a4e7, 0xa8a2e8, 0xa8a2e8, 0xa6a3e8, 0xa7a1e7, 0xa5a2e7, 0x9795c6, 0x706f91, 0x010010, 0x010000, 0x000000, 0x000000, 0x020016, 0xa7a4e7, 0xa7a4e9, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa9a4e7, 0xa6a3e8, 0xa5a4e6, 0x1e202f, 0x000000, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x767b75, 0x7d7b7e, 0x797b78, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x797979, 0x474546, 0x131510, 0x000000, 0x000000, 0x00000a, 0x000116, 0x010022, 0x03002b, 0x03003a, 0x000029, 0x030020, 0x000115, 0x01010d, 0x000000, 0x010101, 0x000000, 0x000110, 0x00011e, 0xa7a4e7, 0xa7a4e7, 0xa6a3e6, 0xa6a3e8, 0xa8a3e6, 0xa5a2e7, 0xa8a2e8, 0xa3a3e3, 0xa6a3e8, 0xa5a3e4, 0xa8a3e6, 0xa5a2e7, 0x7e7da9, 0x000000, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x696969, 0x434343, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000100, 0x020001, 0x000000, 0x000000, 0x000000, 0x000002, 0x010022, 0x9d9adf, 0xa4a5e5, 0xa9a4e7, 0xa4a3e7, 0xa6a3e6, 0xa7a2e5, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa3a4e5, 0xa8a2e8, 0xa5a2e5, 0xa7a4e9, 0xa6a4e5, 0xa6a3e6, 0x121421, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x767676, 0x767676, 0x767676, 0x767676, 0x757575, 0x767676, 0x7b7b7b, 0x7a7a7a, 0x555555, 0x000000, 0x01002c, 0xa8a2e8, 0xa8a2e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa5a2e5, 0xa6a3e8, 0xa8a2e8, 0xa6a3e8, 0xa6a3e8, 0xa5a2e5, 0xa5a4e6, 0xa5a2e7, 0x5f5f7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x7b797a, 0x010000, 0x020016, 0xa09de0, 0xa6a3e8, 0xa5a4e8, 0xa5a2e7, 0xa6a3e8, 0xa5a2e7, 0xa5a2e9, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0x8f8db4, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x767b77, 0x7c7c7e, 0x7b7b79, 0x7b7b79, 0x7b7b7b, 0x7c7c7c, 0x000000, 0x000000, 0x000134, 0xa6a0e6, 0xa5a2e5, 0xa7a4e7, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa6a3e6, 0xa2a4e1, 0xa8a2e8, 0xa5a2e5, 0xa5a2e7, 0xa5a2e5, 0xa5a2e7, 0xa3a3d9, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7c7c7c, 0x777c76, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7a7a7a, 0x7b7b7b, 0x000000, 0x00012a, 0xa9a3e9, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa2a4e1, 0xa7a1e9, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa5a2e5, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7d7c, 0x7b7b7b, 0x7a7a7a, 0x7c7a7b, 0x000100, 0x000022, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0xa5a2e7, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa8a2e8, 0xa6a3e8, 0xa6a3e8, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x7b7b79, 0x7a7a7a, 0x7b7b7b, 0x7b7b79, 0x7b797a, 0x000100, 0x000116, 0xa8a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa5a2e7, 0xa5a2e5, 0xa6a3e6, 0xa6a3e6, 0xa7a4e7, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0xa6a5e9, 0xa5a2e5, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x010101, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x010000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x01000000
	imagen_quit:		.word		0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x626262, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7a7a7a, 0x7b7b7b, 0x7c7c7c, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7d7d7d, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x7b7b7b, 0x7c7c7c, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x000000, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7a7a7a, 0x7a7a7a, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7c7c7c, 0x7b7b7b, 0x7d7d7d, 0x000000, 0x000000, 0x000000, 0x000000, 0x797979, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x000000, 0xcacaca, 0xcacaca, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x000000, 0xffffff, 0xfefefe, 0xf6f6f6, 0x000000, 0x303030, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x646464, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x010101, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7c7c7c, 0x000000, 0x000000, 0xdadada, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xf7f7f7, 0xbababa, 0xababab, 0xababab, 0xaaaaaa, 0xc9c9c9, 0xf9f9f9, 0xeaeaea, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7a7a7a, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfdfdfd, 0x000000, 0x000000, 0x797979, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x000000, 0xefefef, 0xfafff9, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfffeff, 0xfeffff, 0xffffff, 0xfdfffc, 0xffffff, 0xffffff, 0xfffeff, 0xffffff, 0xffffff, 0x141414, 0x010000, 0x797979, 0x7c7c7c, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x000000, 0xa0a0a0, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfeffff, 0xfffffd, 0x000000, 0x000000, 0x5e5e5e, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x000000, 0x000000, 0x000000, 0x525252, 0xffffff, 0xffffff, 0xffffff, 0xfeffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xe1e1df, 0x000000, 0x000000, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x000000, 0x000000, 0x030303, 0xeaeaea, 0xffffff, 0xffffff, 0xfbfffc, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xfdfffc, 0xffffff, 0xffffff, 0xffffff, 0xfffeff, 0xfefefe, 0xffffff, 0x000000, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x020202, 0xababab, 0xffffff, 0xffffff, 0xffffff, 0xfdfffc, 0xffffff, 0xffffff, 0xfffeff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xfcfefb, 0xffffff, 0xfefefc, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x010101, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0xa2a2a2, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xeaeaea, 0x010101, 0x000000, 0x000000, 0x767676, 0x7a7a7a, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x010101, 0x838383, 0xd9d9d9, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xff1715, 0xff1715, 0xff1713, 0xff1715, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xbfbfbf, 0x090909, 0x000000, 0x000000, 0x393939, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xfdfffa, 0xffffff, 0xffffff, 0xff1816, 0xff1713, 0xff1715, 0xff1818, 0xff1615, 0xfb1811, 0xffffff, 0xffffff, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xd1d1d1, 0x010101, 0x000000, 0x000000, 0x5e5e5e, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfbfffa, 0xffffff, 0xffffff, 0xff1717, 0xff1715, 0xff1717, 0xff1715, 0xff1715, 0xfe1711, 0xff1717, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x767676, 0x7a7a7a, 0x767b75, 0x7c7c7c, 0x7a7c79, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x797b7a, 0x767b75, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7a7c7b, 0x787a75, 0x7c7a7b, 0x7b7b7b, 0x7b7b7b, 0x797a7c, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x767b77, 0x7c7c7c, 0x7a7c7b, 0x7c7c7c, 0x7a7c7b, 0x7c7c7c, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfeffff, 0xffffff, 0xff1715, 0xfe1614, 0xff1715, 0xff1715, 0xff1715, 0xff1715, 0xff1715, 0xff1717, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x010101, 0x000000, 0x010101, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7d, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x7c7a7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7d, 0x7b7b7b, 0x7a7a7a, 0x7a7c7b, 0x7c7c7c, 0x7a7a78, 0x7b7b79, 0x7a7a7a, 0x7a7c7b, 0x7a7a7a, 0x7a7a7a, 0x7a7c7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7d, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfdfbfc, 0xfdfffe, 0xff1715, 0xff1715, 0xff1715, 0xff1713, 0xff1715, 0xff1715, 0xffffff, 0xff1715, 0xfe1914, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x010101, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7a, 0x7b7b79, 0x7b7b7b, 0x7c7a7b, 0x7c7c7c, 0x7c7c7a, 0x7b7b7d, 0x7b7b7b, 0x7a7c7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7a7a7a, 0x7b7b7b, 0x000002, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfbfffa, 0xffffff, 0xff1715, 0xff1715, 0xff1715, 0xff1717, 0xff1715, 0xff1715, 0xfcfefb, 0xff1818, 0xff1715, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xfffffd, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x767b75, 0x7b7b7d, 0x797b78, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7a7c79, 0x777c76, 0x7b7b7d, 0x7a7a7a, 0x777777, 0x585858, 0x525252, 0x343434, 0x000100, 0x000200, 0x000002, 0x000000, 0x000000, 0x000000, 0x7b7b79, 0x7b7b79, 0x7b7b7d, 0x767b77, 0x7b7b7b, 0x7a7c7b, 0x7b7b7d, 0x7a7c7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfdfffa, 0xffffff, 0xff1715, 0xff1816, 0xff1715, 0xff1717, 0xff1715, 0xff1816, 0xfb1611, 0xff1717, 0xffffff, 0xffffff, 0xfeffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x767b75, 0x7b7b7b, 0x7a7c7b, 0x7a7a7a, 0x7b7b7b, 0x7a7a7a, 0x7a7a7a, 0x7a7c79, 0x737872, 0x000002, 0x000000, 0x000000, 0x00000c, 0x00001a, 0x020129, 0x030035, 0x000124, 0x00001a, 0x01010d, 0x000000, 0x000000, 0x000000, 0x000000, 0x7a7c7b, 0x767b77, 0x7d7b7c, 0x7a7c79, 0x7b7b79, 0x7a7c79, 0x7b7b79, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xff1514, 0xff1715, 0xff1715, 0xff1713, 0xff1715, 0xff1715, 0xfd1813, 0xff1717, 0xfefffd, 0xffffff, 0xfffeff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7d, 0x7b7b79, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7d, 0x000002, 0x010000, 0x141615, 0x000015, 0x03002d, 0xa3a0e5, 0xa5a2e7, 0xa6a3e8, 0xa7a2e5, 0xa5a2e5, 0xa6a3e8, 0xa7a2e5, 0x504d86, 0x47446f, 0x272441, 0x00000c, 0x000000, 0x676767, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfeffff, 0xffffff, 0xff1715, 0xff1715, 0xff1615, 0xff1715, 0xff1816, 0xff1816, 0xff1713, 0xff1717, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x626262, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b79, 0x6d6d6d, 0x000000, 0x0e0e0e, 0x010010, 0x02012d, 0x9d9adf, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3ea, 0xa8a3e6, 0x9993d9, 0x515173, 0x000100, 0x545454, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfafff9, 0xfffeff, 0xffffff, 0xff1717, 0xfe1614, 0xff1717, 0xff1715, 0xfe1614, 0xfc1712, 0xff1818, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x7b7b7b, 0x767b77, 0x7c7c7c, 0x797b7a, 0x7b7b7b, 0x6f6f6f, 0x000000, 0x2c2c2c, 0x060223, 0x9798d8, 0xa8a2ea, 0xa8a2e8, 0xa7a1e7, 0xa5a2e7, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa3a4e4, 0xa6a3e8, 0xa6a3e8, 0xa7a4e7, 0xa6a3e6, 0xa6a3e8, 0xa5a3e4, 0xa6a3e8, 0x797aaa, 0x000002, 0x4d4f4c, 0x7c7a7b, 0x7b7b79, 0x7b7b79, 0x7b7b7b, 0x010000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfafff9, 0xffffff, 0xffffff, 0xff1715, 0xff1715, 0xff1816, 0xff1715, 0xff1816, 0xfc1711, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xfefefe, 0xfefefe, 0xfefefe, 0xffffff, 0x000000, 0x000000, 0x646464, 0x767b75, 0x7c7a7d, 0x7a7a7a, 0x6f6f6f, 0x000200, 0x020018, 0x020034, 0x9b98dd, 0xa3a3e3, 0xa8a2e8, 0xa5a4e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0x000100, 0xa6a3ea, 0xa5a4e6, 0xa6a3e8, 0xa5a2e5, 0xa6a3e6, 0xa6a3e6, 0xa4a3e5, 0xa4a4e4, 0x847fb5, 0x010101, 0x676566, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xff1715, 0xff1717, 0xff1715, 0xff1715, 0xfe1614, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfeffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xb8b8b8, 0x000000, 0x000000, 0x707070, 0x7b7b7b, 0x7a7a7a, 0x141414, 0x02012d, 0x9c96dc, 0xa6a3e6, 0xa5a2e7, 0xa6a3e6, 0xa8a2e8, 0xa5a4e6, 0xa6a3e8, 0xa4a3e7, 0xa6a3e8, 0xa8a3e6, 0x000000, 0x010000, 0x000000, 0xa6a3e8, 0xa5a2e7, 0xa5a2e5, 0xa5a2e5, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa7a1e7, 0x020123, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x010101, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfeffff, 0xffffff, 0xffffff, 0xff1715, 0xff1715, 0xfe1818, 0xff1715, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xfffeff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x666664, 0x000100, 0x000116, 0x9c99de, 0xa6a3e8, 0xa8a3e6, 0xa6a3e6, 0xa5a4e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa5a4e8, 0xa6a3e8, 0x000000, 0x000000, 0x000000, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa5a2e5, 0xa6a3e6, 0xa8a2e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0x010010, 0x353535, 0x7c7c7c, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xdedede, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfafffb, 0xffffff, 0xfefefc, 0xffffff, 0xffffff, 0xff1715, 0xff1717, 0xff1715, 0xfafff9, 0xffffff, 0xffffff, 0xfffeff, 0xfeffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000100, 0x010101, 0x000000, 0x03002f, 0xa8a3e6, 0xa5a2e5, 0xa6a3e8, 0xa5a4e8, 0xa2a3e3, 0xa7a4e9, 0xa4a3e5, 0xa8a2e8, 0xa6a3e6, 0x000000, 0x000000, 0x000000, 0x8c8dcd, 0xa8a2e8, 0xa5a3e4, 0xa6a3e8, 0xa5a4e6, 0xa7a4e9, 0xa6a3e8, 0xa5a2e5, 0xa2a3e3, 0xa9a3e9, 0xa6a3e8, 0xadaad9, 0x000000, 0x737373, 0x7a7b7d, 0x000000, 0x01000000, 0x000000, 0x010101, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfafff9, 0xfffeff, 0xfefefe, 0xffffff, 0xfefffd, 0xffffff, 0xff1713, 0xffffff, 0xfbfffc, 0xffffff, 0xffffff, 0xfffeff, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfafafa, 0xffffff, 0xffffff, 0x000000, 0x000100, 0x020003, 0x000000, 0x000002, 0x000000, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa2a3e3, 0x010101, 0xa5a2e7, 0xa7a4e9, 0x000000, 0x010103, 0x000000, 0x000000, 0x383d50, 0xa8a2e8, 0xa4a3e5, 0xa6a3e6, 0xa7a1e7, 0xa5a2e5, 0xa5a2e7, 0xa5a4e8, 0xa3a3e3, 0xa8a2e8, 0xa5a2e7, 0xa9a3e9, 0x000116, 0x000000, 0x7b7b7b, 0x010000, 0x01000000, 0x000000, 0x000000, 0xd3d3d3, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xfefefe, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xf5f5f5, 0xffffff, 0x000000, 0x010101, 0x000000, 0x000002, 0x423c82, 0x000002, 0x010101, 0x8e8bce, 0xa5a4e6, 0x000000, 0xa7a4e7, 0xa8a2e8, 0x000000, 0x000000, 0x000002, 0x000000, 0x010022, 0xe9dc8d, 0x000000, 0x8481c6, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa5a4e8, 0xa7a4e9, 0xa6a3e8, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa5a2e5, 0x8f8cb9, 0x010101, 0x797979, 0x000000, 0x01000000, 0x000000, 0x292929, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x6d6d6d, 0x000100, 0x6665a7, 0x8582c7, 0x000000, 0x000000, 0x000000, 0xa6a3e6, 0xa5a2e5, 0xa7a4e9, 0x000000, 0x000000, 0x000000, 0xa6a3e8, 0x0000f, 0xfff3a1, 0x5f4f01, 0x6461a6, 0xa6a3e8, 0xa5a2e7, 0xa8a3e6, 0xa6a3e8, 0xa6a3e8, 0xa9a4e7, 0xa6a3e8, 0xa6a3e8, 0xa5a4e8, 0xa5a4e6, 0x9d9add, 0x010010, 0x777777, 0x000000, 0x01000000, 0x000000, 0x010101, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfdfffc, 0xfffeff, 0xfffffd, 0xffffff, 0xffffff, 0xfd1815, 0xff1715, 0xff1715, 0xfc1712, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefeff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xf3f3f3, 0x000000, 0x000000, 0x7b7b7b, 0x767b75, 0x010101, 0x8887c9, 0x010101, 0xf7ec9c, 0x000002, 0x000002, 0xa6a3e6, 0xa3a4e4, 0xa8a2e8, 0xa4a1e4, 0xa6a3e8, 0xa5a2e5, 0xa6a3e6, 0x00010e, 0xfff4a4, 0x585000, 0x4b488d, 0xa4a3e5, 0xa8a2e8, 0xa5a2e5, 0xa7a4e7, 0xa6a3e8, 0xa5a4e6, 0xa3a5e2, 0xa6a3e8, 0xa5a2e5, 0xa7a4e9, 0xa6a4e5, 0x000120, 0x696969, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfafffb, 0xffffff, 0xffffff, 0xffffff, 0xff1715, 0xff1818, 0xff1715, 0xff1715, 0xfc1711, 0xff1816, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xfdfdfd, 0xffffff, 0xfdfffa, 0xffffff, 0xffffff, 0xfbfbfb, 0x000000, 0x000000, 0x000000, 0x7b7b7b, 0x000100, 0x010000, 0xa5a2e5, 0x000000, 0xfff2a3, 0x010101, 0x7d7abf, 0xa6a3e8, 0xa2a3e3, 0xa9a3e9, 0xa7a4e7, 0xa7a1e7, 0xa6a3e8, 0xa8a2e8, 0x010022, 0xfef3a3, 0x5a5000, 0x7b799e, 0xa5a4e8, 0xa7a4e9, 0xa6a3e6, 0xa5a2e5, 0xa6a3e6, 0xa8a3e6, 0xa3a4e4, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa6a5e7, 0x030132, 0x696969, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xfffeff, 0xfffffd, 0xffffff, 0xffffff, 0xfe1616, 0xff1717, 0xff1713, 0xfd1815, 0xff1713, 0xff1814, 0xffffff, 0xffffff, 0xffffff, 0xfefeff, 0xfcfcfc, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xf1f1f3, 0x000000, 0x010101, 0x7c7b79, 0x7b7b7b, 0x010101, 0x000000, 0xa4a3e5, 0x000000, 0xfff4a4, 0x000200, 0x7d7abd, 0xa4a3e7, 0xa8a3e6, 0xa6a3e8, 0xa8a2e8, 0xa5a4e6, 0xa7a4e7, 0xa7a2e5, 0x6a689a, 0x5d5001, 0x030045, 0x908dd0, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa7a4e7, 0xa5a2e7, 0xa6a3e6, 0x020034, 0x696969, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x000000, 0x000000, 0x010101, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xff1715, 0xff1816, 0xff1717, 0xff1715, 0xff1715, 0xff1715, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x000002, 0x010000, 0xa6a3e6, 0x000000, 0xf8ec9a, 0x010101, 0xa09de0, 0xa6a3e8, 0xa6a3e6, 0xa7a2e5, 0xa5a2e5, 0xa7a4e9, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0x7370b5, 0x8c89ce, 0xa8a3e6, 0xa6a3e8, 0xa6a3e8, 0xa5a2e7, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa5a2e5, 0x010020, 0x696969, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x5f5f5f, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xfcfefb, 0xffffff, 0xffffff, 0xffffff, 0xff1816, 0xff1717, 0xff1615, 0xff1715, 0xfb1610, 0xff1717, 0xffffff, 0xfffeff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfafffb, 0xfffeff, 0xffffff, 0x000000, 0x000100, 0x000000, 0x7b7b7b, 0x000002, 0x000100, 0x010101, 0xa5a2e5, 0x010101, 0x202020, 0x030045, 0xa5a4e8, 0xa6a3e8, 0xa2a3e3, 0xa8a2e8, 0xa4a4e4, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa7a4e7, 0xa3a3e3, 0xa8a2e8, 0xa6a4e5, 0xa6a3e8, 0xa4a3e5, 0xa6a3e6, 0xa4a3e5, 0xa6a3e8, 0xa2a3e3, 0xa9a3e9, 0xa5a2e5, 0xa8a2e8, 0x9c9bdd, 0x010010, 0x686868, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x5f5f5f, 0x000000, 0x010101, 0x000000, 0xffffff, 0xffffff, 0xfafffb, 0xffffff, 0xffffff, 0xfffeff, 0xffffff, 0xff1717, 0xff1514, 0xff1816, 0xfb1812, 0xffffff, 0xffffff, 0xfffeff, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0xfafffb, 0xffffff, 0xfdfdfd, 0x000000, 0x000000, 0x000000, 0x7a7c7b, 0x000000, 0x000100, 0x000002, 0xa6a3e6, 0xa7a4e7, 0xa6a3e8, 0xa6a3e8, 0xa6a5eb, 0xa6a3e6, 0xa3a4e4, 0xa9a3eb, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa5a4e8, 0xa6a3e8, 0xa6a3e6, 0xa3a3e3, 0xa8a2e8, 0xa5a4e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa5a2e5, 0xa5a2e9, 0xa2a3e3, 0xa6a3ea, 0xa5a2e5, 0xa8a3e6, 0x9292c8, 0x000000, 0x7b7b7d, 0x010101, 0x01000000, 0x000000, 0x7b7b7b, 0x606060, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0x000000, 0x010000, 0x000000, 0x000201, 0x000000, 0x060606, 0x7774b9, 0xa6a3e8, 0xa5a2e5, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa5a2e7, 0xa5a2e7, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa8a2ea, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0x7675a1, 0x000000, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x4a4a4a, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x504a90, 0xa6a3e8, 0xa6a3e8, 0xa8a2e8, 0xa5a2e5, 0xa5a4e6, 0xa5a4e8, 0xa5a2e7, 0xa5a2e7, 0xa6a3e8, 0xa5a2e7, 0xa7a1e7, 0xa7a1e7, 0xa5a2e7, 0xa5a2e7, 0xa5a2e7, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0x565577, 0x000000, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x323232, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xfafff9, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfbfffa, 0xffffff, 0xffffff, 0xfffeff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000100, 0x000000, 0x000000, 0x000000, 0x000000, 0x000201, 0x857fc5, 0xa6a3e8, 0xa2a3e3, 0xa6a3e8, 0xa5a2e7, 0xa7a4e9, 0xa5a2e7, 0xa7a1e7, 0xa5a2e7, 0xa39ce2, 0xa1a2e2, 0xafaaed, 0x797bb8, 0x5a5c99, 0x6c6dae, 0x5e6093, 0x050529, 0x1c1d3c, 0x292e4b, 0x6d6d93, 0x938fe3, 0xa6a3e8, 0xa5a4e6, 0xa6a3e8, 0xa5a4e8, 0xa6a3e8, 0xa2a4e1, 0xa6a3e8, 0xa5a2e5, 0xa8a2e8, 0x000015, 0x010100, 0x7b7b7d, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x1a1a1a, 0x020202, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000200, 0x010103, 0x000000, 0x010101, 0x000000, 0xa6a5e9, 0xa6a3e6, 0xa6a3e6, 0xa2a3e4, 0xa6a5e9, 0xa5a2e5, 0xa5a2e7, 0xa5a2e7, 0x9f9fe7, 0x660000, 0x650000, 0x600100, 0xffa3a4, 0xfda3a2, 0xffa4a3, 0xfda3a2, 0xffa3a3, 0xffa4a3, 0xfea4a4, 0xfca39d, 0x0a0b10, 0x353655, 0xa6a3e6, 0xa6a4e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa3a2e4, 0xa8a2ea, 0xa5a2e7, 0x9895da, 0x01000a, 0x000000, 0x797977, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x040404, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x020202, 0x000000, 0x000000, 0x000000, 0x000000, 0xa5a2e5, 0xa5a2e5, 0xa7a2e5, 0xa5a2e5, 0xa6a3e8, 0xa5a2e7, 0xa5a2e7, 0xa5a2e7, 0xaaa1e2, 0x660000, 0x640000, 0x640000, 0xfea4a4, 0xfea3a2, 0xffa2a2, 0xffa4a3, 0xffa4a3, 0xfea4a3, 0xffa4a3, 0xfea4a3, 0xfea2a3, 0xfea2a3, 0x000000, 0x7373a9, 0xa9a3e9, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0x6564aa, 0x010103, 0x777777, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x4d4d4d, 0x4b4b4b, 0x000000, 0x373737, 0x151515, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x030303, 0x1e1e1e, 0x464646, 0x686868, 0x404040, 0x010000, 0x030047, 0xa6a3ea, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa5a2e7, 0x8778b3, 0x630000, 0x660000, 0x660000, 0x640000, 0xffa4a3, 0xfea3a2, 0xffa4a3, 0xfea3a2, 0xfea3a2, 0xfea3a2, 0xffa2a2, 0xffa6a6, 0xfea2a3, 0xfda1a2, 0xffa4a1, 0x000100, 0x4a4a70, 0xa8a2e8, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa8a3e6, 0xa6a3e8, 0x2d2a6f, 0x000000, 0x7a7a7a, 0x7c7a7b, 0x000002, 0x01000000, 0x000000, 0x7d7d7d, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x5e5e5e, 0x2b2b2b, 0x010101, 0x000000, 0x010101, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x414141, 0x767676, 0x7a7a7a, 0x7b7b7b, 0x767b75, 0x000000, 0x000000, 0xa6a3e8, 0xa5a2e5, 0xa5a2e5, 0xa8a2e8, 0xa6a3e6, 0xa3a2e4, 0x8786d2, 0x640000, 0x660000, 0x640000, 0x640000, 0xfea4a3, 0xfea3a2, 0xfba29c, 0xfea3a2, 0xfea3a2, 0xffa3a4, 0xfea3a2, 0xffa7a6, 0xffa4a3, 0xfea3a2, 0xfca39f, 0xffa4a3, 0x000000, 0x1d1e30, 0xa09de2, 0xa5a2e7, 0xa6a3e6, 0xa6a3e8, 0xa2a3e3, 0xa9a3e9, 0x9794d9, 0x000000, 0x000000, 0x7a7a7a, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x6f6f6f, 0x232323, 0x000000, 0x000000, 0x000000, 0xffffff, 0x000000, 0x000000, 0x000000, 0x151515, 0x707070, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x696e68, 0x010000, 0x030045, 0xa6a3e8, 0xa7a1e7, 0xa5a2e7, 0xa6a3e6, 0xa5a2e9, 0xa2a3e6, 0x313076, 0x640000, 0x640000, 0x640000, 0xffa3a4, 0xfea3a0, 0xfea3a2, 0xfca59e, 0xffa3a4, 0xffa4a3, 0xffa4a5, 0xfea3a2, 0xfea3a2, 0xfea3a2, 0xfea3a2, 0xfca59e, 0xffa3a4, 0x000000, 0x121421, 0x9894e1, 0xa6a3e8, 0xa6a3e6, 0xa5a2e7, 0xa3a3e3, 0xa7a4e9, 0x535093, 0x010000, 0x767676, 0x7b7b7b, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0x7a7a7a, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x363636, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x151515, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x555557, 0x000116, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa5a2e7, 0xa6a3e8, 0xa7a4eb, 0xa0a0e6, 0x1b1658, 0x660000, 0x640000, 0x660000, 0xfea3a2, 0xffa4a3, 0xffa4a3, 0xfea6a4, 0xffa5a5, 0xffa4a1, 0xfea3a2, 0xffa4a3, 0xffa4a3, 0xffa4a3, 0xfea3a2, 0xffa4a3, 0xfea3a2, 0x000000, 0x21213b, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa4a3e7, 0xa8a2e8, 0xa6a3e8, 0x010010, 0x000000, 0x7a7a78, 0x7c7c7c, 0x7c7c7c, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x414141, 0x000000, 0x010101, 0x000000, 0x000000, 0x787878, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x575556, 0x04012e, 0xa8a2e8, 0xa5a2e7, 0xa5a2e7, 0xa6a3e6, 0xa6a3e8, 0xa7a4e9, 0x9e9be0, 0x110d48, 0x640000, 0x660000, 0xfea3a2, 0xfea2a3, 0xffa5a5, 0xffa7a6, 0xffa7a6, 0xffa7a5, 0xffa7a6, 0xfea3a2, 0xfea2a3, 0xfea2a3, 0xffa4a3, 0xfea4a3, 0xfea2a3, 0x0a0000, 0x000000, 0xa5a2e7, 0xa6a3e6, 0xa5a4e6, 0xa6a3e6, 0xa6a3e6, 0xa4a3e5, 0xa7a4e9, 0x000100, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7c7c7c, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x242424, 0x000000, 0x000000, 0x595959, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x5f645e, 0x030119, 0xa6a3e8, 0xa8a3e6, 0xa6a3e8, 0xa6a3ea, 0xa5a2e5, 0xa9a6eb, 0x9697da, 0x140a49, 0x630000, 0x640000, 0xffa8a7, 0xffa7a6, 0xffa7a6, 0xffa7a5, 0xfca7a4, 0x771e20, 0x000000, 0x010000, 0x000000, 0x000000, 0x010000, 0x000000, 0x000100, 0x11f12, 0x58588e, 0xa7a1e7, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa5a4e6, 0xa7a4e9, 0x010042, 0x7a7c7b, 0x7b7b7b, 0x7a7c7b, 0x7c7c7a, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x696969, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x737872, 0x010000, 0x0b0a36, 0xa6a3e8, 0xa4a3e7, 0xa6a3ea, 0xa6a3e6, 0xa6a3e8, 0x9498d7, 0x241c4f, 0x630000, 0x660000, 0xffa7a6, 0xffa7a5, 0xffa7a5, 0x580000, 0x4a0000, 0x0b0a43, 0x2c2e6b, 0x555498, 0x4f4c8f, 0x4a4889, 0x434582, 0x43457e, 0x5f6297, 0x8f8cc3, 0xa5a2e5, 0xa8a2e8, 0xa6a3e6, 0xa6a3e8, 0xa5a4e8, 0xa6a3e8, 0xa5a4e8, 0xa7a4eb, 0x030043, 0x000002, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x696969, 0x727272, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x29292b, 0x010010, 0xa5a2e7, 0xa8a2e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa29fe4, 0x646584, 0x080810, 0x640000, 0x772227, 0x340100, 0x0a0a52, 0x4c4b97, 0x8d8dd3, 0xa9a7f0, 0xa6a3e8, 0xa6a3e8, 0xa4a0ea, 0xa29fe6, 0x9f9ce3, 0xa6a3e8, 0xa6a3e8, 0xa7a4eb, 0xa6a3e6, 0xa6a3e6, 0xa7a4e9, 0xa7a4e9, 0xa7a4e9, 0xa7a4e9, 0xa6a3e8, 0xa6a5e9, 0x000002, 0x000002, 0x747474, 0x7a7a7a, 0x797b7a, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x6a6a6a, 0x000000, 0x5d5c7c, 0xa5a2e5, 0xa5a4e8, 0xa5a2e7, 0xa8a2e8, 0xa6a3e8, 0x9995e2, 0x373686, 0x020451, 0x252774, 0x6e70bd, 0xa5a4e8, 0xaeabf0, 0xa8a5ea, 0xaaa4ea, 0xa7a4e9, 0xa6a5e9, 0xa8a5e8, 0xa6a3e8, 0xa6a5e9, 0xa7a4e9, 0xa8a2e8, 0xa6a3e8, 0xa6a3e8, 0xa7a4e9, 0xa7a4e9, 0xa6a5e9, 0x000000, 0xa6a3e8, 0xa7a4e9, 0xa6a3e8, 0x45426f, 0x1c1e1d, 0x040404, 0x757472, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x767b75, 0x7b797a, 0x464644, 0x000000, 0x6b6b9d, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa2a3e3, 0xa9a3e9, 0xa5a2e5, 0xa5a4e8, 0xa4a3e5, 0xa6a3e8, 0xa5a4e8, 0xa6a3e8, 0xa1a2e2, 0xa7a1e9, 0xa3a3e9, 0xa7a4eb, 0xa7a4e9, 0xa6a5eb, 0xa6a3e8, 0xa7a4e9, 0xa5a4e8, 0xa7a4e9, 0xa6a3e8, 0xa7a6ec, 0x101010, 0x000000, 0xa7a4e9, 0xa7a4e9, 0xa5a4e6, 0xa9a3eb, 0xa2a1e3, 0x211f35, 0x1b1d1c, 0x000100, 0x7a7b7d, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x767b75, 0x7c7a7b, 0x7b7b7b, 0x272729, 0x000000, 0x010022, 0x9b98dd, 0xa5a2e7, 0xa2a3e3, 0xa9a3e9, 0xa5a3e4, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xaba9e8, 0xa3a3e3, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa2a3e4, 0xaaa7d6, 0x4c4e63, 0x000002, 0x030045, 0xa7a4e9, 0xa6a3e8, 0xa7a4e9, 0xa2a3e3, 0xa7a4e9, 0xa7a2e5, 0xa2a0d2, 0x000200, 0x020003, 0x777576, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x353334, 0x000002, 0x010010, 0x03002d, 0x9996d9, 0xa6a3e6, 0xa6a3e8, 0xa7a4e9, 0xa6a3e8, 0xa5a2e5, 0xa5a2e5, 0xa6a3e6, 0xa5a2e5, 0xa5a4e6, 0xa6a3e6, 0xa6a3e8, 0xa7a4e7, 0xa6a3e6, 0xa6a3e6, 0x9e9ccb, 0x5a5a72, 0x000000, 0x000000, 0x010000, 0xa7a4e9, 0xa7a4e9, 0xa6a3ea, 0xa6a3e8, 0xa6a3e8, 0xa5a2e7, 0xa8a2e8, 0xa8a2e8, 0x69688a, 0x000000, 0x000002, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x5e5e5e, 0x0e0e0e, 0x000000, 0x000110, 0x010022, 0x7c7aac, 0x9895da, 0xa7a4e9, 0xa7a2e5, 0xa5a2e5, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0x9593c4, 0x706e93, 0x010012, 0x000000, 0x000000, 0x000000, 0xa7a4e9, 0xa7a4e9, 0x9f99df, 0xa4a3e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa5a2e5, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0x201f2f, 0x000100, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x777c76, 0x7c7a7b, 0x797b7a, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x797979, 0x464646, 0x111610, 0x000002, 0x000000, 0x02000b, 0x000017, 0x010123, 0x01002c, 0x030037, 0x000029, 0x020123, 0x000015, 0x02000b, 0x000002, 0x000000, 0x000000, 0x000110, 0x00001b, 0xa7a4e9, 0xa5a4e8, 0xa6a3e8, 0xa5a4e6, 0xa7a4e9, 0xa6a3e6, 0xa6a3e8, 0xa3a3e3, 0xa8a2e8, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0x7f7ca9, 0x000000, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x696969, 0x434343, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000100, 0x020003, 0x000000, 0x000000, 0x000000, 0x000004, 0x020123, 0x9d97dd, 0xa5a4e6, 0xa7a4eb, 0xa4a3e7, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa7a2e5, 0xa6a3e8, 0xa2a3e3, 0xa8a2e8, 0xa5a2e5, 0xa6a3e6, 0xa5a4e6, 0xa6a3e6, 0x131522, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x767676, 0x767676, 0x767676, 0x767676, 0x767676, 0x767674, 0x7c7c7c, 0x7a7a78, 0x565553, 0x000000, 0x02012d, 0xa6a3e6, 0xa8a3e6, 0xa5a4e8, 0xa6a3e6, 0xa8a2e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0xa6a3e6, 0xa6a3e8, 0xa7a1e7, 0xa7a4e9, 0xa6a3e8, 0x5e5e7a, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7d7b7c, 0x020001, 0x020016, 0x9d9add, 0xa6a3e6, 0xa7a4e9, 0xa8a3e5, 0xa8a2e8, 0xa6a3e6, 0xa5a2e7, 0xa7a4e7, 0xa7a2e5, 0xa7a4e7, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0x8f8eb6, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x777c78, 0x7b7b7b, 0x7a7a78, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x000100, 0x000000, 0x000134, 0xa29fe4, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa6a3e6, 0xa2a4e1, 0xa8a2e8, 0xa6a3e8, 0xa5a2e7, 0xa5a2e7, 0xa5a2e5, 0xa2a2d8, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7c7c7c, 0x757a74, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x000100, 0x00012a, 0xa8a2ea, 0xa5a2e5, 0xa6a3e6, 0xa5a2e5, 0xa6a3e6, 0xa5a2e7, 0xa6a3e8, 0xa3a3e3, 0xa8a2ea, 0xa5a2e5, 0xa7a4e7, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7d, 0x7b7d7c, 0x7b7b7b, 0x7c7a7b, 0x000201, 0x000022, 0xa8a3e6, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa7a4e9, 0xa6a3e6, 0xa6a3e8, 0xa5a4e8, 0xa6a3e8, 0xa6a3e8, 0xa5a2e7, 0xa9a3e9, 0xa6a3e8, 0xa7a1e9, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7a7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b797a, 0x000000, 0x000115, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e6, 0xa8a2e8, 0xa4a3e7, 0xa5a2e5, 0xa6a3e6, 0xa9a3e9, 0xa8a2e8, 0xa5a2e5, 0xa5a2e7, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x020003, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x010002, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x01000000
	imagen_suicide:		.word		0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x626262, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x000000, 0x000000, 0x6d6d6d, 0x7b7b7b, 0x7d7d7d, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x000000, 0x01000000, 0x000000, 0x7d7d7d, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7a7a7a, 0x7a7a7a, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x444444, 0x777777, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x000000, 0x000000, 0x000000, 0x797979, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0xcacaca, 0xcbcbcb, 0x191919, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0x000000, 0x010101, 0x000000, 0x000000, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x414141, 0xffffff, 0xffffff, 0xf6f6f6, 0x9c9c9c, 0x303030, 0x000000, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x646464, 0x010101, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7c7c7c, 0x000000, 0x000000, 0xdadada, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xf7f7f7, 0xbababa, 0xababab, 0xababab, 0xaaaaaa, 0xcacaca, 0xf9f9f9, 0xeaeaea, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x424242, 0x000000, 0x6a6a6a, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xfdfdfd, 0x000000, 0x000000, 0x797979, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x717171, 0x010101, 0x161616, 0xefefef, 0xfafff9, 0xffffff, 0xfefefe, 0xfeffff, 0xffffff, 0xffffff, 0xffffff, 0xfeffff, 0xfafff9, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0x000000, 0x000000, 0x797979, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x010101, 0xa0a0a0, 0xffffff, 0xffffff, 0xfffeff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x777978, 0x000000, 0x5e5e5e, 0x7c7c7c, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x010101, 0x000000, 0x525252, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfffeff, 0xffffff, 0xe2e2e2, 0x000000, 0x000000, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x000000, 0x060606, 0x030303, 0xeaeaea, 0xffffff, 0xffffff, 0xfbfffc, 0xfffeff, 0xfefefc, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfdfffc, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xfffffd, 0x858384, 0x000000, 0x010101, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x020202, 0xababab, 0xffffff, 0xffffff, 0xffffff, 0xfafffb, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfcfef9, 0xffffff, 0xfefefe, 0xffffff, 0xfffeff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x010101, 0x474747, 0x7c7c7c, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0xa2a2a2, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfffeff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfeffff, 0xffffff, 0xfeffff, 0xffffff, 0xffffff, 0xeaeaea, 0x000000, 0x000000, 0x2c2c2c, 0x767676, 0x7a7a7a, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x838383, 0xd9d9d9, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfffeff, 0xe7a3a4, 0xe8a3a6, 0xe6a4a6, 0xe5a3a5, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xbfbfbf, 0x090909, 0x000000, 0x000000, 0x393939, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xfcfef9, 0xffffff, 0xffffff, 0xe6a4a6, 0xe6a4a6, 0xe6a4a6, 0xe8a3a6, 0xe6a4a6, 0xe3a3a1, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xd1d1d1, 0x000000, 0x000000, 0x000000, 0x5e5e5e, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfbfffa, 0xffffff, 0xffffff, 0xe9a4a7, 0xe9a4a7, 0xe6a4a6, 0xe8a3a6, 0xe7a2a5, 0xe4a4a4, 0xe8a3a8, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x010101, 0x767676, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x787b74, 0x7c7c7e, 0x797b7a, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x7a7c7b, 0x7b7b7b, 0x787a75, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x797b78, 0x7a7a7a, 0x7b7b7b, 0x7b7b79, 0x767b77, 0x7c7c7e, 0x7a7c7b, 0x7b7b7b, 0x7a7a7a, 0x7a7a7a, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xe7a5a7, 0xe7a5a7, 0xe7a5a7, 0xe9a4a7, 0xe7a5a7, 0xe6a4a6, 0xe6a4a6, 0xe7a5a6, 0xffffff, 0xffffff, 0xfeffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0x010101, 0x010101, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7a7a7a, 0x797b7a, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7a7c7b, 0x7b7b7b, 0x7b7d7c, 0x7a7a7a, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a78, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfcfcfc, 0xffffff, 0xe9a4a7, 0xe8a3a6, 0xe8a3a6, 0xe9a4a7, 0xe9a4a7, 0xe8a3a6, 0xffffff, 0xe9a4a7, 0xe5a5a6, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x010101, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7c7b79, 0x7b7b7b, 0x7b7b79, 0x7a7a7a, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfcfef9, 0xffffff, 0xe6a4a6, 0xe9a4a7, 0xe9a4a7, 0xe7a5a7, 0xe9a4a7, 0xe9a4a7, 0xfafff9, 0xe8a3a6, 0xe8a3a6, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x767b75, 0x7b7b7d, 0x7b7b7b, 0x777777, 0x595856, 0x525252, 0x343434, 0x000000, 0x000100, 0x000002, 0x000000, 0x000000, 0x000000, 0x7b7d7c, 0x7a7a7a, 0x7a7a7a, 0x767b75, 0x7b7b7b, 0x7a7c79, 0x7c7c7c, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfcfef9, 0xffffff, 0xe6a4a6, 0xe8a3a6, 0xe8a3a6, 0xe6a4a6, 0xe8a3a6, 0xe8a3a6, 0xe3a3a1, 0xe9a4a9, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x737872, 0x010103, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x000000, 0x000000, 0x000000, 0x010000, 0x000000, 0x000000, 0x7b7b7b, 0x767b74, 0x7b7b7b, 0x797b78, 0x7b7b7b, 0x7b7b7b, 0x7b7b7d, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xe8a3a6, 0xe8a3a6, 0xe9a4a7, 0xe9a4a7, 0xe9a4a7, 0xe8a3a6, 0xe6a4a6, 0xe6a4a6, 0xfefefc, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x151515, 0x010101, 0x000000, 0xa5a2e5, 0xa6a3e6, 0xa5a2e7, 0xa5a2e5, 0xa7a4e9, 0xa6a3e8, 0xa6a3e8, 0x4d4d65, 0x464553, 0x242529, 0x000100, 0x000000, 0x686868, 0x7a7a7a, 0x7c7c7c, 0x7a7a7c, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x000002, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xe7a5a7, 0xe6a4a6, 0xe6a4a6, 0xe8a3a6, 0xe7a5a7, 0xe6a4a6, 0xe6a4a6, 0xe7a5a7, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x919191, 0x000000, 0x626262, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x6e6e6e, 0x000000, 0x0e0e0e, 0x000000, 0x000000, 0xa19cde, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa5a2e9, 0xa6a3e6, 0xa5a4e6, 0xa6a3e8, 0xa6a3e6, 0xa5a2e7, 0xa5a2e7, 0xa5a2e7, 0x9a95d5, 0x52525e, 0x000000, 0x545454, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfafff9, 0xffffff, 0xffffff, 0xe9a4a7, 0xe8a3a6, 0xe6a4a6, 0xe9a4a7, 0xe8a3a6, 0xe4a4a4, 0xe9a4a9, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xfeffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xd2d2d2, 0x000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x6f6f6f, 0x000000, 0x2d2d2d, 0x030303, 0x9898d4, 0xa6a3ea, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa6a3e6, 0xa5a2e5, 0xa4a3e5, 0xa2a3e3, 0xa7a4e9, 0xa4a3e5, 0xa6a3e8, 0xa6a3e6, 0xa8a2e8, 0xa6a3e6, 0xa5a4e6, 0x7a7998, 0x000000, 0x4b4d4c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfafffb, 0xffffff, 0xfefefc, 0xe9a4a7, 0xe6a4a6, 0xe9a4a7, 0xe6a4a6, 0xe8a3a6, 0xe3a3a1, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x353535, 0x000000, 0x646464, 0x777974, 0x7b7b7d, 0x7a7a78, 0x707070, 0x000100, 0x000002, 0x000000, 0x9c9adb, 0xa2a3e3, 0xa6a3e8, 0xa4a3e5, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa7a1e7, 0xa6a3e8, 0xa3a4e4, 0xa8a2e8, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa8a3e6, 0xa6a3e6, 0xa8a2e8, 0xa3a4e4, 0x857fa5, 0x000100, 0x666666, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfeffff, 0xfdfffe, 0xe8a3a6, 0xe9a4a7, 0xe8a4a5, 0xe8a3a6, 0xe8a3a8, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfffffd, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xb8b8b8, 0x000000, 0x000000, 0x6e706f, 0x7a7a78, 0x7b7b7b, 0x141416, 0x000000, 0x9d98da, 0xa8a2e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa5a4e8, 0xa6a3e8, 0xa5a2e5, 0xa5a4e8, 0xa6a3e8, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa5a2e5, 0xa5a2e5, 0xa5a2e7, 0xa8a3e6, 0xa6a3e8, 0xa6a3e8, 0x000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfeffff, 0xffffff, 0xffffff, 0xffffff, 0xe7a5a7, 0xe8a3a6, 0xe9a4a7, 0xe9a4a7, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x7b7b7b, 0x000000, 0x000000, 0x676664, 0x000000, 0x000000, 0x9c9adb, 0xa6a3e6, 0xa8a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa7a2e5, 0xa5a2e5, 0xa6a3e6, 0xa5a4e6, 0xa7a4e9, 0xa6a3e8, 0xa8a2e8, 0xa6a3e8, 0xa6a3e8, 0xa7a4e7, 0xa6a3e8, 0x000000, 0x353535, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xdfdfdf, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xfdfffa, 0xffffff, 0xfdfffe, 0xffffff, 0xffffff, 0xe9a5a6, 0xe8a3a6, 0xe8a3a6, 0xfafffb, 0xffffff, 0xfefefc, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0x4e4e4e, 0x000100, 0x020001, 0x000100, 0x000100, 0xa5a4e6, 0xa5a4e8, 0xa5a2e7, 0xa5a2e5, 0xa2a4e1, 0xa6a3e8, 0xa5a2e5, 0xa8a2e8, 0xa5a2e5, 0xa5a2e5, 0x000000, 0x000000, 0x000100, 0x000002, 0x000100, 0x000000, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa3a3e3, 0xa8a2ea, 0xa4a3e5, 0xadabd2, 0x000000, 0x737375, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfafffb, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xe6a4a6, 0xfdfffe, 0xfdfffa, 0xfffeff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfafafa, 0xfefefe, 0xffffff, 0xd7d7d7, 0x000100, 0x000002, 0x000000, 0xa6a3e8, 0xa5a4e6, 0xa6a3e8, 0xa4a3e5, 0xa6a4e5, 0xa3a4e4, 0xa8a3e6, 0xa6a3e6, 0xa8a2e8, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x010000, 0x000000, 0x000000, 0xa5a4e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa4a4e4, 0xa8a2e8, 0xa4a3e5, 0xa6a3ea, 0x010100, 0x000000, 0x7a7c7b, 0x000000, 0x01000000, 0x000000, 0x000000, 0xd3d3d3, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfffffd, 0xfeffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfffffd, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xf5f5f5, 0xffffff, 0x838383, 0x000000, 0x000000, 0x000000, 0x403d58, 0xa6a3e6, 0x000000, 0x000000, 0x000100, 0x000000, 0xa6a3e6, 0xa6a3e6, 0xa8a2e8, 0xa7a1e7, 0xa6a3e6, 0xa5a2e5, 0x000000, 0xdfd58d, 0x000201, 0x8484ba, 0xa6a3e6, 0xa8a2e8, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0xa6a3e6, 0xa7a2e5, 0x8f8ead, 0x000000, 0x787a77, 0x000000, 0x01000000, 0x000000, 0x292929, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x9d9d9d, 0x000000, 0x000000, 0x6d6d6d, 0x000000, 0x000000, 0x000000, 0x000000, 0x010000, 0x000000, 0x000000, 0xa5a4e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa7a2e5, 0x000000, 0xfff4a4, 0x000000, 0x64638b, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0x9f9adc, 0x000000, 0x777978, 0x010101, 0x01000000, 0x000000, 0x010101, 0x000000, 0x6e6e6e, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfdfffc, 0xffffff, 0xfefefc, 0xffffff, 0xfefffd, 0xe6a4a6, 0xe8a3a6, 0xe7a5a7, 0xe2a5a4, 0xffffff, 0xffffff, 0xffffff, 0xfffffd, 0xffffff, 0xfffdfe, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xf3f3f3, 0x000000, 0x000000, 0x7b7b7b, 0x767b77, 0x010101, 0x000000, 0x000000, 0xf7ec9c, 0x000002, 0x8b86be, 0xa6a3e8, 0xa3a3e3, 0xa6a3e8, 0xa5a2e5, 0xa8a2e8, 0xa5a4e6, 0xa6a3e8, 0x000000, 0xfef3a3, 0x000100, 0x494867, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa7a1e9, 0xa8a2e8, 0xa6a3e8, 0xa2a3e3, 0xa8a2ea, 0xa5a4e6, 0xa6a3e8, 0xa5a2e5, 0x000000, 0x676968, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xfafffb, 0xffffff, 0xffffff, 0xffffff, 0xe8a3a6, 0xe9a4a7, 0xe9a5a6, 0xe9a4a7, 0xe2a5a2, 0xdc9c9d, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfdfdfb, 0xffffff, 0xfdfffc, 0xffffff, 0xffffff, 0xfbfbfb, 0x8b8b8b, 0x000000, 0x000100, 0x7b7b7b, 0x000100, 0x000002, 0xa5a2e5, 0x000000, 0xfff4a2, 0x000000, 0x7e7bb0, 0xa6a3e8, 0xa1a2e2, 0xa7a4e9, 0xa5a2e5, 0xa6a3e8, 0xa8a2e8, 0xa8a2e8, 0x000000, 0xfef3a1, 0x000100, 0x7c7a8f, 0xa5a2e7, 0xa6a3e8, 0xa5a2e7, 0xa6a3e6, 0xa5a2e7, 0xa6a3e8, 0xa2a3e3, 0xa8a2e8, 0xa5a2e5, 0xa6a3e8, 0xa5a4e8, 0x000000, 0x686868, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x000000, 0x000000, 0xf8f8f8, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xe9a4a7, 0xe9a4a7, 0xe9a2a6, 0xe7a2a5, 0xe9a4a7, 0xe8a3a6, 0xffffff, 0xffffff, 0xffffff, 0xfdfdfd, 0xfcfbf9, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xf1f1f1, 0x000000, 0x000000, 0x7b7b79, 0x7a7a7a, 0x000000, 0x000000, 0xa5a2e5, 0x000000, 0xfff2a3, 0x000000, 0x7c79ae, 0xa5a2e7, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa8a3e6, 0x676886, 0x000000, 0x000201, 0x908fc9, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0x000000, 0x686868, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x000000, 0x000000, 0xc8c8c8, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xe6a4a6, 0xe8a4a5, 0xe8a3a6, 0xe6a4a6, 0xe9a4a7, 0xe8a3a6, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xfdfdfd, 0xfffeff, 0xffffff, 0xffffff, 0xffffff, 0xe9e9e9, 0x000000, 0x010100, 0x7a7a7a, 0x7b7b7b, 0x000000, 0x000000, 0xa6a3e6, 0x000002, 0xf6eb9c, 0x000000, 0xa29fe2, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0x7371a2, 0x8e8ac5, 0xa5a2e7, 0xa5a2e5, 0xa5a4e8, 0xa8a3e6, 0xa6a3e6, 0xa5a4e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa5a2e5, 0x000000, 0x6b696a, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x5f5f5f, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xfdfffa, 0xfffeff, 0xfffffd, 0xfffeff, 0xe6a4a6, 0xe9a4a7, 0xe7a3a4, 0xe7a5a7, 0xe3a3a1, 0xe9a4a7, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfafff9, 0xffffff, 0xffffff, 0x6f6f6f, 0x000000, 0x010101, 0x797b7a, 0x000000, 0x000100, 0x010000, 0xa5a3e4, 0x000201, 0x212121, 0x000000, 0xa4a3e5, 0xa6a3e6, 0xa1a2e2, 0xa9a3e9, 0xa4a3e5, 0xa6a3ea, 0xa6a3e8, 0xa5a2e5, 0xa5a2e7, 0xa6a3e6, 0xa4a4e4, 0xa6a3e8, 0xa4a3e7, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa5a2e7, 0xa7a1e7, 0xa3a3e3, 0xa9a3e9, 0xa6a3e6, 0xa6a3e6, 0x9d9bdc, 0x000000, 0x696969, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x5f5f5f, 0x010101, 0x010101, 0xffffff, 0xfefefe, 0xffffff, 0xfcfefb, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xe9a2a6, 0xe8a4a5, 0xe8a3a6, 0xe3a3a1, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xfdfffa, 0xffffff, 0xfcfcfa, 0x2d2d2d, 0x000000, 0x000000, 0x7b7b79, 0x000000, 0x000100, 0x020001, 0xa5a2e5, 0xa6a3e8, 0xa5a2e7, 0xa6a3e6, 0xa6a3e6, 0xa5a2e7, 0xa3a3e3, 0xa8a2e8, 0xa5a2e7, 0xa9a3e9, 0xa5a2e7, 0xa8a2ea, 0xa6a3e6, 0xa5a4e8, 0xa3a2e4, 0xa6a3e8, 0xa5a2e7, 0xa8a3e6, 0xa5a4e8, 0xa6a3e6, 0xa8a3e6, 0xa8a2e8, 0xa3a3e3, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0x9492c1, 0x000000, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x606060, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfffffd, 0xffffff, 0xfffeff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfffffd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x5c5c5c, 0x000000, 0x000000, 0x000000, 0x000000, 0x050503, 0x7876a7, 0xa6a3e6, 0xa7a1e7, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa8a3e6, 0xa7a4e9, 0xa8a2e8, 0xa7a2e5, 0xa5a4e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa5a2e7, 0x777793, 0x000000, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x4a4a4a, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xfeffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x949494, 0x000000, 0x000000, 0x000201, 0x4a4968, 0x9e98d8, 0xa6a3e8, 0xa6a3e6, 0xa8a2e8, 0xa4a3e5, 0xa6a3e6, 0xa5a2e7, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa8a2e8, 0xa6a3e8, 0xa6a3e8, 0xa8a3e6, 0xa5a4e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa5a4e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3ea, 0xa6a3e8, 0x565563, 0x010101, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x323232, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xfdfffc, 0xffffff, 0xffffff, 0xffffff, 0xfeffff, 0xffffff, 0xffffff, 0xfffffd, 0xfdfffc, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfdfffa, 0xffffff, 0xfffffd, 0xe2e2e0, 0x000000, 0x000000, 0x8683ba, 0xa8a3e6, 0xa3a3e3, 0xa8a2e8, 0xa5a2e7, 0xa8a2e8, 0xa4a3e5, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa3a3e3, 0xa8a2e8, 0xa5a2e5, 0xa8a2e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3ea, 0xa5a4e8, 0xa2a3e3, 0xa8a2e8, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa1a2e2, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0x000200, 0x000002, 0x7a7c7b, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x1a1a1a, 0x010101, 0x000000, 0x868686, 0xbababa, 0xf2f2f2, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xe2e2e2, 0x969696, 0x000100, 0x010103, 0x000000, 0x000002, 0x000000, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa2a4e1, 0xa9a2e8, 0xa5a4e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa3a3e3, 0xa8a2ea, 0xa6a3e6, 0xa5a2e5, 0xa6a3e6, 0xa7a4e9, 0xa6a3e6, 0xa6a3e8, 0xa4a4e4, 0xa8a2e8, 0xa5a4e6, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa2a3e3, 0xa8a2e8, 0xa4a3e5, 0x9896d7, 0x000000, 0x000000, 0x797979, 0x000000, 0x01000000, 0x000000, 0x7a7a7a, 0x040404, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x707070, 0xdddddd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x8f8f8f, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000002, 0xa7a4e7, 0xa6a3e6, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa5a2e5, 0x000000, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa8a2e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0xa5a2e7, 0xa4a2e3, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0x666591, 0x000000, 0x767676, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x4d4d4d, 0x4a4a4a, 0x000000, 0x373737, 0x151515, 0x000000, 0x000000, 0x000000, 0x000000, 0xf9f9f9, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xcecece, 0x222222, 0x000000, 0x030303, 0x1d1d1d, 0x464646, 0x686868, 0x3e403f, 0x000000, 0x000000, 0xa6a3e6, 0xa6a3e6, 0xa8a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa7a4e9, 0xa6a3e8, 0xa4a3e7, 0xa8a3e6, 0xa5a3e4, 0x000000, 0xa7a4e9, 0xa8a2e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa8a3e6, 0xa6a3e8, 0xa6a3e6, 0xa5a2e7, 0xa3a1e2, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa8a2e8, 0xa5a2e5, 0x2b2a3c, 0x000000, 0x7c7c7a, 0x7a7a7a, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x5e5e5e, 0x2b2b2b, 0x000000, 0x000000, 0x010101, 0xc9c9c9, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xadadad, 0x000000, 0x010101, 0x424242, 0x757575, 0x7b7b7b, 0x7b7b7b, 0x767b77, 0x010101, 0x000000, 0xa8a2e8, 0xa6a3e6, 0xa5a4e8, 0xa6a3e6, 0xa6a3e8, 0xa3a3e3, 0xa8a2e8, 0xa4a3e5, 0xa5a2e7, 0xa5a2e5, 0xa6a3e6, 0xa6a3e6, 0x020001, 0x000000, 0xa9a3e9, 0xa5a4e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa5a2e7, 0xa5a2e7, 0xa3a3e3, 0xa7a1e7, 0xa5a4e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa3a3e3, 0xa8a2e8, 0x9a96d1, 0x000000, 0x000000, 0x7a7a7a, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x6f6f6f, 0x232323, 0x000000, 0x000000, 0xbdbdbd, 0xffffff, 0xffffff, 0xacacac, 0x000000, 0x151515, 0x707070, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x696e6a, 0x010101, 0x000000, 0xa8a2e8, 0xa6a3e8, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa2a3e4, 0xa8a2e8, 0xa4a3e5, 0xa6a3e6, 0xa6a3e8, 0xa8a3e6, 0x000000, 0x000000, 0x000100, 0xa9a3e9, 0xa4a3e5, 0xa6a3e8, 0xa5a2e5, 0xa8a2e8, 0xa5a2e7, 0xa6a3e8, 0xa3a3e3, 0xa8a2e8, 0xa5a4e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa3a3e3, 0xa8a2e8, 0x505170, 0x000000, 0x767676, 0x7b7b7b, 0x7b797a, 0x000100, 0x01000000, 0x000000, 0x7a7a7a, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x363636, 0x000000, 0x000000, 0xcacaca, 0xe4e4e4, 0x000000, 0x151515, 0x787878, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x555555, 0x000000, 0xa8a3e6, 0xa5a2e7, 0xa7a4e7, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0x000000, 0x000000, 0x010000, 0x010101, 0x010103, 0x000000, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0xa5a2e5, 0xa8a3e6, 0xa6a3e8, 0xa6a4e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e8, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7a7a78, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x434343, 0x000000, 0x000000, 0x3e3e3e, 0x000000, 0x787878, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x565656, 0x000000, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa8a3e6, 0xa5a2e7, 0xa6a3e8, 0x010101, 0x010101, 0x000000, 0x000000, 0x000000, 0xe9a4a7, 0xe6a4a6, 0x000000, 0x000000, 0xa5a2e7, 0xa8a3e6, 0xa6a3e8, 0xa8a2e8, 0xa6a3e6, 0xa8a2e8, 0xa5a2e7, 0xa4a2e3, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0x8a87be, 0x000000, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7c7c7c, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x242424, 0x000000, 0x000000, 0x595959, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x61635e, 0x020001, 0xa5a2e5, 0xa6a3e8, 0xa5a4e6, 0xa5a4e6, 0xa5a2e5, 0x000002, 0x000100, 0x020001, 0x000000, 0xe8a3a6, 0xe6a4a5, 0xe9a4a7, 0xe9a4a7, 0xe8a4a5, 0xe3a3a1, 0x010002, 0x000000, 0x000000, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa3a3e3, 0xa6a0e6, 0xa5a4e6, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa4a3e5, 0xa8a2e8, 0x000000, 0x7b7b7d, 0x7a7a78, 0x7b7b7b, 0x797b7a, 0x000002, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x696969, 0x000000, 0x000000, 0x767b77, 0x7b7b7b, 0x797b78, 0x7b7b79, 0x7b7b79, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x757772, 0x020001, 0x080a09, 0xa6a3e8, 0xa6a3e6, 0x010101, 0x000002, 0x010000, 0x000100, 0xe7a5a9, 0xe8a3a6, 0xe7a2a7, 0xe6a4a6, 0xe8a3a8, 0xe8a3a6, 0xe6a4a5, 0xe4a4a2, 0xeaa5a8, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000002, 0xa1a1df, 0xa8a2ea, 0xa8a2e8, 0xa6a3e8, 0xa6a3e6, 0xa5a2e7, 0xa6a3e6, 0xa6a3e8, 0xa4a3e5, 0xa9a3e9, 0x000100, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x696969, 0x727272, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7c7c7a, 0x7c7c7e, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x292b2a, 0x000000, 0xa6a3e8, 0x000000, 0x010101, 0x191923, 0xe6a4a6, 0xe9a4a9, 0xe9a4a7, 0xe8a3a6, 0xe7a5a6, 0xe8a3a6, 0xe9a4a7, 0xe7a5a7, 0xe8a3a6, 0xe9a5a6, 0x000000, 0xa5a2e7, 0xa6a3ea, 0x000000, 0x000100, 0x020001, 0xa4a1e4, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e8, 0xa6a3e6, 0xa8a2e8, 0xa6a3e8, 0xa8a2e8, 0x8787bd, 0x000000, 0x000000, 0x747474, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7d7b7c, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7c7c7e, 0x6b6b6b, 0x000000, 0x000000, 0xf0909, 0xe8a3a6, 0xe9a4a7, 0xe6a4a6, 0xe9a4a7, 0xe9a5a6, 0xe9a5a6, 0xe8a3a6, 0xe8a4a5, 0xe9a4a7, 0xe9a5a6, 0xe8a3a6, 0xe8a4a5, 0x000100, 0xa5a2e7, 0xa5a2e5, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa8a3e6, 0xa6a3e6, 0xa8a2e8, 0x000000, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0x444353, 0x1c1c1c, 0x030504, 0x747474, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x757a74, 0x7c7c7c, 0x797b78, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7a7b7d, 0x787a75, 0x000000, 0x010100, 0x362724, 0xdf9fa0, 0xe8a3a6, 0xe6a4a5, 0xe9a4a9, 0xe4a2a3, 0xe9a4a9, 0xe6a4a6, 0xe8a3a6, 0xe6a4a6, 0xe9a4a9, 0xe7a2a5, 0xdea0a1, 0x000100, 0x010000, 0xa6a3e8, 0xa9a2e6, 0xa6a3e6, 0xa5a4e8, 0xa6a3e8, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a5e7, 0xa6a3e8, 0xfff, 0x010101, 0xa6a3e8, 0xa6a3e8, 0xa4a4e4, 0xa6a3e6, 0xa4a3e5, 0x1f2024, 0x1a1a1a, 0x000002, 0x7a7c7b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x757a76, 0x7c7c7e, 0x7a7c79, 0x7a7a7a, 0x7c7c7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000100, 0x000000, 0xc89091, 0xe7a2a5, 0xe6a4a5, 0xe9a5a6, 0xe8a3a6, 0xe8a3a6, 0xe4a2a3, 0xe9a4a7, 0xe6a4a5, 0xe6a4a6, 0xe8a3a6, 0xe8a3a6, 0xe2a0a2, 0xe7a5a6, 0x000100, 0xaaa3e9, 0xa5a2e5, 0xa7a4e9, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa4a3e5, 0xa9a3e9, 0xa7a6e8, 0x000000, 0x010101, 0xa7a4e9, 0xa6a3e8, 0xa6a3e6, 0xa3a4e4, 0xa8a2e8, 0xa6a3e6, 0xa19ecb, 0x010302, 0x000000, 0x767674, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x010000, 0x000000, 0xd4989a, 0xe9a4a7, 0xe8a3a6, 0xe8a3a8, 0xe6a4a8, 0xe8a4a5, 0xe8a3a6, 0xe8a3a6, 0xe9a4a7, 0xe8a3a6, 0xe8a3a6, 0xe8a3a6, 0xe8a3a8, 0xe8a3a6, 0x010103, 0x000000, 0xa6a3e8, 0xa7a4e9, 0xa6a3e8, 0xa5a4e8, 0xa6a3e8, 0xa5a2e5, 0xa6a5e9, 0xa8a5ea, 0x000000, 0x000000, 0xa6a3e8, 0xa8a2e8, 0xa8a2e8, 0xa6a3e8, 0xa5a2e7, 0xa6a3ea, 0xa6a3e6, 0xa6a3ea, 0xa6a3e6, 0x67687a, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b797a, 0x000002, 0x000100, 0x9f9adc, 0xe6a4a6, 0xe8a4a5, 0xe8a3a6, 0xe6a4a8, 0xe4a2a6, 0xe9a4a9, 0xe7a5a7, 0xe8a3a6, 0xe6a4a6, 0xe8a3a6, 0xe8a3a6, 0xe9a4a7, 0xe8a3a6, 0xe8a4a5, 0x000000, 0x010000, 0xa5a4e8, 0xa6a3e8, 0xa6a3e8, 0xa6a5e7, 0xa7a4e7, 0x010103, 0x010000, 0x000000, 0x000002, 0xa7a4e9, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa4a3e5, 0xa5a2e5, 0xa7a1e7, 0xa6a3e8, 0xa5a2e7, 0x1d1e20, 0x000000, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x757c75, 0x7b7b7b, 0x797b7a, 0x7a7c7b, 0x7b7b7b, 0x010000, 0x000100, 0xa19ee1, 0xa4a4e4, 0xe9a4a7, 0xe6a4a6, 0xe8a3a6, 0xe9a4a7, 0xe6a4a6, 0xe6a4a5, 0xe6a4a5, 0xe3a3a3, 0xeaa3a9, 0xe6a4a6, 0xe8a3a6, 0xe8a3a6, 0xe6a1a4, 0x1c1412, 0x000000, 0x000100, 0x000000, 0x000000, 0x010000, 0x000000, 0x000201, 0x000000, 0x000000, 0xa4a3e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa4a3e5, 0xa6a3e8, 0xa6a3e8, 0xa7a4e7, 0xa3a3e1, 0xa9a3e9, 0xa4a3e7, 0xa7a2e5, 0xa5a2e5, 0x7e7d9c, 0x000100, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x777c76, 0x7c7c7e, 0x7a7c7b, 0x7c7c7c, 0x7b7b7b, 0x7c7a7b, 0x7b7b7b, 0x7a7c7b, 0x767b75, 0x7b7b7b, 0x797b78, 0x7c7c7e, 0x010101, 0x000000, 0xa19fe0, 0xa5a2e5, 0xa4a4e4, 0xa5a4e6, 0xe6a4a6, 0xe9a5a6, 0xe6a4a6, 0xe8a3a6, 0xe6a4a6, 0xe8a4a5, 0xe4a4a2, 0xe9a4a9, 0xe6a4a5, 0xe8a3a6, 0xe6a4a5, 0xa37275, 0x010100, 0x000000, 0x000100, 0x010101, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x9b99d8, 0xa0a4e4, 0xa5a2e5, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa4a3e5, 0xa7a4e9, 0xa6a3e6, 0xa0a4e3, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa9a3e9, 0xa6a3e8, 0x141414, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7d, 0x797b7a, 0x7b7b7b, 0x7a7a7a, 0x000000, 0x000000, 0xa19ee1, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xe8a3a6, 0xe9a4a7, 0xe8a3a6, 0xe6a4a5, 0xe6a4a6, 0xe6a4a6, 0xe7a5a7, 0xe9a4a7, 0xe8a3a6, 0xe7a5a7, 0xe7a5a6, 0xe1a1a2, 0x000000, 0x000000, 0x767676, 0x767676, 0x767676, 0x7b7b7b, 0x797b7a, 0x555555, 0x000000, 0x000201, 0xa6a3e6, 0xa6a3e8, 0xa7a4e7, 0xa6a3e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0x605e6b, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x797b7a, 0x7a7a7c, 0x000000, 0x9f9dde, 0xa5a4e6, 0xa6a3e8, 0xa6a3e8, 0xa5a2e5, 0xa6a3e6, 0xa6a3e8, 0xe9a4a9, 0xeaa3a7, 0xe9a5a6, 0xe6a4a5, 0xe9a5a6, 0xe8a4a5, 0xe9a4a7, 0xe7a5a6, 0xe7a5a7, 0xeaa3a7, 0xe5a3a5, 0x010101, 0x000000, 0x7a7c79, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x000000, 0x010000, 0xa29bde, 0xa6a3e8, 0xa6a3ea, 0xa8a3e6, 0xa6a3e6, 0xa5a2e5, 0xa5a2e7, 0xa7a4e7, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa8a2e8, 0x908daa, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x767b75, 0x7c7c7e, 0x797b7a, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7a7c7b, 0x767b75, 0x7b7b7b, 0x000002, 0x000002, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa5a2e5, 0xa2a3e3, 0xa7a4e9, 0xa5a2e5, 0xa8a2e8, 0xe9a4a7, 0xe8a3a6, 0xe9a4a9, 0xe9a4a7, 0xe4a4a4, 0xe8a3a6, 0xe6a4a6, 0xe9a4a7, 0xe7a3a4, 0x000000, 0x000000, 0x797b7a, 0x767b75, 0x7b7b7d, 0x7b7b79, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x000000, 0x000000, 0x000100, 0xa4a1e4, 0xa5a4e6, 0xa8a2e8, 0xa6a3e6, 0xa7a4e7, 0xa5a4e6, 0xa5a2e7, 0xa2a3e3, 0xa9a3eb, 0xa5a2e7, 0xa5a2e5, 0xa5a2e7, 0xa6a3e8, 0xa4a2d1, 0x000000, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x757a74, 0x7b7b7d, 0x797b7a, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7a7c7b, 0x767b75, 0x000002, 0x000000, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0xa5a2e5, 0xa5a2e7, 0xa4a4e4, 0xa8a2e8, 0xa5a2e5, 0xa8a2e8, 0xa6a3e6, 0xe9a4a7, 0xe9a4a7, 0xe9a4a7, 0xe1a4a3, 0xe8a3a8, 0xe6a4a5, 0xe9a4a7, 0xa5a2e5, 0x010101, 0x000000, 0x7a7c7b, 0x767b75, 0x7c7a7b, 0x797b78, 0x7a7c7b, 0x7a7a7a, 0x7b7b7d, 0x7b7b7b, 0x000000, 0x000100, 0xa6a3ea, 0xa5a4e6, 0xa9a4e6, 0xa5a2e5, 0xa5a2e9, 0xa5a2e7, 0xa8a3e6, 0xa3a3e1, 0xa8a2e8, 0xa4a2e3, 0xa5a2e9, 0xa5a2e5, 0xa6a3e8, 0xa5a4e6, 0x000000, 0x01000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x000000, 0xa6a3e8, 0xa6a3e6, 0xa6a3ea, 0xa6a3e8, 0xa7a4e7, 0xa6a3e6, 0xa6a3e8, 0xa5a2e7, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0x000000, 0x000000, 0x7b7b79, 0x7a7a7a, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0xa8a2e8, 0xa6a3e6, 0xa5a2e5, 0xa4a3e5, 0xa6a3e6, 0xa8a3e6, 0xa8a3e6, 0xa8a3e6, 0xa6a3e8, 0xa5a2e7, 0xa7a4e9, 0xa8a3e6, 0xa7a1e7, 0xa6a3e8, 0x000002, 0x01000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b79, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x010101, 0x000000, 0xa5a2e7, 0xa6a3e8, 0xa5a2e5, 0xa7a1e7, 0xa6a3e8, 0xa6a3e8, 0xa5a2e7, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa7a1e7, 0xa6a3e8, 0xa8a3e6, 0xa9a3e9, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0x9593d2, 0x010101, 0x000000, 0x7a7c7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7d, 0x7b7b7b, 0x7a7c7b, 0x000000, 0x010100, 0xa6a3e6, 0xa5a4e6, 0xa8a2e8, 0xa7a4e9, 0xa6a3ea, 0xa6a3e6, 0xa8a2e8, 0xa8a2e8, 0xa5a2e5, 0xa8a2e8, 0xa5a2e7, 0xa6a3e6, 0xa7a4e7, 0xa8a2e8, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x010002, 0x000100, 0x000000, 0x000000, 0x000002, 0x000000, 0x000000, 0x000100, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x010101, 0x000000, 0x010000, 0x000000, 0x000000, 0x010101, 0x000000, 0x000000, 0x000000, 0x000100, 0x000002, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010103, 0x000100, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x010101, 0x010101, 0x000000, 0x000000, 0x010000, 0x000000, 0x000000, 0x01000000, 0x01000000
	imagen_ouchie:		.word		0x000100, 0x010000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x010002, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x000000, 0x000100, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x020001, 0xd3d1ba, 0xd1d1b9, 0xd3d1ba, 0xd3d1b8, 0xd2d0b7, 0xd2d0b7, 0xd2d2b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd2d0b7, 0xd2d2b8, 0xd2d2b8, 0xd1d1b7, 0xd2d2ba, 0xd3d1ba, 0xd2d2b8, 0xd1d1b9, 0x000000, 0x000002, 0x000100, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd2d0b9, 0xd3d1ba, 0xd3d1b8, 0xd3d1ba, 0xd2d0b7, 0xd2d0b7, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd2d0b7, 0xd1d1b9, 0xd3d1ba, 0xd2d0b7, 0xd2d0b7, 0xd2d2ba, 0xd3d1b8, 0xd2d0b7, 0x000000, 0x000000, 0x000002, 0x7b7b7b, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000100, 0xd2d2ba, 0xd3d1b8, 0xd2d0b7, 0xd3d1ba, 0xd3d1b8, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xced3b5, 0xd3d1ba, 0xd2d2b8, 0xd1d1b9, 0xd1d1b7, 0xd2d2ba, 0xd3d1b8, 0x000000, 0x000100, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000100, 0xd2d2b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1b8, 0xd2d2b8, 0xd2d0b9, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xcdd2b2, 0xd3d1ba, 0xd1d1b7, 0xd2d2ba, 0xd2d0b7, 0xd2d0b7, 0xd2d2b6, 0x010101, 0x000100, 0x010103, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x010000, 0x01000000, 0x000000, 0xd3d1ba, 0xd2d0b9, 0xd2d0b7, 0xd3d1b8, 0xd3d1b8, 0xd2d0b9, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d0b9, 0xd1d1b7, 0xd3d1ba, 0xd2d0b9, 0xd2d0b9, 0xd1d1b9, 0x010101, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7c79, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000100, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1b8, 0xd3d1ba, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd2d0b7, 0xd1d1b7, 0xd3d1b8, 0xd1d1b7, 0x000000, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7d, 0x7b7b7b, 0x7a7b7d, 0x7b7b79, 0x7b7b7d, 0x000000, 0x01000000, 0x000100, 0xd2d2ba, 0xd2d2b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd2d0b7, 0xd2d2b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xcfd2b5, 0xd4cfb9, 0xd2d0b7, 0xd2d2ba, 0xd3d2b6, 0x000000, 0x000000, 0x000000, 0x767b75, 0x7b7b7b, 0x7a7a7a, 0x7c7a7b, 0x7a7a7a, 0x7b7b7b, 0x7a7a78, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0xd3d1ba, 0xd1d1b9, 0xd1d1b9, 0xd3d1b8, 0x000000, 0x000000, 0x000000, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd1cfb8, 0xd2d0b7, 0xd3d1b8, 0xd2d2b8, 0x000002, 0x000000, 0x000000, 0x7a7c7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d2ba, 0xd2d0b7, 0xd2d0b7, 0xd3d1ba, 0x000000, 0x000000, 0x000201, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xcfd2b5, 0xd5d0ba, 0xd1d1b7, 0x010000, 0x000201, 0x000000, 0x7a7a7a, 0x7a7a7c, 0x7a7a7a, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x010101, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0xd3d1ba, 0xd2d2b8, 0x000000, 0x000000, 0x010000, 0x7c7a7b, 0x7b7b7b, 0x797979, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7c7c7c, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd1d1b7, 0x000000, 0x000000, 0x000000, 0x000201, 0x7b7b7b, 0x7b7b7d, 0x7b7b7b, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd1d1b9, 0xd2d2b8, 0x000000, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7d, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x010101, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0x020001, 0x000000, 0x000000, 0x000000, 0x7c7a7b, 0x7b7b7b, 0x7c7a7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0xd2d0b9, 0xd2d2b8, 0xd1d1b9, 0xd3d1b8, 0xd2d0b7, 0xd3d1ba, 0xd2d2ba, 0xced1b2, 0xd4d2bb, 0xd1d1b9, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1b8, 0xd1d1b9, 0xcfd2b7, 0x020003, 0x000000, 0x000100, 0x7a7a78, 0x7b7b7d, 0x7a7a7a, 0x7b7b79, 0x757c75, 0x7c7c7c, 0x797b78, 0x7b7b7b, 0x000000, 0x000002, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd2d0b9, 0xd3d1b8, 0xd2d0b7, 0xd3d1ba, 0xd3d1b8, 0xd3d1ba, 0xd1cfb6, 0xd2d2ba, 0xd2d2ba, 0xd2d0b7, 0xd2d2ba, 0xd2d0b9, 0xd3d1b8, 0xd3d1b8, 0xd2d2b8, 0x000000, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7d7a, 0x7b7b7b, 0x000000, 0x7a7a7c, 0x7b7b79, 0x7b7b7b, 0x7a7a7c, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d0b7, 0xd2d2b8, 0xd2d2b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1b8, 0xd1d1b9, 0xd1d1b7, 0xd2d0b9, 0xd1d1b9, 0xd2d0b9, 0xd3d1ba, 0xd2d0b9, 0xd2d2ba, 0xd1d1b9, 0x000200, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x000000, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0xd3d1ba, 0xd1d1b7, 0xd2d2ba, 0xd2d0b7, 0xd1d1b7, 0xd1d1b9, 0xd1d1b7, 0xced1b2, 0xd3d1ba, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010101, 0x000100, 0x010101, 0x000100, 0x000100, 0x000000, 0x7b7b7d, 0x7b7b7b, 0x7b7b7b, 0x757c74, 0x7b7b7b, 0x000100, 0x7b7b7b, 0x7b7b7b, 0x7b7b7d, 0x7a7a7a, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xccd1b3, 0xd3d1ba, 0xd2d0b7, 0xd1d1b7, 0xd2d0b7, 0xd1d1b7, 0xd2d2ba, 0xd2d2ba, 0xc8cdad, 0x020001, 0x000000, 0x000100, 0x000000, 0x000000, 0x000000, 0x000002, 0x000100, 0x020202, 0x000000, 0x000002, 0x000000, 0x000000, 0x000000, 0x7a7c7b, 0x767d76, 0x7b7b7b, 0x7a7c7b, 0x000000, 0x7b7b7b, 0x7b7b7d, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1b8, 0xd2d0b9, 0xd2d2b8, 0x1c1b19, 0x000000, 0x242520, 0x000000, 0x000000, 0xa4a3e7, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa6a3e6, 0xa5a3d4, 0x9090ac, 0x2b2b2b, 0x000000, 0x010101, 0x68686a, 0x7a7a7c, 0x7b7b7b, 0x7b7b7b, 0x7c7c7a, 0x7b7b7b, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd2d0b7, 0x858674, 0x000002, 0x000000, 0x010101, 0x9f9dde, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa7a4e9, 0xa6a3e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e6, 0xa5a2e7, 0xa6a3e6, 0xa6a3e8, 0x9a95d5, 0x303030, 0x000000, 0x545454, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0xd3d1ba, 0xd2d0b7, 0xd2d0b9, 0xd2d0b7, 0x000000, 0x000100, 0x020403, 0x999ad3, 0xa9a3e9, 0xa6a3e8, 0xa7a1e7, 0xa6a3e8, 0xa8a3e6, 0xa6a3e8, 0xa6a3e8, 0xa4a3e5, 0xa7a4e9, 0xa6a3e8, 0xa8a2e8, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa5a2e7, 0x7a7b99, 0x010101, 0x4d4f4e, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xcfcfb3, 0xd3d3b9, 0xd2d0b7, 0xd1d1b7, 0x000000, 0x57565e, 0x000100, 0x9c99dc, 0xa4a4e4, 0xa9a3e9, 0xa5a5e5, 0xa8a2e8, 0xa5a2e5, 0xa8a2e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa3a4e4, 0x857fa5, 0x000100, 0x666666, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d2b8, 0xd2d2ba, 0xd1d1b7, 0x000000, 0x8a89a9, 0x9e99d9, 0xa6a3e8, 0xa5a4e8, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa6a5e7, 0xa8a2e8, 0xa8a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0x000000, 0x000000, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1b8, 0xd2d2ba, 0xd2d0b9, 0x000000, 0x9f9add, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa5a2e5, 0xa5a2e7, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa8a3e6, 0xa5a4e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa7a4e7, 0xa6a3e8, 0x000000, 0x353535, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xcdd0b3, 0xd1d1b9, 0x000200, 0x424453, 0xa8a3e6, 0x000000, 0x000000, 0x000000, 0xa3a4e4, 0xa8a2e8, 0xa6a3e6, 0xa7a4e9, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa5a4e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa3a3e3, 0xa8a2ea, 0xa4a3e5, 0xadabd2, 0x000000, 0x737375, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xcdd0b3, 0xd3d1b8, 0x000000, 0xa5a2e7, 0x000000, 0xa8a2e8, 0xa5a2e5, 0xa7a1e7, 0xa2a3e4, 0xa8a3e6, 0xa5a4e6, 0xa8a2e8, 0xa5a2e5, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa4a4e4, 0xa8a2e8, 0xa4a3e5, 0xa6a3ea, 0x010100, 0x000000, 0x7a7c7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1b8, 0x000000, 0x2f302a, 0x000000, 0xa6a3e8, 0xa6a3e6, 0xa5a2e7, 0xa6a3e8, 0xa4a3e7, 0xa8a2e8, 0xa5a4e6, 0xa5a2e5, 0xa8a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e6, 0xa7a2e5, 0x8f8ead, 0x000000, 0x787a77, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d3b9, 0x000002, 0x020305, 0x9d9add, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0x010100, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0x9f9adc, 0x000000, 0x777978, 0x010101, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xcdd0b1, 0x000002, 0x8b8ac3, 0x9f9adc, 0xa8a2e8, 0xa6a3e6, 0xa5a4e6, 0xa4a3e5, 0xa3a4e4, 0xa9a3e9, 0xa6a4e5, 0xa8a2e8, 0x000000, 0xa7a4e9, 0xa6a3e8, 0xa5a4e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa2a3e3, 0xa8a2ea, 0xa5a4e6, 0xa6a3e8, 0xa5a2e5, 0x000000, 0x676968, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0xd4d2b9, 0xd2d2b8, 0xd2d2ba, 0xd2d0b9, 0xd2d0b7, 0xd1d1b7, 0xd2d0b7, 0xcdd0b3, 0x010000, 0xa4a3e5, 0x000000, 0x000000, 0x000000, 0x000000, 0xa5a2e5, 0xa3a3e3, 0xa8a2e8, 0xa5a4e6, 0xa7a4e9, 0xa6a3e6, 0x000002, 0x000000, 0x010101, 0x000100, 0x010101, 0x000000, 0x010101, 0x000000, 0xa6a3e6, 0xa5a2e7, 0xa6a3e8, 0xa2a3e3, 0xa8a2e8, 0xa5a2e5, 0xa6a3e8, 0xa5a4e8, 0x000000, 0x686868, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d0b9, 0xd2d2b8, 0xd2d0b9, 0xd2d2ba, 0xd3d1ba, 0xd2d2ba, 0xd3d1b8, 0xd1d1b9, 0x000000, 0x1b1c17, 0x020001, 0xf3e1b1, 0xf3e1af, 0xf2e0ae, 0xf2e0ae, 0x000000, 0xa5a4e6, 0xa6a3e6, 0xa6a3e8, 0xa8a3e6, 0xa5a2e7, 0x000000, 0xf5e1af, 0xf2e0ae, 0xf3e1af, 0xf3e1b1, 0xf6e2b0, 0xf2e0b0, 0xf3e1b1, 0x000000, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0x000000, 0x686868, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d2b8, 0xd2d2b8, 0xd3d1ba, 0xd3d1b8, 0xd2d0b7, 0xd1d1b9, 0xd3d1ba, 0xd1d1b9, 0x000000, 0x0b0c11, 0xf3e1af, 0xf3e1b1, 0xf3e1af, 0xf3e1af, 0xf2e0ae, 0x000000, 0xa8a3e6, 0xa6a3e8, 0xa8a2e8, 0xa8a3e6, 0x000000, 0xf5e0b1, 0xf3e1b1, 0xf4e2b0, 0xf3e1af, 0xf3e1af, 0xf3e1af, 0xf3e1b1, 0xf3e1af, 0xf5e1af, 0x000000, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa5a2e5, 0x000000, 0x6b696a, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b2, 0xd3d1bc, 0xd1d1b9, 0xd2d2ba, 0xd2d0b7, 0xd3d1b8, 0xd2d2b8, 0xd1d1b7, 0x000100, 0x473f32, 0xf3e1af, 0xf5e1af, 0xf1e1ae, 0x010101, 0xf3e1af, 0x010101, 0xa2a3e3, 0xa8a2e8, 0xa5a2e5, 0xa6a3e8, 0x000000, 0xf3e1af, 0xf2e0ae, 0xf3e1af, 0xeee1aa, 0xf6e0b1, 0xf3e1af, 0xf3e1b1, 0xf3e1af, 0xf3e1b1, 0x000000, 0xa5a4e8, 0xa3a3e3, 0xa9a3e9, 0xa6a3e6, 0xa6a3e6, 0x9d9bdc, 0x000000, 0x696969, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0xd3d1b8, 0xd1d1b7, 0xd3d1ba, 0xd2d0b7, 0xd2d0b7, 0xd3d1b8, 0xd2d0b7, 0x000100, 0x82765c, 0xf3e1af, 0xf4e2b0, 0xf3e1af, 0xf3e1af, 0xf5e1af, 0x000000, 0xa1a2e2, 0xa8a2e8, 0xa5a4e6, 0xa8a2e8, 0x000000, 0xf3e1b1, 0xf2e0b0, 0xf3e1af, 0xf0e0ac, 0xf5e1af, 0xf2e0ae, 0xf4e2b0, 0xf2e0ae, 0x000000, 0xa4a3e5, 0xa5a4e6, 0xa3a3e3, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0x9492c1, 0x000000, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d0b7, 0xd2d2b8, 0xd2d0b9, 0xd3d1b8, 0xd1d1b9, 0x000000, 0x000000, 0x000000, 0x000100, 0xe8d8a7, 0xf3e1af, 0xf3e1af, 0xf3e1af, 0xf3e1af, 0xf3e1af, 0x000000, 0xa8a3e6, 0xa6a3e8, 0xa5a2e7, 0xa6a5e9, 0x000000, 0xf3e1af, 0x000000, 0xf5e1af, 0xf3e1af, 0xf3e1b1, 0xf3e1af, 0xf2e0ae, 0xf3e3b0, 0x010101, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa5a2e7, 0x777793, 0x000000, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d0b7, 0xd1d1b7, 0xd2d0b9, 0xd3d1ba, 0x010101, 0xa5a2e7, 0xa6a3e6, 0xa8a2e8, 0x07080c, 0xf2e0ae, 0xf2e2af, 0xf5e1af, 0xf4e2b0, 0xf2e0ae, 0x000000, 0xa6a3e8, 0xa6a3e6, 0xa7a1e7, 0xa5a4e8, 0xa6a3e8, 0x000000, 0xf3e1af, 0xf5e1af, 0xf3e1af, 0xf3e1af, 0xf4e2b0, 0xf2e2af, 0xf5e1af, 0x000201, 0xa6a3e6, 0xa8a2e8, 0xa7a4e7, 0xa6a3e6, 0xa6a3e6, 0xa6a3ea, 0xa6a3e8, 0x565563, 0x010101, 0x7b7b79, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0xd2d0b9, 0xd3d1b8, 0xd3d1ba, 0x000000, 0xa6a3e8, 0xa8a3e6, 0x000000, 0x000100, 0xf5e1af, 0xf2e0ae, 0xf5e1af, 0xf3e1af, 0x000000, 0x000000, 0xa7a4e7, 0xa2a3e3, 0xa8a2e8, 0xa5a2e5, 0xa8a2e8, 0xa8a2e8, 0x000000, 0xf2e0b0, 0xf3e1af, 0xf0e0ac, 0xf4dfb0, 0x000000, 0x000000, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa6a3e6, 0xa1a2e2, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0x000200, 0x000002, 0x7a7c7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0xd3d1ba, 0xd2d2b6, 0x000000, 0xa6a3e6, 0xa6a3e8, 0x000000, 0x010101, 0xeee1aa, 0xf3e1af, 0xddcfa0, 0x010101, 0x000000, 0xa6a3e6, 0xa6a3e6, 0xa5a2e5, 0xa3a3e3, 0xa8a2e8, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0x000000, 0x000000, 0x000100, 0x010101, 0xa6a3e6, 0xa9a4e7, 0xa6a3e8, 0xa5a4e6, 0xa4a3e5, 0xa6a3e6, 0xa3a3e3, 0xa8a2e8, 0xa5a3e4, 0x9896d7, 0x000002, 0x000000, 0x797979, 0x000100, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d2ba, 0xd2d0b7, 0xd3d1ba, 0x000000, 0xa6a3e6, 0xa6a3e6, 0x010101, 0x000000, 0xf3e2ae, 0xf4e0ad, 0x000002, 0x000000, 0xa6a3e6, 0xa6a3e6, 0xa5a4e6, 0x000000, 0xa7a4e9, 0xa6a3e8, 0xa8a2e8, 0xa7a4e7, 0xa8a2e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa5a4e6, 0xa7a4e9, 0xa6a3e8, 0xa6a3e6, 0xa6a3ea, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa8a2e8, 0x676692, 0x000000, 0x767877, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d2b8, 0xd3d1b8, 0xd3d1ba, 0x000000, 0xa8a3e6, 0xa6a3e8, 0xa6a3e6, 0x000002, 0x000000, 0x010100, 0x000000, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa5a2e5, 0x000000, 0xa7a2e5, 0xa8a3e6, 0x000000, 0xa6a3e6, 0xa7a4e9, 0xa8a2e8, 0xa7a1e7, 0xa6a3e8, 0xa6a3e6, 0xa5a2e5, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa5a2e7, 0xa8a3e6, 0xa6a3e8, 0x2c2b3d, 0x000000, 0x7b7d7c, 0x7b7b7d, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xcdd0b3, 0xd3d1b8, 0xd3d1b8, 0x000000, 0xa5a2e7, 0xa6a3e6, 0xa6a3e6, 0xa5a2e5, 0xa2a4e1, 0xa8a2e8, 0xa4a3e5, 0xa7a4e9, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa8a3e6, 0x000100, 0x020003, 0xa4a3e5, 0xa6a3e8, 0xa6a3e6, 0xa4a3e7, 0xa5a2e5, 0xa6a3e6, 0xa3a3e3, 0xa8a2e8, 0xa5a4e6, 0xa8a2e8, 0xa6a3e6, 0xa4a3e5, 0xa5a2e5, 0xa6a3e6, 0xa3a3e3, 0xa6a3e8, 0x9897d1, 0x000002, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xcdd0b3, 0xd3d1b8, 0xd1d1b5, 0x010000, 0xa5a2e5, 0xa6a3e8, 0xa5a2e5, 0xa5a2e7, 0xa2a3e3, 0xa9a3e9, 0xa6a3e6, 0xa6a3e8, 0xa5a2e7, 0xa6a3e6, 0xa7a1e7, 0xa5a2e5, 0xa2a2e2, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa3a4e5, 0xa8a2e8, 0xa5a4e6, 0xa9a4e7, 0xa5a4e8, 0xa6a3e8, 0xa4a3e7, 0xa6a3e8, 0xa3a3e1, 0xa6a3e8, 0x515070, 0x010000, 0x767676, 0x7b7b7b, 0x7a7a78, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d2ba, 0xd1d1b9, 0xd2d0b9, 0x010000, 0xa6a3e6, 0xa5a2e7, 0xa5a4e6, 0xa6a3e8, 0xa5a2e5, 0xa6a3e6, 0xa7a4e9, 0xa8a3e6, 0xa6a3e6, 0xa5a4e6, 0xa6a3e6, 0xa7a1e7, 0xa7a4e9, 0xa8a2e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa8a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa7a1e7, 0xa6a3e8, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x010101, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d0b7, 0xd1d1b9, 0x010000, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa5a4e6, 0xa6a3ea, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa8a3e6, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa5a4e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa5a4e6, 0xa6a3e8, 0xa6a3e8, 0xa8a3e6, 0x8b86be, 0x000000, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0xd3d1ba, 0xd1d1b7, 0x000002, 0xa5a2e5, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa3a5e2, 0xa9a3e9, 0xa6a3e6, 0xa8a2e8, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa2a3e3, 0xa6a3e8, 0xa6a4e5, 0xa8a2e8, 0xa4a3e5, 0xa8a2e8, 0xa6a3e6, 0xa6a3e6, 0xa2a3e3, 0xa8a2e8, 0xa4a3e5, 0xa9a4e7, 0xa6a3e8, 0xa6a3e6, 0xa4a3e5, 0xa6a3e8, 0xa3a5e2, 0x000201, 0x000000, 0x7b7b7b, 0x7a7a78, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0xd3d1ba, 0xd2d2b8, 0xd1d1b9, 0xd1d1b9, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xcdd2b4, 0xd3d1b8, 0xd1d1b9, 0x000000, 0xa5a2e5, 0xa6a3e8, 0xa8a2e8, 0xa6a3ea, 0xa3a3e3, 0xa6a3e6, 0xa5a2e5, 0xa5a2e7, 0xa6a3e6, 0xa5a2e7, 0xa5a2e7, 0xa5a4e8, 0xa2a3e3, 0xa8a2e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa7a4e7, 0xa7a4e7, 0xa2a2e2, 0xa7a4e9, 0xa5a4e6, 0xa6a3e6, 0xa4a3e5, 0xa7a4e9, 0xa7a4e7, 0xa6a3e6, 0xa5a5e5, 0x7573a5, 0x000000, 0x000000, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x010000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d0b7, 0xd3d1b8, 0xd2d2b8, 0xd3d1b8, 0xd2d2ba, 0xbbbaa5, 0xd3d1b8, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd2d0b7, 0x010000, 0xa6a3e8, 0xa6a3e6, 0xa4a3e7, 0xa6a3e6, 0xa5a2e7, 0xa7a2e5, 0xa5a4e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa5a2e5, 0xa5a2e7, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa5a4e8, 0xa5a4ea, 0xa8a2ea, 0xa7a4e9, 0xa8a2e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e8, 0xa8a2e8, 0xa7a4e9, 0x1f1f2b, 0xa7a4e7, 0xa6a3e8, 0x8986bd, 0x000000, 0x000000, 0x747476, 0x7b7b7b, 0x7c7c7c, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d0b7, 0xd3d1b8, 0xd3d3b9, 0xd2d0b7, 0xd3d3bb, 0xd2d1bc, 0xd3d1b8, 0xd3d1ba, 0xd2d0b7, 0xd3d1b8, 0xd2d0b7, 0x010101, 0x000000, 0xa6a3e8, 0xa6a3e8, 0xa8a3e6, 0xa8a2e8, 0xa8a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa8a3e6, 0xa5a4e8, 0xa6a3e6, 0xa7a2e5, 0xa5a2e5, 0xa6a3e8, 0xa5a4e6, 0xa6a3e8, 0xa6a3e6, 0xa9a4e7, 0x15151f, 0xa7a4e7, 0xa7a4e7, 0xa7a4e9, 0xa7a1e7, 0x434252, 0x0d0d0d, 0x010101, 0x757575, 0x7a7a7a, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0xd3d1ba, 0xd2d0b7, 0xd3d1ba, 0xd2d2ba, 0xd3d1ba, 0xd2d0b7, 0xd2d0b7, 0xcdd2b4, 0xd3d1b8, 0xd2d2b8, 0x000000, 0x000002, 0x000002, 0xa7a1e7, 0xa4a3e7, 0xa2a3e3, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa5a4e8, 0xa2a4e1, 0xa9a3e9, 0xa6a3e6, 0xa8a2e8, 0xa5a2e5, 0xa5a4e8, 0xa5a2e7, 0xa6a3e8, 0xa3a3e3, 0xa8a2e8, 0xa6a3e6, 0xa6a3e8, 0x08080a, 0x000000, 0xa6a3e6, 0xa6a3e6, 0xa2a4df, 0xa8a2e8, 0xa4a1e4, 0x1f2024, 0x0c0e0d, 0x000002, 0x7b7b7b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xced1b4, 0xd3d1ba, 0xd2d0b7, 0xd3d1ba, 0xd2d2ba, 0xd3d1ba, 0xd2d0b7, 0xd3d1b8, 0xced1b2, 0xd3d1b8, 0xd1d1b7, 0xd3d1b8, 0x000000, 0x010101, 0x000000, 0xa4a3e7, 0xa2a3e3, 0xa6a3e8, 0xa5a2e5, 0xa6a3e6, 0xa6a3e8, 0xa6a3e6, 0xa7a4e9, 0xa5a2e5, 0xa3a3e1, 0xa8a2e8, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa5a4e6, 0xa5a2e5, 0xa5a5e5, 0xa7a4e7, 0xa6a3e6, 0x000000, 0x000000, 0xa7a4e9, 0xa6a3e6, 0xa7a4e7, 0xa3a5e2, 0xa9a3e9, 0xa4a3e7, 0xa1a0cc, 0x000000, 0x000000, 0x777576, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd1d1b7, 0xd2d2b8, 0xd3d1b8, 0xd3d1b8, 0xd2d2ba, 0xd2d1bc, 0xd3d1b8, 0xd3d1ba, 0xd2d2ba, 0xd2d0b7, 0xd1d1b9, 0xd3d1b8, 0xb2b49f, 0x000000, 0x000000, 0x101116, 0xa29fe2, 0xa6a3e8, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa5a2e7, 0xa6a3e8, 0xa8a3e6, 0xa6a3e6, 0xa7a4e9, 0xa5a4e6, 0xa5a4e6, 0xa6a3e6, 0xa6a5e7, 0xa7a4e7, 0x000000, 0x000000, 0x000000, 0xa6a5e9, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa4a3e7, 0xa5a4e8, 0xa7a4e7, 0x69687a, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd1d1b7, 0xd2d2b8, 0xd3d1b8, 0xd2d0b7, 0xd2d2ba, 0xd2d1bc, 0xd3d1b8, 0xd2d0b9, 0xd2d0b7, 0xd3d1b8, 0xd1d1b9, 0xd3d1b8, 0xd3d1ba, 0xa2a18d, 0x181212, 0x000000, 0x050507, 0x1f1d28, 0x8481b8, 0xa19ee1, 0xa6a3e8, 0xa7a4e9, 0xa6a3e8, 0xa8a2e8, 0xa4a3e5, 0xa7a1e7, 0xa6a3e6, 0xa8a3e6, 0xa6a3e6, 0xa6a3e6, 0x000000, 0x000000, 0x000000, 0x000000, 0xa6a3e6, 0xa7a4e7, 0xa19cdc, 0xa8a2e8, 0xa7a4e9, 0xa6a3e8, 0xa5a2e5, 0xa5a2e7, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0x101010, 0x000100, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xcdd0b3, 0xd3d1ba, 0xd2d0b7, 0xd3d1ba, 0xd1d1b9, 0xd3d1ba, 0xd2d0b7, 0xd1d1b7, 0xced1b4, 0xd4d2bb, 0xd2d2b8, 0xd3d1ba, 0xd1d1b7, 0xd3d1b8, 0xcfcdb4, 0x000201, 0x000100, 0x000000, 0x000000, 0x020001, 0x000000, 0x000002, 0x000000, 0x000000, 0x000100, 0x020001, 0x000002, 0x010002, 0x000000, 0x010000, 0x000000, 0x000000, 0x000100, 0xa7a4e7, 0xa6a3e6, 0xa6a3e8, 0xa5a4e6, 0xa6a3e6, 0xa6a3e6, 0xa5a2e5, 0xa2a3e3, 0xa8a2e8, 0xa5a5e5, 0xa9a4e7, 0xa5a4e6, 0x7c7d99, 0x000000, 0x000000, 0x01000000, 0x000100, 0xd2d2ba, 0xd2d2b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd2d0b7, 0xd2d2b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xced1b4, 0xd3d1ba, 0xd1d1b5, 0xd3d1b8, 0xd3d1b8, 0xd2d0b9, 0x010000, 0x000002, 0x000000, 0x696969, 0x434343, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xa7a4e9, 0xa4a4e4, 0xa4a1e4, 0xa4a3e7, 0xa6a3e6, 0xa6a3e8, 0xa5a2e5, 0xa5a4e8, 0xa6a3e6, 0xa0a4e3, 0xa6a3e8, 0xa5a2e5, 0xa6a3e8, 0xa9a3e9, 0xa6a3e8, 0x141414, 0x000000, 0x01000000, 0x000100, 0xd3d1b8, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1b8, 0xd3d1ba, 0xd3d1b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d2b8, 0xd3d1b8, 0xd2d2ba, 0xd2d2b8, 0xd5d0ba, 0xd2d0b7, 0x010101, 0x000000, 0x000000, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x767676, 0x767676, 0x767676, 0x767676, 0x767676, 0x767676, 0x797979, 0x7b7b7b, 0x575757, 0x000000, 0x000100, 0xa5a2e5, 0xa6a3e6, 0xa7a4e7, 0xa6a3e8, 0xa6a3e8, 0xa8a2e8, 0xa6a3e8, 0xa6a3e6, 0xa6a3e6, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0xa6a3e8, 0x605e6b, 0x000000, 0x01000000, 0x000000, 0xd3d1ba, 0xd2d0b9, 0xd2d0b7, 0xd3d1b8, 0xd3d1b8, 0xd2d0b9, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd3d1ba, 0xd2d2ba, 0xd2d0b7, 0xd3d1ba, 0xd1d1b7, 0xd3d1b8, 0x000000, 0x000000, 0x000000, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7c7c7c, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x020001, 0xa29bde, 0xa6a3e8, 0xa6a3e8, 0xa8a3e6, 0xa6a3e6, 0xa6a3e6, 0xa6a3e8, 0xa7a4e7, 0xa5a2e5, 0xa6a3e8, 0xa6a3e8, 0xa5a2e7, 0xa6a3e8, 0xa8a2e8, 0x908daa, 0x000000, 0x01000000, 0x000100, 0xd2d2b8, 0xd3d1ba, 0xd3d1ba, 0xd3d1b8, 0xd2d2b8, 0xd2d0b9, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xced1b4, 0xd2d0b9, 0xd2d0b7, 0xd3d1ba, 0xd3d1b8, 0x000000, 0x000000, 0x010101, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x787a77, 0x7b7b7d, 0x7b7b7b, 0x7b7b7d, 0x7a7a7a, 0x7b7b7b, 0x000000, 0x000000, 0x000100, 0xa6a1e4, 0xa6a3e6, 0xa6a3e8, 0xa6a3e8, 0xa6a5e7, 0xa6a3e6, 0xa7a1e7, 0xa2a3e3, 0xa9a3eb, 0xa5a2e7, 0xa5a2e5, 0xa5a2e7, 0xa6a3e8, 0xa4a2d1, 0x000000, 0x01000000, 0x000100, 0xd2d2ba, 0xd3d1b8, 0xd2d0b7, 0xd3d1ba, 0xd3d1b8, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd1d1b5, 0xd3d1ba, 0xd1d1b7, 0xd3d1ba, 0xd2d0b7, 0x000000, 0x000000, 0x010101, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x787a79, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000100, 0xa9a3e9, 0xa6a3e6, 0xa7a5e6, 0xa5a2e5, 0xa5a2e7, 0xa6a3e8, 0xa5a2e5, 0xa3a3e1, 0xa8a2e8, 0xa4a2e3, 0xa5a2e9, 0xa5a2e5, 0xa6a3e8, 0xa5a4e6, 0x000000, 0x01000000, 0x000000, 0xd2d0b9, 0xd3d1ba, 0xd3d1b8, 0xd3d1ba, 0xd2d0b7, 0xd2d0b7, 0xd3d1ba, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd1cfb6, 0xd2d0b9, 0xd2d0b9, 0xd3d1b8, 0x000000, 0x000000, 0x000000, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000000, 0xa8a2e8, 0xa6a3e6, 0xa8a3e6, 0xa5a2e5, 0xa8a3e6, 0xa8a3e6, 0xa6a3e6, 0xa8a3e6, 0xa6a3e8, 0xa5a2e7, 0xa7a4e9, 0xa8a3e6, 0xa7a1e7, 0xa6a3e8, 0x000002, 0x01000000, 0x020001, 0xd3d1ba, 0xd1d1b9, 0xd3d1ba, 0xd3d1b8, 0xd2d0b7, 0xd2d0b7, 0xd2d2b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd3d1b8, 0xd1d1b7, 0xd1d1b7, 0xd3d1b8, 0xd3d1ba, 0x000000, 0x000000, 0x000000, 0x797b78, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7b7b79, 0x7b7b7b, 0x7b7b79, 0x7b7b7b, 0x7b7b7b, 0x7b7b7b, 0x000000, 0x000200, 0xa8a2e8, 0xa6a3e8, 0xa8a2e8, 0xa7a4e9, 0xa6a3ea, 0xa6a3e6, 0xa6a3e8, 0xa8a2e8, 0xa5a2e5, 0xa8a2e8, 0xa5a2e7, 0xa6a3e6, 0xa7a4e7, 0xa8a2e8, 0x000000, 0x01000000, 0x000100, 0x010000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x000002, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000100, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x010000, 0x000000, 0x000100, 0x010103, 0x000000, 0x000000, 0x000000, 0x000000, 0x000002, 0x000000, 0x000100, 0x010101, 0x010101, 0x000000, 0x000000, 0x010000, 0x000000, 0x000000, 0x01000000, 0x01000000

	
.text
Main:
	# иии Se despliega en el Display la imagen principal.
  	la $a0, imagen_inicial
  	jal Imprimir_imagen
  	
	# иии Se asigna un tiempo de espera para continuar con el programa.
	addi $a0 , $zero , 2000				# $a0 = 2000ms
	addi $v0, $zero, 32				# Servicio 32, sleep
	syscall						# Se espera 2 segundos antes de empezar el juego.

	# иии Se limpia el DISPLAY grafico.
	jal Clear_display	
	
	# иии Se pinta la barra de puntuaciзn.
	jal Paint_score_bar
	
	# иии Se inicializan las variables del juego.
	jal Initialize_components
	
	# ... Se muestra el score en el Display.
	jal Update_score_display
	
	# иии Se muestra por pantalla la posiciзn inicial de la serpiente.
	jal Paint_snake_position
	
	# иии Se solicita al usuario ingresar por consola un numero para configurar la seed del generador de numeros aleatorios.
	jal InputSeed
	
	# иии Se proceden a agregar los obstaculos aleatorios en el terreno de juego.
	# Se recurre a un ciclo while para agregar obstaculos hasta haber alcanzado una cantidad en particular (El sistema 
	# se encarga de revisar cuando un obstaculo es agregado o no).
	
	li $t1, 0					# $t1 => contador inicializado en cero.
	lhu  $t2, obstacles_amount			# $t2 => cantidad de obstaculos agregados al mapa.
	move $a0, $v0					# $a0 => seed obtenida por consola.
	
	Main_While_A:					# While (contador < obstacles_amount) hacer:			
		beq $t1, $t2, Main_FinWhile_A		
		
		move $s0, $t1				# Se guarda el contenido de $t1 en $s0 para no perder la informaciзn.
		move $s1, $t2				# Se guarda el contenido de $t2 en $s1 para no perder la informaciзn.
		jal Random_obstacles_generator		# Se pintan los obstaculos de manera aleatoria.
		move $t1, $s0				# Se recupera la informaciзn del registro $t1.
		move $t2, $s1				# Se recupera la informaciЫn del registro $t2.	
		move $a0, $v0				# Se copia el contenido de $v0 en $a0, la seed para la siguiente llamada.
		move $a1, $v1				# Se copia el contenido de $v1 en $a1, un verificador de obstaculos pintado.

		beq $a1, -1, ObstaculoNoAgregado	# En el caso de que $a1 = -1, quiere decir que el obstaculo no pudo ser
							# pintado, debido a que otro elemento del mapa estaba ocupando el pixel 
							# que se intentaba pintar.					
		addi $t1, $t1, 1			# Se actualiza el contador en el caso de que el obstaculo haya sido agregado.
		
		ObstaculoNoAgregado:			
		j Main_While_A				# Se inicia nuevamente el ciclo.
	Main_FinWhile_A:

	# иии Se imprime un mensaje por pantalla para indicar al usuario que la construcciЫn del mapa ha sido realizada.
	la $a0, mensaje2
	jal ImprimirTexto
	
	# иии Se pinta la primera fruta en el juego.
	Fruit_DoWhile_A:
		jal Random_fruit_generator
		beq $v0, -1, Fruit_DoWhile_A
	
	# иии Se da un salto hacia la funciзn que permite mover la serpiente de acuerdo a los caracteres ingresados
	# en un simulador de Keyboard entregado por MARS MIPS.
	j Keyboard_polling


IngresarEntero:
	# Descripciзn: 		Solicita por consola el ingreso de un numero entero.
	# Input: 		Ninguna.
	# Output:		$v0 = Numero entero ingresado por consola.
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	li $v0, 5	# Servicio 5: 	"read integer".
	syscall		# Solicita por consola el ingreso de un numero entero, el cual sera almacenado en $a0 
	jr $ra		# Vuelve con la instruccion siguiente al salto (JAL).

ImprimirEntero:
	# Descripciзn:		Imprime por consola un numero entero.
	# Input: 		$a0 = Entero a imprimir.
	# Output: 		Ninguna.
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	li $v0, 1	# Servicio 1: "print integer".
	syscall		# Se imprime en consola el entero contenido en $a0.
	jr $ra		# Vuelve con la instruccion siguiente al salto (JAL).
	
ImprimirTexto:
	# Descripciзn: 		Imprime por consola un texto entregado como parametro de entrada.
	# Input: 		$a0 = Address del texto que se quiere imprimir.
	# Output: 		Ninguna.
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	li $v0, 4	# Servicio 4: 	"print string".
	syscall		# Se imprime en consola el string contenido en $a0.
	jr $ra		# Vuelve con la instruccion siguiente al salto (JAL).

	
Imprimir_imagen:
	# Descripciзn:		Procedimiento encargado de imprimir en el Display una de las imagenes declaradas en la
	#			secciзn .data del programa. Las imagenes deben ser de tamaыo 64x64 pixels.
	# Input:		$a0 = Address de la imagen a imprimir.
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	la $t0, display					# $to = Direcciзn del Display.
	lhu $t1, display_bound				# $t1 = Offset del ultimo pixel del Display.
	addi $t2, $zero, 0				# $t2 = Contador para la imagen, inicializado en cero.
	addi $t3, $zero, 0				# $t3 = Contador para el Display, inicializado en cero.
	
	# Mediante un ciclo while, se reccoren todos los elementos contenidos en el arreglo referenciado por $a0 y se va
	# pintando pixel por pixel en el Display.
	While_Imprimir_imagen:
		beq $t3, $t1, End_While_Imprimir_imagen	
		add $t4, $a0, $t2
		lw  $t5, 0($t4)
		beq $t5, 0x01000000, While_Imprimir_imagen_Jump
		add $t6, $t0, $t3			
		sw  $t5, 0($t6)
		addi $t2, $t2, 4
		addi $t3, $t3, 4
		j While_Imprimir_imagen
		
		While_Imprimir_imagen_Jump:
		addi $t2, $t2, 4
		j While_Imprimir_imagen
	End_While_Imprimir_imagen:
	jr $ra
	

InputSeed:
	# Descripciзn: 		Funciзn encargada de solicitar por consola el ingreso de un numero cualquiera que serр 
	#			utilizado como seed para configurar el servicio del sistema encargado de generar 
	#			numeros aleatorios.
	# Input:		Ninguna.
	# Output:		$v0 = Numero ingresado por el usuario.
	# Advertencia:		Registro $s0 utilizado.	
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	move $s0, $ra					# Se guarda $ra en $s0 para no perderlo despues de realizar llamadas a 
							# иии	otras funciones.

	la $a0, mensaje1				# Se carga en $a0 la direccion de mensaje1
	jal ImprimirTexto				# Se imprime por pantalla el texto contenido en mensaje1.
	jal IngresarEntero				# Se solicita por consola el ingreso de un numero entero. 
	jr $s0						#  Vuelve con la instruccion siguiente al salto (JAL).
	
	
Clear_display:
	# Descripciзn: 		Procedimiento encargado de pintar todos los pixeles del display de acuerdo al color 
	#			base escogido.
	# Input: 		Ninguna.
	# Output: 		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	la $t0, display					# Se carga en $t0 la direccion del display grafico.
	lw $t1, display_color				# Se carga en $t1 el color que representa la nada en el juego.
	li $t2, 0					# Se carga en $t2 un contador para recorrer los pixeles del display.
	lhu $t3, display_bound				# Se carga en $t3 el limite del display
	addi $t3, $t3, 4				
	
	# while (contador < display_bound + 4) hacer:
	Clear_display_While_A:
		beq $t2, $t3, Clear_display_FinWhile_A 	# Se analiza la condiciзn de quiebre del while.
		add $t4, $t2, $t0			# Se toma la direcciзn de un pixel.
		sw $t1, 0($t4)				# Se pinta el pixel del color que representa la nada.
		addi $t2, $t2, 4			# contador = contador + 4		
		j Clear_display_While_A
	Clear_display_FinWhile_A:

	jr $ra						# Vuelve con la instruccion siguiente al salto (JAL)

	
Initialize_components:
	# Descripciзn:		Procedimiento encargado de inicializar las variables relevantes del juego
	# Input:		Ninguna.
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# Posiciones de la serpiente:
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	lhu $t0, xo_snake_position
	lhu $t1, yo_snake_position
	lhu $t2, xo_tail_position
	lhu $t3, yo_tail_position
	sh  $t0, x_snake_position
	sh  $t1, y_snake_position
	sh  $t2, x_tail_position
	sh  $t3, y_tail_position
	
	# Keyboard buffer:
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	la $t0, 0xffff0004
	sw $zero, 0($t0)
	
	# Puntuaciзn:
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	addi $t4, $zero, 0
	sw $t4, score

	
	# Direcciones:
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	sb $t4, snake_direction
	sh $t4, arr_actual_index
	subi $t4, $t4, 1
	sh $t4, arr_last_index
	move $a0, $ra
	jal Initialize_arr_direction_change
	
	
Initialize_arr_direction_change:
	# Descripciзn:		Procedimiento encargado de asignar, en el arreglo de cambios de direcciзn (arr_direction change),
	#			los primeros movimientos que debe realizar la cola de la serpiente.
	# Input:		$a0 = Direcciзn de retorno ($ra de la funciзn Initialize_components).
	# Output:		Ninguno.
	# Advertencia:		Se utilizan los registros $s0, $s1 y $s2
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lhu $t0, x_snake_position				# $t0 = Posiciзn X de la cabeza de la serpiente.
	lhu $t1, x_tail_position				# $t1 = Posiciзn X de la cola de la serpiente.
	sub $t0, $t0, $t1					# $t0 = Distancia entre ambas posiciones.
	addi $t1, $zero, 0					# $t1 = Contador inicializado en cero.	
	la $t2, arr_direction_change				# $t2 = Arreglo de direcciones para la cola.

	While_Initialize_arr_direction_change:
		beq $t0, $t1, End_While_Initialize_arr_direction_change 			
		mul $t4, $t1, 4					# $t4 = Ajuste para obtener el offset del arreglo.
		add $t4, $t2, $t4				# $t4 = Suma del offset en el arreglo.
		addi $t3, $zero, 2				# $t3 = Direcciзn hacia la derecha.
		sw $t3, 0($t4)					# Se almacena un movimiento en la direccion $t4.
		addi $t1, $t1, 1				# Se actualiza el contador.
		
		# Se guardan los registros temporales $t0, $t1, %t2 en los registros $s0, $s1, $s2 respectivamente 
		# иии para no perderlos una vez llamada la funciзn Update_arr_last_index.
		move $s0, $t0
		move $s1, $t1
		move $s2, $t2
		jal Update_arr_last_index			# Se actualiza la variable arr_last_index.
		move $t0, $s0					# Se recupera la informaciзn de los registros temporales
		move $t1, $s1					# иии previamente guardados.
		move $t2, $s2
		j While_Initialize_arr_direction_change		# Se retorna al ciclo while.
	End_While_Initialize_arr_direction_change:
	move $ra, $a0	
	jr $ra
	
Paint_score_bar:
	# Descripcion: 		Procedimiento encargado de pintar en el Display la barra en donde se mostrara el puntaje 
	#			actual del juego.
	# Input:		Ninguna.
	# Output:		Ninguna.
	# Advertencias:		Los regitros $s0 y $s1 son utilizados
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	addi $a0, $zero, 0			# $a0 => Contador de lineas inicializado en cero (line_counter).
	lhu  $t1, score_bar_lines		# $t1 => Cantidad de lineas asignadas para la barra de puntuaciзn.
	lw $a1, score_bar_color			# $a1 => Color de la barra de puntuaciзn.
	
	move $s0, $ra				# Se guarda la direccion $ra para no perderla en la siguiente llamada.
	While_A_Paint_score_bar:			# While ( line_counter <= score_Bar_lines) do:
		beq $t1, $a0, End_While_A_Paint_score_bar			
		move $s1, $t1					# Se guarda en $s1 la informaciзn contenida en $t1.
		jal Paint_horizontal_line			# Se pinta una linea horizontal con el color guardado en $a1
		move $t1, $s1					# Se recupera la informaciзn contenida en $t1.
		addi $a0, $a0, 1				# Se actualiza el contador de lineas.
		j While_A_Paint_score_bar			# Se vuelve a ejecutar eы ciclo.
	End_While_A_Paint_score_bar:

	move $ra, $s0				# Se recupera la direccion $ra.
	jr $ra
	
Paint_horizontal_line:
	# Descripcion:		Procedimiento encargado de imprimir una linea horizontal en el Display de un color en particular.
	# Input:		$a0 = Numero que indica cual de las lineas Del display se pretende pintar [0 - 63].
	#			$a1 = Color con el cual se quiere pintar la linea.
	# Ouput:		Ninguna.
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	la $t0, display				# Se guarda en $t0 la direccion del display.
	lhu $t1, display_line_bound		# Se guarda en $t1 los limites de la linea de un display.
	addi $t1, $t1, 4			
	mul $t2, $t1, $a0			# Se guarda en $t2 la base desde donde se empezara a pintar la linea.
	add  $t1, $t2, $t1			# Se guarda en $t1 el limite hasta donde se terminara de pintar la linea.
	
	While_A_Paint_horizontal_line:
		beq $t2, $t1, End_While_A_Paint_horizontal_line
		add $t3, $t0, $t2		# Se guarda en $t3 la direccion del pixel que se va a pintar.
		sw $a1, 0($t3)			# Se pinta el pixel con el color ingresado en $a1.
		addi $t2, $t2, 4		# Se actualiza la posicion del pixel al cual se accederр.
		j While_A_Paint_horizontal_line
	End_While_A_Paint_horizontal_line:
	
	jr $ra

Paint_vertical_line:
	# Descripciзn:		Procedimiento encargado de imprimir una linea vertical de un color en particular.
	# Input:		$a0 = Direcciзn del pixel desde donde se quiere imprimir la linea.
	#			$a1 = Color con el que se quiere pintar la linea.
	#			$a2 = Cantidad de pьxeles que debe tener la linea.
	# Ouput:		Ninguna.
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии

	move $t0, $a0				# $t0 => Direccion de un pixel, en particular, del Display.
	lhu $t1, display_line_bound		# $t1 => Limites de la linea de un Display.
	addi $t1, $t1, 4
	addi $t2, $zero, 0			# $t2 => Contador de pixeles agregados, inicializado en cero (pixel_count).
	addi $t3, $a2, 1
	While_A_Paint_vertical_line:
		beq $t2, $t3, End_While_A_Paint_vertical_line
		sw $a1, 0($t0)
		add $t0, $t0, $t1		# Se actualiza la direccion del pixel a pintar.
		addi $t2, $t2, 1		# Se actualiza pixel_count.
		j While_A_Paint_vertical_line
		
	End_While_A_Paint_vertical_line:
	
	jr $ra
	
Paint_snake_position:
	# Descripciзn: 		Procedimiento encargado de pintar la posicion de la serpiente.
	# Input: 		Ninguna.
	# Output: 		Ninguna.
	# Advertencia:		Utiliza el registro $s0 y $s1
	#		
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	move $s0, $ra					# Se guarda el contenido de $ra para no perderlo.
	# иии Se obtiene la posiciзn de la cabeza de la serpiente.
	lhu $a0, x_snake_position			# Se carga en $t2 la posiciзn X inicial de la serpiente.	
	lhu $a1, y_snake_position			# Se carga en $t3 la posiciзn Y inicial de la serpiente.
	jal Coordinate_to_address			# Se obtiene la direcciзn de la cabeza de la serpiente en el display.
	move $s1, $v0					# %s1 = direcciЫn de la cabeza de la serpiente en el display.

	# ... Se obtiene la posiciзn de la cola de la serpiente.
	lhu $a0, x_tail_position			# Se carga en $t2 la posicion X inicial de la cola de la serpiente.
	lhu $a1, y_tail_position			# Se carga en $t3 la posicion Y inicial de la cola de la serpiente.
	jal Coordinate_to_address			# Se obtiene la direcciзn de la cola de la serpiente en el display.
	move $t3, $v0					# %t3 = direcciЫn de la cola de la serpiente en el display.
	move $t2, $s1					# $t2 = direcciЫn de la cabeza de la serpiente en el display.
	
	# ... Se pinta desde la cola hasta la cabeza
	addi $t2, $t2, 4
	lw $t1, snake_tail_color			# Se carga en $t1 el color de la colo serpiente.
	sw $t1, 0($t3)
	addi $t3, $t3, 4
	lw  $t1, snake_color				# Se carga en $t1 el color de la serpiente.
	While_Paint_snake_position:
		beq $t3, $t2, End_While_Paint_snake_position
		sw $t1, 0($t3)				# Se pinta la direccion %t3 con el color guardado en $t1.
		addi $t3, $t3, 4			# %t3 = %t3 + 1.
		j While_Paint_snake_position		# Se reinicia el ciclo.
	End_While_Paint_snake_position:
	
	jr $s0					# Vuelve con la instrucciзn siguiente al salto (JAL).

Random_obstacles_generator:
	# DESCRIPCION:	Encargada de generar un numero aleatorio entre un rango determinado por [score_bar_bound, display_bound].
	# INPUTS:	$a0 = Seed para generar numeros aleatorios.	
	# OUTPUT:	$v0 = Numero aleatorio generado.
	#		%v1 = 1 para indicar que un obstaculo fue pintado.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# Se genera un numero aleatorio a partir de uno de los servicios del sistema.
	li $v0, 42					# Servico 42:	"random int range".
	lhu $t9, display_bound				# Se carga en %t9 los limites del display
	div $t9, $t9, 4					# Se ajustan los limites al display
	lhu $t8, score_bar_bound			# Se carga en %t8 los limites del menu
	div $t8, $t8, 4					# Se ajustan los limites al display
	sub $a1, $t9, $t8				# Se establece el rango maximo del numero aleatorio que se va a obtener
	syscall						# Se genera el numero aleatorio (Guardado en $a0).
	add $a0, $a0, $t8				# Se realiza una suma para que los obstaculos aparescan en una zona
							# иии	diferente de la barra de puntuaciЫn.
	
	# Se obtiene la direcciзn de memoria de un pixel aleatorio del display.
	la $t0, display					# Se carga en $t0 el DISPLAY grafico.
	move $t1, $a0					# Se guarda en $t1 el numero aleatorio generado.
	mul $t1, $t1, 4					# Se multiplica el numero aleatorio generado anteriormente por 4.
	add $t1, $t1, $t0				# Se agrega el offset a la base del display. De esta manera se guarda
							# иии	en $a0 la direcciзn del pixel que se pretende pintar como
							# иии	obstaculo.						

	# Se verifica si el pixel seleccionado es una posiciзn posible para pintar un obstaculo.
	lw $t2, display_color				# Se carga en $t2 el color base del display.
	lw $t3,	0($t1)					# Se carga en $t3 el color del pixel cuya direcciзn se encuentra
							# иии	registrada en $t1
							
	bne $t2, $t3, Failed_painted_obstacle		# Si el pixel considerado no corresponde al color base del display,
							# иии	entonces el obstaculo no puede ser pintado ya que otro
							# иии	elemento del juego se encuentra en esa posiciзn.
	
	# Para evitar la creaciзn de caminos imposibles para la serpiente, el pixel puede ser pintado como un obstaculo
	# si y solo si antes no han sido pintados elementos del juego en las siguientes posiciones:
	#	-> (x, y - 2)
	#	-> (x, y + 2)
	#	-> (x - 2, y)
	#	-> (x + 2, y)
	#	-> (x - 1, y - 1)
	#	-> (x - 1, y + 1)
	#	-> (x + 1, y - 1)
	#	-> (x + 1, y + 1)
	#	Siendo (x,y) las coordenadas del pixel que se pretende pintar.
	
	# ( x , y - 2 )
	subi $t4, $t1, 512
	lw $t4, 0($t4)
	bne $t4, $t3,  Failed_painted_obstacle	 
	
	# ( x, y + 2)
	addi $t4, $t1, 512
	lw $t4, 0($t4)
	bne $t4, $t3,  Failed_painted_obstacle	
	
	# (x - 2, y)
	subi $t4, $t1, 8
	lw $t4, 0($t4)
	bne $t4, $t3,  Failed_painted_obstacle	
	
	# (x + 2, y)
	addi $t4, $t1, 8
	lw $t4, 0($t4)
	bne $t4, $t3,  Failed_painted_obstacle	
	
	# (x - 1, y - 1)
	subi $t4, $t1, 4
	subi $t4, $t4, 256
	lw $t4, 0($t4)
	bne $t4, $t3,  Failed_painted_obstacle	
	
	# (x - 1, y + 1)
	subi $t4, $t1, 4
	addi $t4, $t4, 256
	lw $t4, 0($t4)
	bne $t4, $t3,  Failed_painted_obstacle	
		
	# (x + 1, y - 1)
	addi $t4, $t1, 4
	subi $t4, $t4, 256
	lw $t4, 0($t4)
	bne $t4, $t3,  Failed_painted_obstacle	
	
	# (x + 1, y + 1)
	addi $t4, $t1, 4
	addi $t4, $t4, 256
	lw $t4, 0($t4)
	bne $t4, $t3,  Failed_painted_obstacle	
	
	# Llegando a este punto, se considera que el obstaculo si puede ser pintado.
	lw $t2, obstacles_color			# Se carga en $t2 el color de un obstaculo
	sw $t2, 0($t1)				# Se pinta el obstaculo en el mapa.
	
	move $v0, $a0
	li $v1, 1				# Se indica, por medio de $v1, que un obstaculo acaba de ser pintado ($v1 = 1).
	jr $ra					# Vuelve con la instruccion siguiente al salto (JAL).
	
	Failed_painted_obstacle:
	li $v1, -1				# Se indica, por medio de $v1, que ningun obstaculo va a ser pintado ($v1 = -1).
	jr $ra					# Vuelve con la instruccion siguiente al salto (JAL).


Random_fruit_generator:
	# Descripciзn:		Funciзn utilizada para pintar por pantalla una fruta en una posiciзn aleatoria entre el rango 
	#			[score_bar_bound, display_bound]
	# Input:		Ninguna.
	# Output:		$v0 = 1 si la fruta fue generada correctamente
	# Restricciones:
	#			$a0, $a1, $a2, $a3 no pueden perderse
	#			%s0 no puede ser utilizado.
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# ... Se guardan los parametros de entrada.
	move $t8, $a0					# Se guarda $a0 en $t8 para no perderlo en la siguiente llamada de sistema.
	move $t9, $a1					# Se guarda $a1 en $t9 para no perderlo en la siguiente llamada de sistema.
	
	# иии Se genera un numero aleatorio dentro del rango especificado:
	lhu $t7, display_bound				# Se carga en %t7 los limites del display.
	lhu $t6, score_bar_bound			# Se carga en %t6 los limites de la barra de puntuaciзn.
	div $t7, $t7, 4					# Se ajustan los limites al display.
	div $t6, $t6, 4					# Se ajustan los limites al display.
	sub $a1, $t7, $t6				# Se establece el rango maximo del numero aleatorio que se va a obtener
	li $v0, 42					# Servico 42:	"random int range".
	syscall						# Se genera el numero aleatorio (Guardado en $a0).
	add $a0, $a0, $t6				# Se realiza una suma para que la fruta aparesca en una zona
							# иии	diferente de la barra de puntuaciЫn.
	move $t1, $a0					# Se guarda en $t1 el numero aleatorio generado.

	# Se obtiene la direcciзn de memoria de un pixel determinado por el numero aleatorio entregado.
	la $t0, display					# Se carga en $t0 el DISPLAY grafico.
	move $a0, $t8					# Se recupera el contenido original de $a0
	move $a1, $t9					# Se recupera el contenido original de $a1.
	mul $t1, $t1, 4					# Se multiplica el numero aleatorio generado anteriormente por 4.
	add $t1, $t1, $t0				# Se agrega el offset a la base del display. De esta manera se guarda
							# иии	en $a0 la direcciзn del pixel que se pretende pintar como
							# иии	fruta.	
							
	# Se verifica si es posible pintar la fruta en el pixel seleccionado.
	lw $t2, display_color				# Se carga en $t2 el color del display
	lw $t3, 0($t1)					# Se carga en $t1 el color del pixel seleccionado
	bne $t2, $t3, Failed_painted_fruit		# Si ambos colores no son iguales, entonces la fruta no puede ser pintada
	
	# En este punto del programa se llega a la conclusiзn de que la fruta si puede ser pintada.
	lw $t2, fruit_color				# Se carga en $t2 el color de la fruta
	sw $t2, 0($t1)					# Se pinta el pixel seleccionado como una fruta
	li $v0, 1					# $v0 = 1, para indicar que el pixel fue pintado correctamente.
	jr $ra						# Vuelve con la instruccion siguiente al salto (JAL).
	
	Failed_painted_fruit:
	li $v0, -1					# $v0 = -1, para indicar que el pixel no pudo ser pintado.
	jr $ra						# Vuelve con la instruccion siguiente al salto (JAL).
	    
Keyboard_polling:
	# Descripciзn:		Procedimiento encargado de recibir lo que ha sido escrito en el simulador de 
	#			Keyboard de Mips y decidir que movimiento debe realizar la serpiente en el Display.
	# Input:		Ninguna.
	# Output:		Ninguna.
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lhu  $a0, snake_slowness			# $a0 = Lentitud con la cual se mueve la serpiente
	addi $v0, $zero, 32				# Servicio 32, sleep
	syscall						# Se espera una determinada cantidad de milisegundos
	
		# addi $v0, $zero, 12			# En el caso de que se quiera utilizar syscall para obtener
		# syscall				# иии el ingreso de teclas por parte del usuario y no el 
		# move $t1, $v0				# иии simulador de Keyboard de Mips
	
	addi $t0, $zero, 0xffff0004			# Los caracteres del teclado se guardan en la dir de mem 0xffff0004
	lw $t1 , 0($t0)					# $t1 = Caracter ingresado en el simulador de Keyboar
	lb $t2, snake_direction				# $t2 = Direcciзn actual de la serpiente
	
	beq $t1, 113, End_quit				# 113 = q => Fin del juego
	beq $t1, 119, Aux_Move_snake_up			# 119 = w => Movimiento hacia arriba.
	beq $t1, 115, Aux_Move_snake_down		# 115 = s => Movimiento hacia abajo.
	beq $t1, 97, Aux_Move_snake_left		# 97 =  a => Movimiento hacia la izquierda.
	beq $t1, 100, Aux_Move_snake_right		# 100 = d => Movimiento hacia la derecha.
	j Keyboard_polling_continue
		
		# El movimiento se puede llevar a cabo solamente si la direcciзn actual de la serpiente no es 
		# opuesta a la direcciзn que se le pretende dar:
		Aux_Move_snake_up:
		bne $t2, -1, Move_snake_up
		j Keyboard_polling_continue
		
		Aux_Move_snake_down:
		bne $t2, 1, Move_snake_down
		j Keyboard_polling_continue
		
		Aux_Move_snake_left:
		bne $t2, 2, Aux_Move_snake_left_B
		j Keyboard_polling_continue
		Aux_Move_snake_left_B:			# En este caso, se considera una condiciзn extra porque al
		bnez $t2, Move_snake_left		# иии principio del juego, la serpiente no puede moverse hacia la 
		j Keyboard_polling_continue		# иии izquierda.
		
		Aux_Move_snake_right:
		bne $t2, -2, Move_snake_right
		j Keyboard_polling_continue
		
	Keyboard_polling_continue:
	# En el caso de que ninguna tecla haya sido presionada, se sigue la direcciзn que la serpiente estaba siguiendo
	# en ese momento:
	beq $t2, 1, Move_snake_up
	beq $t2, -1, Move_snake_down
	beq $t2, -2, Move_snake_left
	beq $t2, 2, Move_snake_right
	j Keyboard_polling			

	
# ...
# Movimiento de Coordenadas:
# иииииииииииииииииииииииииииииииииииииии

Coordinate_to_the_left:
	# Descripciзn:	Funciзn encargada de mover la coordenada X una posiciзn hacia la izquierda, teniendo en cuenta los 
	#		limites del terreno de juego (Cuando X se encuentra en el limite izquierdo del mapa, entonces la nueva
	#		coordenada aparecera en el limite derecho del mapa).
	# Input:	$a0 = Coordenada X.
	# Output:	$v0 = Nueva coordenada X.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии	
	
	beqz $a0, If_Coordinate_to_the_left	
	
	# Coordenada X no se encuentra en el limite izquierdo del mapa.
	subi $v0, $a0, 1
	j Coordinate_to_the_left_continuation
	
		# Coordenada X se encuentra en el limite izquierdo del mapa.
		If_Coordinate_to_the_left:
		lhu $t0, pixel_by_side
		subi $v0, $t0, 1

	Coordinate_to_the_left_continuation:
	jr $ra
	
Coordinate_to_the_right:
	# Descripciзn:	Funciзn encargada de mover la coordenada X una posiciзn hacia la derecha, teniendo en cuenta 
	#		los limites del terreno de juego. (Cuando X se encuentra en el limite derecho del mapa, entonces
	#		la nueva coordenada aparecerр en el limite izquierdo del mapa).
	# Input:	$a0 = Coordenada X.
	# Output:	$v0 = Nueva coordenada X.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lhu $t0, pixel_by_side
	sub $t0, $t0, 1
	beq $a0, $t0, If_Coordinate_to_the_right
	
	# Coordenada X no se encuentra en el limite derecho del mapa.
	addi $v0, $a0, 1
	j Coordinate_to_the_right_continuation
	
		# Coordenada X se encuentra en el limite derecho del mapa.
		If_Coordinate_to_the_right:
		addi $v0, $zero, 0
		
	Coordinate_to_the_right_continuation:
	jr $ra		

Coordinate_upwards:
	# Descripciзn:	Funciзn encargada de mover la coordenada Y una posiciзn hacia arriba, teniendo en cuenta los
	#		limites del terreno de juego. (Cuando X se encuentra en el limite superior del mapa, entonces
	#		la nueva coordenada aparecerр en el limite inferior del mapa).
	# Input:	$a1 = Coordenada Y.
	# Output:	$v0 = Nueva coordenada Y.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lhu $t0, score_bar_lines			
					
	beq $a1, $t0, If_Coordinate_upwards
	
	# Coordenada Y no se encuentra en el limite superior del mapa.
	subi $v0, $a1, 1
	j Coordinate_upwards_continuation
	
		# Coordenada Y se encuentra en el limite superior del mapa.
		If_Coordinate_upwards:
		lhu $t1, pixel_by_side
		subi $v0, $t1, 1	
	
	Coordinate_upwards_continuation:
	jr $ra
		
Coordinate_downwards:
	# Descripciзn:	Funciзn encargada de mover la coordenada Y una posiciзn hacia abajo, teniendo en cuenta los
	#		limites del terreno de juego. (Cuando X se encuentra en el limite inferior del mapa, entonces
	#		la nueva coordenada aparecerр en el limite superior del mapa).
	# Input:	$a1 = Coordenada Y.
	# Output:	$v0 = Nueva coordenada Y.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lhu $t0, pixel_by_side
	subi $t0, $t0, 1
	beq $a1, $t0, If_Coordinate_downwards
	
	# Coordenada Y no se encuentra en el limite inferior del mapa.
	addi $v0, $a1, 1
	j Coordinate_downwards_continuation
	
		# Coordenada Y se encuentra en el limite inferior del mapa.
		If_Coordinate_downwards:
		lhu $v0, score_bar_lines
	
	Coordinate_downwards_continuation:
	jr $ra			
							
Move_snake_up:
	# Descripciзn:		Procedimiento utilizado para mover, en el display, la cabeza de la serpiente una posiciзn mas arriba.
	# Input:		Ninguna.
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lhu $a0, x_snake_position 			# $a0 = Coordenada X de la cabeza de la serpiente.
	lhu $a1, y_snake_position			# $a1 = Coordenada Y de la cabeza de la serpiente.
	lhu $a2, score_bar_lines			# $a2 = Cantidad de lineas asignadas a la barra de puntuaciзn.
	
	beq $a1, $a2, If_A_Move_head_up
	subi $a1, $a1, 1				# $a1 = Nueva Coordenada Y para la cabeza de la serpiente.
	j Move_head_up_continuation			

 		# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
		If_A_Move_head_up:			# Se ejecuta cuando la serpiente ha alcanzado el limite superior
							# ииииии del terreno del juego (debe aparecer en el extremo opuesto).
		lhu $t0, pixel_by_side			# %t0 = Cantidad de pixeles por lado.
		subi $a1, $t0, 1			# $a1 = Nueva Coordenada Y para la cabeza de la serpiente.
 		# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии

 	Move_head_up_continuation:			
	 	
	jal Coordinate_to_address			# $v0 = DirecciЫn del pixel en el display referenciado por las coordenadas
							# ииииии X e Y registradas en $a0 y $a1 respectivamente.
							
	# Se verifica si la direcciзn le corresponde a un obstaculo
	move $a2, $v0
	jal Is_address_an_obstacle
	beq $v0, -1, End_ouchie				# Si $v0 = -1, el juego finaliza por haber chocado con un obstaculo.
	
	# Se verifica si la direcciзn le corresponde a una parte de la serpiente
	jal Is_address_a_snake
	beq $v0, -1, End_suicide				# Si $v0 = -1, el juego finaliza por haber chocado con una parte de
							# иииииии de la serpiente misma.
							
	# Se verifica si la direcciЫn le corresponde a una fruta
	jal Is_address_a_fruit
	
	# Se pinta la cabeza de la serpiente en la nueva posiciзn
	lw $t0, snake_color				# $t0 = Color de la serpiente
	sw $t0, 0($a2)					# Pixel referenciado por $a2 pintado con el color guardado en $t0.
	
	# Se actualizan las variables para la cabeza de la serpiente
	sh $a0, x_snake_position
	sh $a1, y_snake_position
	
	# Se actualiza la direcciзn de la serpiente
	addi $t0, $zero, 1
	sb $t0, snake_direction
	
	# Se agrega la direcciзn al arreglo de cambio de direcciones
	jal Update_arr_last_index
	la $t1, arr_direction_change
	lhu $t2, arr_last_index	
	mul $t3, $t2, 4
	add $t4, $t1, $t3
	lb $t0, snake_direction
	sw $t0, 0($t4)
	
	# Dependiendo de la respuesta obtenida en la funciзn Is_address_a_fruit se toman decisiones con respecto a la cola
	#	Si %v0 = 0, La serpiente ha comido una fruta, por lo que la cola de la serpiente no debe ser movida.
	#	Si $v0 != 0, La serpiente no ha comido fruta, por lo que la cola actual debe actualizarse.
	bne $v0, 0, Move_tail
	jal Food_eaten		
	j Keyboard_polling	

														
Move_snake_down:
	# Descripciзn:		Procedimiento utilizado para mover, en el display, la cabeza de la serpiente una posiciзn mas abajo.
	# Input:		Ninguna.
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lhu $a0, x_snake_position 			# $a0 = Coordenada X de la cabeza de la serpiente.
	lhu $a1, y_snake_position			# $a1 = Coordenada Y de la cabeza de la serpiente.
	lhu $a2, pixel_by_side				# $a2 = Cantidad de pixeles por lado.
	subi $a2, $a2, 1
	
	beq $a1, $a2, If_A_Move_head_down
	addi $a1, $a1, 1				# $a1 = Nueva Coordenada Y para la cabeza de la serpiente.
	j Move_head_down_continuation			

 		# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
		If_A_Move_head_down:			# Se ejecuta cuando la serpiente ha alcanzado el limite inferior
							# ииииии del terreno del juego (debe aparecer en el extremo opuesto).
		lhu $a1, score_bar_lines		# %a1 = Cantidad de lineas asignadas para la tabla de puntuaciзn.
 		# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии

 	Move_head_down_continuation:			
	 	
	jal Coordinate_to_address			# $v0 = DirecciЫn del pixel en el display referenciado por las coordenadas
							# ииииии X e Y registradas en $a0 y $a1 respectivamente.
							
	# Se verifica si la direcciзn le corresponde a un obstaculo
	move $a2, $v0
	jal Is_address_an_obstacle
	beq $v0, -1, End_ouchie				# Si $v0 = -1, el juego finaliza por haber chocado con un obstaculo.
	
	# Se verifica si la direcciзn le corresponde a una parte de la serpiente
	jal Is_address_a_snake
	beq $v0, -1, End_suicide				# Si $v0 = -1, el juego finaliza por haber chocado con una parte de
							# иииииии de la serpiente misma.
							
	# Se verifica si la direcciЫn le corresponde a una fruta
	jal Is_address_a_fruit
	
	# Se pinta la cabeza de la serpiente en la nueva posiciзn
	lw $t0, snake_color				# $t0 = Color de la serpiente
	sw $t0, 0($a2)					# Pixel referenciado por $a2 pintado con el color guardado en $t0.
	
	# Se actualizan las variables para la cabeza de la serpiente
	sh $a0, x_snake_position
	sh $a1, y_snake_position
	
	# Se actualiza la direcciзn de la serpiente
	addi $t0, $zero, -1
	sb $t0, snake_direction
	
	# Se agrega la direcciзn al arreglo de cambio de direcciones
	jal Update_arr_last_index
	la $t1, arr_direction_change
	lhu $t2, arr_last_index	
	mul $t3, $t2, 4
	add $t4, $t1, $t3
	lb $t0, snake_direction
	sw $t0, 0($t4)
	
	# Dependiendo de la respuesta obtenida en la funciзn Is_address_a_fruit se toman decisiones con respecto a la cola
	#	Si %v0 = 0, La serpiente ha comido una fruta, por lo que la cola de la serpiente no debe ser movida.
	#	Si $v0 != 0, La serpiente no ha comido fruta, por lo que la cola actual debe actualizarse.
	bne $v0, 0, Move_tail
	jal Food_eaten		
	j Keyboard_polling	

	
Move_snake_left:
	# Descripciзn:		Procedimiento utilizado para mover, en el display, la cabeza de la serpiente una posiciзn hacia la 
	#			izquierda.
	# Input:		Ninguna.
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lhu $a0, x_snake_position 			# $a0 = Coordenada X de la cabeza de la serpiente.
	lhu $a1, y_snake_position			# $a1 = Coordenada Y de la cabeza de la serpiente.
	
	beqz $a0, If_A_Move_head_left
	subi $a0, $a0, 1				# $a0 = Nueva Coordenada x para la cabeza de la serpiente.
	j Move_head_left_continuation			

 		# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
		If_A_Move_head_left:			# Se ejecuta cuando la serpiente ha alcanzado el limite izquierdo
							# ииииии del terreno del juego (debe aparecer en el extremo opuesto).
		lhu $a0, pixel_by_side			# %a0 = Cantidad de pixeles por lado.
 		subi $a0, $a0, 1			# $a0 = Nueva Coordenada X para la cabeza de la serpiente.
 		# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии

 	Move_head_left_continuation:			
	 	
	jal Coordinate_to_address			# $v0 = DirecciЫn del pixel en el display referenciado por las coordenadas
							# ииииии X e Y registradas en $a0 y $a1 respectivamente.
							
	# Se verifica si la direcciзn le corresponde a un obstaculo
	move $a2, $v0
	jal Is_address_an_obstacle
	beq $v0, -1, End_ouchie				# Si $v0 = -1, el juego finaliza por haber chocado con un obstaculo.
	
	# Se verifica si la direcciзn le corresponde a una parte de la serpiente
	jal Is_address_a_snake
	beq $v0, -1, End_suicide				# Si $v0 = -1, el juego finaliza por haber chocado con una parte de
							# иииииии de la serpiente misma.
							
	# Se verifica si la direcciЫn le corresponde a una fruta
	jal Is_address_a_fruit
	
	# Se pinta la cabeza de la serpiente en la nueva posiciзn
	lw $t0, snake_color				# $t0 = Color de la serpiente
	sw $t0, 0($a2)					# Pixel referenciado por $a2 pintado con el color guardado en $t0.
	
	# Se actualizan las variables para la cabeza de la serpiente
	sh $a0, x_snake_position
	sh $a1, y_snake_position
	
	# Se actualiza la direcciзn de la serpiente
	addi $t0, $zero, -2
	sb $t0, snake_direction
	
	# Se agrega la direcciзn al arreglo de cambio de direcciones
	jal Update_arr_last_index
	la $t1, arr_direction_change
	lhu $t2, arr_last_index	
	mul $t3, $t2, 4
	add $t4, $t1, $t3
	lb $t0, snake_direction
	sw $t0, 0($t4)
	
	# Dependiendo de la respuesta obtenida en la funciзn Is_address_a_fruit se toman decisiones con respecto a la cola
	#	Si %v0 = 0, La serpiente ha comido una fruta, por lo que la cola de la serpiente no debe ser movida.
	#	Si $v0 != 0, La serpiente no ha comido fruta, por lo que la cola actual debe actualizarse.
	bne $v0, 0, Move_tail
	jal Food_eaten		
	j Keyboard_polling	
	

Move_snake_right:
	# Descripciзn:		Procedimiento utilizado para mover, en el display, la cabeza de la serpiente una posiciзn hacia la 
	#			derecha.
	# Input:		Ninguna.
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lhu $a0, x_snake_position 			# $a0 = Coordenada X de la cabeza de la serpiente.
	lhu $a1, y_snake_position			# $a1 = Coordenada Y de la cabeza de la serpiente.
	lhu $t0, pixel_by_side				# %t0 = Cantidad de pixeles por lado.
 	subi $t0, $t0, 1				
 	
	beq $a0, $t0, If_A_Move_head_right
	addi $a0, $a0, 1				# $a0 = Nueva Coordenada X para la cabeza de la serpiente.
	j Move_head_right_continuation			

 		# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
		If_A_Move_head_right:			# Se ejecuta cuando la serpiente ha alcanzado el limite izquierdo
							# ииииии del terreno del juego (debe aparecer en el extremo opuesto).
		addi $a0, $zero, 0			# $a0 = Nueva Coordenada X para la cabeza de la serpiente.
 		# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии

 	Move_head_right_continuation:			
	 	
	jal Coordinate_to_address			# $v0 = DirecciЫn del pixel en el display referenciado por las coordenadas
							# ииииии X e Y registradas en $a0 y $a1 respectivamente.
							
	# Se verifica si la direcciзn le corresponde a un obstaculo
	move $a2, $v0
	jal Is_address_an_obstacle
	beq $v0, -1, End_ouchie				# Si $v0 = -1, el juego finaliza por haber chocado con un obstaculo.
	
	# Se verifica si la direcciзn le corresponde a una parte de la serpiente
	jal Is_address_a_snake
	beq $v0, -1, End_suicide			# Si $v0 = -1, el juego finaliza por haber chocado con una parte de
							# иииииии de la serpiente misma.
							
	# Se verifica si la direcciЫn le corresponde a una fruta
	jal Is_address_a_fruit
	
	# Se pinta la cabeza de la serpiente en la nueva posiciзn
	lw $t0, snake_color				# $t0 = Color de la serpiente
	sw $t0, 0($a2)					# Pixel referenciado por $a2 pintado con el color guardado en $t0.
	
	# Se actualizan las variables para la cabeza de la serpiente
	sh $a0, x_snake_position
	sh $a1, y_snake_position
	
	# Se actualiza la direcciзn de la serpiente
	addi $t0, $zero, 2
	sb $t0, snake_direction
	
	# Se agrega la direcciзn al arreglo de cambio de direcciones
	jal Update_arr_last_index
	la $t1, arr_direction_change
	lhu $t2, arr_last_index	
	mul $t3, $t2, 4
	add $t4, $t1, $t3
	lb $t0, snake_direction
	sw $t0, 0($t4)
	
	# Dependiendo de la respuesta obtenida en la funciзn Is_address_a_fruit se toman decisiones con respecto a la cola
	#	Si %v0 = 0, La serpiente ha comido una fruta, por lo que la cola de la serpiente no debe ser movida.
	#	Si $v0 != 0, La serpiente no ha comido fruta, por lo que la cola actual debe actualizarse.
	bne $v0, 0, Move_tail
	jal Food_eaten		
	j Keyboard_polling	

Move_tail:
	# DescripciЫn:	Procedimiento utilizado para "mover" la cola de la serpiente cuando la cabeza se ha desplazado hacia arriba.
	# Input:	Ninguna.
	# Output:	Ninguna.
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# Se borra el pixel referenciado por las coordenadas de la cola actual.
	lhu $a0, x_tail_position 			# $a0 = Coordenada X de la cola de la serpiente.
	lhu $a1, y_tail_position			# $a1 = Coordenada Y de la cola de la serpiente.
 	jal Coordinate_to_address			# $v0 = Direcciзn del pixel referenciado por las coordenadas (x,y)
	lw $t0, display_color				# $t0 = Color base del Display.
	sw $t0, 0($v0)					# Pixel referenciado por $v0 pintado con el color guardado en $t0.
	
	# Se actualizan las coordenadas de la cola.
	la $t1, arr_direction_change			# %t1 = Arreglo de direcciones que debe seguir la cola.
	lhu $t2, arr_actual_index			# $t2 = Indice de la direccion actual que debe seguir la cola.
	mul $t3, $t2, 4					
	add $t4, $t1, $t3				# $t4 = Address de la direcciзn que debe seguir la cola.
	lw $t5, 0($t4)					# $t5 = Direcciзn que debe seguir la cola.
		
	# Casos:
	# иииииииииииииииииииииииииииииииииииииииииииииии
	# $t5 = 1:	Movimiento hacia arriba.	и
	# $t5 = -1:	Movimiento hacia abajo.		и
	# $t5 = -2 :	Movimiento hacia la izquierda.	и
	# $t5 = 2:	Movimiento hacia la derecha.	и
	# иииииииииииииииииииииииииииииииииииииииииииииии
	
	beq $t5, 1, A_Move_tail
	beq $t5, -1, B_Move_tail
	beq $t5, -2, C_Move_tail
	beq $t5, 2, D_Move_tail
	beqz $t5, Move_tail_continue
	
		A_Move_tail:
		# Movimiento realizado hacia arriba.
		jal Coordinate_upwards
		sh $v0, y_tail_position
		j Move_tail_continue
			
		B_Move_tail:
		# Movimiento realizado hacia abajo.
		jal Coordinate_downwards
		sh $v0, y_tail_position
		j Move_tail_continue
		
		C_Move_tail:
		# Movimiento realizado hacia la izquierda.
		jal Coordinate_to_the_left
		sh $v0, x_tail_position
		j Move_tail_continue
		
		D_Move_tail:
		# Movimiento realizado hacia la derecha.
		jal Coordinate_to_the_right
		sh $v0, x_tail_position
		j Move_tail_continue

	Move_tail_continue:
	lhu $a0, x_tail_position 			# $a0 = Coordenada X de la cola de la serpiente.
	lhu $a1, y_tail_position			# $a1 = Coordenada Y de la cola de la serpiente.
	jal Coordinate_to_address			# $v0 = Direcciзn del pixel referenciado por las coordenadas (x,y)
	lw $t0, snake_tail_color			# $t0 = Color base del Display.
	sw $t0, 0($v0)					# Pixel referenciado por $v0 pintado con el color guardado en $t0.
	
	jal Update_arr_actual_index
	
	j Keyboard_polling	
			
Food_eaten:
	# Descripciзn:		Procedimiento utilizado para actualizar el score una vez comido una fruta y generar una
	#			nueva fruta en una posiciзn aleatoria del mapa.
	# Input:		Ninguna.
	# Output:		Ninguna.
	# Advertencia:		$a0, $a1, $a2, $a3 no pueden ser utilizados.
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# Actualizaciзn del score:
	lw $t0, score					# Se carga en $t0 el score actual.
	lhu $t1, points_per_fruit			# Se carga en $t1 la cantidad de puntos que recibe.
	add $t0, $t0, $t1				# Se suma el puntaje al score actual.		
	
		# El puntaje no puede ser superior a 99
		ble $t0, 99, Food_eaten_continue
		addi $t0, $zero, 99
		
	Food_eaten_continue:	
	sw $t0, score					# Se actualiza el score actual.
	
	# Generaciзn aleatoria de una nueva fruta:
	move $s7, $ra					# Se guarda una referencia de la $ra para no perderla en el proximo jal
	Food_Eaten_DoWhile_A:
		jal Random_fruit_generator
		beq $v0, -1, Food_Eaten_DoWhile_A
	
	jal Update_score_display
	# Finalizaciзn del procedimiento:
	move $ra, $s7					# Se recupera la referencia de $ra.
	jr $ra

Update_score_display:
	# DescripciЫn:		Procedimiento para actualizar el score mostrado en el Display grafico.
	# Input:		Ninguna.
	# Output:		Ninguna.
	# Advertencia:		$s6 es utilizado.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	move $s6, $ra
	
	# Se despliega en el Display la decena de la puntuaciзn:
	lw $t0, score
	div $t1, $t0, 10				#$t1 = Decena de la puntuaciзn actual.
	addi $a0, $zero, 1				#$a0 = Coordenada X desde donde serр desplegada la decena.
	addi $a1, $zero, 1				#$a1 = Coordenada Y desde donde serр desplegada la decena.
	
	beq $t1, 0, Update_zero_tens
	beq $t1, 1, Update_one_tens
	beq $t1, 2, Update_two_tens
	beq $t1, 3, Update_three_tens
	beq $t1, 4, Update_four_tens
	beq $t1, 5, Update_five_tens
	beq $t1, 6, Update_six_tens
	beq $t1, 7, Update_seven_tens
	beq $t1, 8, Update_eight_tens
	beq $t1, 9, Update_nine_tens
	j Update_score_display_continue

		Update_zero_tens:
		jal Paint_zero
		j Update_score_display_continue
		
		Update_one_tens:
		jal Paint_one
		j Update_score_display_continue
			
		Update_two_tens:
		jal Paint_two
		j Update_score_display_continue
		
		Update_three_tens:
		jal Paint_three
		j Update_score_display_continue

		Update_four_tens:
		jal Paint_four
		j Update_score_display_continue
		
		Update_five_tens:
		jal Paint_five
		j Update_score_display_continue
			
		Update_six_tens:
		jal Paint_six
		j Update_score_display_continue
		
		Update_seven_tens:
		jal Paint_seven
		j Update_score_display_continue	
				
		Update_eight_tens:
		jal Paint_eight
		j Update_score_display_continue
		
		Update_nine_tens:
		jal Paint_nine
			
	Update_score_display_continue:
	
	# Se despliga en el Display la unidad de la puntuaciзn
	lw $t0, score
	div $t1, $t0, 10				
	mul $t1, $t1, 10				
	sub $t1, $t0, $t1				#$t1 = Unidad de la puntuaciзn actual
	addi $a0, $zero, 7				#$a0 = Coordenada X desde donde serр desplegada la decena.
	addi $a1, $zero, 1
	
	beq $t1, 0, Update_zero_units
	beq $t1, 1, Update_one_units
	beq $t1, 2, Update_two_units
	beq $t1, 3, Update_three_units
	beq $t1, 4, Update_four_units
	beq $t1, 5, Update_five_units
	beq $t1, 6, Update_six_units
	beq $t1, 7, Update_seven_units
	beq $t1, 8, Update_eight_units
	beq $t1, 9, Update_nine_units
	j Update_score_display_continue

		Update_zero_units:
		jal Paint_zero
		j Update_score_display_continue_two
		
		Update_one_units:
		jal Paint_one
		j Update_score_display_continue_two
			
		Update_two_units:
		jal Paint_two
		j Update_score_display_continue_two
		
		Update_three_units:
		jal Paint_three
		j Update_score_display_continue_two

		Update_four_units:
		jal Paint_four
		j Update_score_display_continue_two
		
		Update_five_units:
		jal Paint_five
		j Update_score_display_continue_two
			
		Update_six_units:
		jal Paint_six
		j Update_score_display_continue_two
		
		Update_seven_units:
		jal Paint_seven
		j Update_score_display_continue_two
				
		Update_eight_units:
		jal Paint_eight
		j Update_score_display_continue_two
		
		Update_nine_units:
		jal Paint_nine
		
	Update_score_display_continue_two:
	jr $s6
	
Coordinate_to_address:
	# Descripciзn:	Funciзn encargada de devolver la direcciзn del pixel del display referenciado por las coordenadas 
	#	 	entregadas como parametros.
	# Input:	$a0 = Coordenada X.
	# 		$a1 = Coordenada Y.
	# Output:	$v0 = Dirreccion del pixel en el display grafico.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	la  $t0, display				# Se carga en $t0 el Display grafico.
	mul $t1, $a0, 4					# Se alinean las columnas.
	mul $t2, $a1, 256				# Se alinean las filas.
	add $t3, $t1, $t2				# Se calcula el offset.
	add $v0, $t0, $t3				# Se guarda en $v0 la direccion del pixel en el display.
	jr $ra						# Vuelve con la instruccion siguiente al salto (JAL).


Is_address_an_obstacle:
	# Descripciзn:	Funciзn encargada de devolver 0 si la direccion entregada no le corresponde a un obstaculo pintado en el
	#		Display. -1 en el caso contrario.
	# Input:	$a2 = direccion del pixel estudiado.
	# Output:	$v0 = 0; pixel no corresponde a un obstaculo.
	#		$v0 = -1; pixel corresponde a un obstaculo.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lw $t0, obstacles_color				# Se guarda en $t0 el color de los obstaculos.
	lw $t1, 0($a2)					# Se guarda en $t1 el color del pixel contenido en $a2.
	beq $t0, $t1, Address_is_obstacle		# Si ambos colores coinciden, entonces el pixel estudiado corresponde
							# иии	a un obstaculo.
	addi $v0, $zero, 0				# $v0 = 0.
	jr $ra						# Vuelve con la instruccion siguiente al salto (JAL).
	
	Address_is_obstacle:
	addi $v0, $zero, -1				# $v0 = -1.
	jr $ra						# Vuelve con la instruccion siguiente al salto (JAL).

Is_address_a_snake:
	# Descripciзn:	Funciзn encargada de devolver 0 si la direccion entregada no le corresponde a una parte de la serpiente 
	#		pintada en el Display. Devuelve -1 en el caso contrario.
	# Input:	$a2 = direccion del pixel estudiado.
	# Output:	$v0 = 0; pixel no corresponde a un obstaculo
	#		$v0 = -1; pixel corresponde a un obstaculo
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lw $t0, snake_color				# Se guarda en $t0 el color de la serpiente
	lw $t1, 0($a2)					# Se guarda en $t1 el color del pixel contenido en $a2.
	beq $t0, $t1, Address_is_snake			# Si ambos colores coinciden, entonces el pixel estudiado corresponde
							# ииии	a una parte de la serpiente.
	
	lw $t0, snake_tail_color			# Se realizan las mismas operaciones, esta vez para verificar
	lw $t1, 0($a2)					# ииии 	si el pixel le corresponde a la cola de la serpiente.
	beq $t0, $t1, Address_is_snake					
	
	# Se llega a la conclusiзn de que el pixel no le corresponde a una parte de la serpiente.0						
	addi $v0, $zero, 0				# $v0 = 0.
	jr $ra						# Vuelve con la instruccion siguiente al salto (JAL).
	
	Address_is_snake:
	addi $v0, $zero, -1				# $v0 = -1.
	jr $ra						# Vuelve con la instruccion siguiente al salto (JAL).


Is_address_a_fruit:
	# Descripciзn:	Funciзn encargada de devolver 0 si la direccion entregada le corresponde a una fruta pintada en el
	#		Display. -1 en el caso contrario.
	# Input:	$a2 = direccion del pixel estudiado.
	# Output:	$v0 = 0; pixel le corresponde a una fruta.
	#		$v0 = -1; pixel no le corresponde a una fruta.
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lw $t0, fruit_color				# Se guarda en $t0 el color de una fruta.
	lw $t1, 0($a2)					# Se guarda en $t1 el color del pixel contenido en $a2.
	beq $t0, $t1, Address_is_fruit			# Si ambos colores coinciden, entonces el pixel estudidado corresponde
							# иии	a una fruta.
	addi $v0, $zero, -1				# $v0 = -1
	jr $ra						# Vuelve con la instruccion siguiente al salto (JAL).
	
	Address_is_fruit:
	addi $v0, $zero, 0				# $v0 = 0
	jr $ra						# Vuelve con la instruccion siguiente al salto (JAL).

Update_arr_actual_index:
	# Descripciзn:	Procedimiento encargado de actualizar la variable arr_actual_index segЩn como corresponda.
	# Input:	Ninguna.
	# Output:	Ninguna.
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lhu $t0, arr_actual_index
	lhu $t1, arr_size
	subi $t1, $t1, 1
	
	beq $t0, $t1, If_Update_arr_index
	#En el caso de que no se haya alcanzado el indice limite del arreglo
	addi $t0, $t0, 1
	j Update_arr_index_continue
	
		# En el caso de que se haya alcanzado el indice limite del arreglo
		If_Update_arr_index:
		addi $t0, $zero, 0
	
	Update_arr_index_continue:
	sh $t0, arr_actual_index
	jr $ra		

Update_arr_last_index:
	# Descripciзn:	Procedimiento encargado de actualizar la variable arr_last_index segЩn como corresponda.
	# Input:	Ninguna.
	# Output:	Ninguna.
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	lhu $t0, arr_last_index
	lhu $t1, arr_size
	subi $t1, $t1, 1
	
	beq $t0, $t1, If_Update_last_index
	#En el caso de que no se haya alcanzado el indice limite del arreglo
	addi $t0, $t0, 1
	j Update_last_index_continue
	
		# En el caso de que se haya alcanzado el indice limite del arreglo
		If_Update_last_index:
		addi $t0, $zero, 0
	
	Update_last_index_continue:
	sh $t0, arr_last_index 
	jr $ra		
								

Paint_zero:
	# Descripciзn: 		Procedimiento encargado de pintar un 0 en el Display.
	# Input: 		$a0 = Coordenada X
	# 			$a1 = Coordenada Y
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# [ ] [x] [x] [x] [ ]
	# [x] [ ] [ ] [ ] [x]
	# [x] [ ] [x] [ ] [x]
	# [x] [ ] [ ] [ ] [x]
	# [ ] [x] [x] [x] [ ]
	
	move $s0, $ra
	
	jal Coordinate_to_address
	lw $t0, score_bar_color
	lw $t1, display_color
	
	# Primera linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Segunda linea:
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Tercera linea:
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Cuarta linea:
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Quinta linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)

	
	jr $s0

Paint_one:
	# Descripciзn: 		Procedimiento encargado de pintar un 1 en el Display.
	# Input: 		$a0 = Coordenada X
	# 			$a1 = Coordenada Y
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# [ ] [ ] [x] [ ] [ ]
	# [ ] [x] [x] [ ] [ ]
	# [ ] [ ] [x] [ ] [ ]
	# [ ] [ ] [x] [ ] [ ]
	# [ ] [x] [x] [x] [ ]
	
	move $s0, $ra
	
	jal Coordinate_to_address
	lw $t0, score_bar_color
	lw $t1, display_color
	
	# Primera linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Segunda linea:
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Tercera linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Cuarta linea:
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Quinta linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)

	
	jr $s0

Paint_two:
	# Descripciзn: 		Procedimiento encargado de pintar un 2 en el Display.
	# Input: 		$a0 = Coordenada X
	# 			$a1 = Coordenada Y
	# Output:	Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# [x] [x] [x] [x] [ ]
	# [ ] [ ] [ ] [ ] [x]
	# [ ] [x] [x] [x] [ ]
	# [x] [ ] [ ] [ ] [ ]
	# [x] [x] [x] [x] [x]
	
	move $s0, $ra
	
	jal Coordinate_to_address
	lw $t0, score_bar_color
	lw $t1, display_color
	
	# Primera linea:
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Segunda linea:
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Tercera linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Cuarta linea:
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Quinta linea:
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)

	
	jr $s0

Paint_three:
	# Descripciзn: 		Procedimiento encargado de pintar un 3 en el Display.
	# Input: 		$a0 = Coordenada X
	# 			$a1 = Coordenada Y
	# Output:	Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# [x] [x] [x] [x] [ ]
	# [ ] [ ] [ ] [ ] [x]
	# [x] [x] [x] [x] [ ]
	# [ ] [ ] [ ] [ ] [x]
	# [x] [x] [x] [x] [ ]
	
	move $s0, $ra
	
	jal Coordinate_to_address
	lw $t0, score_bar_color
	lw $t1, display_color
	
	# Primera linea:
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Segunda linea:
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Tercera linea:
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Cuarta linea:
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Quinta linea:
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)

	
	jr $s0

Paint_four:
	# Descripciзn: 		Procedimiento encargado de pintar un 4 en el Display.
	# Input: 		$a0 = Coordenada X
	# 			$a1 = Coordenada Y
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# [ ] [ ] [x] [x] [ ]
	# [ ] [x] [ ] [x] [ ]
	# [x] [ ] [ ] [x] [ ]
	# [x] [x] [x] [x] [x]
	# [ ] [ ] [ ] [x] [ ]
	
	move $s0, $ra
	
	jal Coordinate_to_address
	lw $t0, score_bar_color
	lw $t1, display_color
	
	# Primera linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Segunda linea:
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Tercera linea:
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Cuarta linea:
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Quinta linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)

	
	jr $s0					

Paint_five:
	# Descripciзn: 		Procedimiento encargado de pintar un 5 en el Display.
	# Input: 		$a0 = Coordenada X
	# 			$a1 = Coordenada Y
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# [x] [x] [x] [x] [x]
	# [x] [ ] [ ] [ ] [ ]
	# [x] [x] [x] [x] [ ]
	# [ ] [ ] [ ] [ ] [x]
	# [x] [x] [x] [x] [ ]
	
	move $s0, $ra
	
	jal Coordinate_to_address
	lw $t0, score_bar_color
	lw $t1, display_color
	
	# Primera linea:
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Segunda linea:
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Tercera linea:
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Cuarta linea:
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Quinta linea:
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)

	
	jr $s0					

Paint_six:
	# Descripciзn: 		Procedimiento encargado de pintar un 6 en el Display.
	# Input: 		$a0 = Coordenada X
	# 			$a1 = Coordenada Y
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# [ ] [x] [x] [x] [ ]
	# [x] [ ] [ ] [ ] [ ]
	# [x] [x] [x] [x] [ ]
	# [x] [ ] [ ] [ ] [x]
	# [ ] [x] [x] [x] [ ]
	
	move $s0, $ra
	
	jal Coordinate_to_address
	lw $t0, score_bar_color
	lw $t1, display_color
	
	# Primera linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Segunda linea:
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Tercera linea:
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Cuarta linea:
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Quinta linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)

	
	jr $s0	

Paint_seven:
	# Descripciзn: 		Procedimiento encargado de pintar un 7 en el Display.
	# Input: 		$a0 = Coordenada X
	# 			$a1 = Coordenada Y
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# [x] [x] [x] [x] [ ]
	# [ ] [ ] [ ] [ ] [x]
	# [ ] [ ] [ ] [x] [ ]
	# [ ] [ ] [x] [ ] [ ]
	# [ ] [ ] [x] [ ] [ ]
	
	move $s0, $ra
	
	jal Coordinate_to_address
	lw $t0, score_bar_color
	lw $t1, display_color
	
	# Primera linea:
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Segunda linea:
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Tercera linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Cuarta linea:
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Quinta linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)

	
	jr $s0

Paint_eight:
	# Descripciзn: 		Procedimiento encargado de pintar un 8 en el Display.
	# Input: 		$a0 = Coordenada X
	# 			$a1 = Coordenada Y
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# [ ] [x] [x] [x] [ ]
	# [x] [ ] [ ] [ ] [x]
	# [ ] [x] [x] [x] [ ]
	# [x] [ ] [ ] [ ] [x]
	# [ ] [x] [x] [x] [ ]
	
	move $s0, $ra
	
	jal Coordinate_to_address
	lw $t0, score_bar_color
	lw $t1, display_color
	
	# Primera linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Segunda linea:
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Tercera linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Cuarta linea:
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Quinta linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)

	
	jr $s0

Paint_nine:
	# Descripciзn: 		Procedimiento encargado de pintar un 9 en el Display.
	# Input: 		$a0 = Coordenada X
	# 			$a1 = Coordenada Y
	# Output:		Ninguna.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	# [ ] [x] [x] [x] [ ]
	# [x] [ ] [ ] [ ] [x]
	# [ ] [x] [x] [x] [x]
	# [ ] [ ] [ ] [ ] [x]
	# [ ] [x] [x] [x] [x]
	
	move $s0, $ra
	
	jal Coordinate_to_address
	lw $t0, score_bar_color
	lw $t1, display_color
	
	# Primera linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Segunda linea:
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Tercera linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 256
	
	# Cuarta linea:
	sw $t1, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	subi $v0, $v0, 4
	sw $t0, 0($v0)
	addi $v0, $v0, 256
	
	# Quinta linea:
	sw $t0, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t1, 0($v0)
	addi $v0, $v0, 4
	sw $t0, 0($v0)

	jr $s0

End_ouchie:
	# Descripciзn: 		Procedimiento que se encarga de poner fin al juego tras haber chocado contra un obstaculo.
	# Input:		Ninguno.
	# Output:		Ninguno.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	
	la $a0, imagen_ouchie
	jal Imprimir_imagen
	jal Update_score_display
	
	addi $a0, $zero, 6
	addi $a1, $zero, 1
	jal Coordinate_to_address
	move $a0, $v0
	lw   $a1, score_bar_color
	addi $a2, $zero, 4
	jal Paint_vertical_line
	
	la $a0, mensaje0
	jal ImprimirTexto
	addi $t0, $zero, 0xffff0004
	sw $zero, 0($t0)
	addi $a0 , $zero , 2000
	addi $v0, $zero, 32				# Servicio 32, sleep
	syscall						# Se espera 100ms para no utilizar todo el procesador.
	j Keyboard_end

	
End_suicide:
	# Descripciзn:		Procedimiento que pone fin al juego tras haber chocado con una parte de la serpiente misma.
	# Input:		Ninguno.
	# Output:		Ninguno.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
		
	la $a0, imagen_suicide
	jal Imprimir_imagen
	jal Update_score_display
	
	addi $a0, $zero, 6
	addi $a1, $zero, 1
	jal Coordinate_to_address
	move $a0, $v0
	lw   $a1, score_bar_color
	addi $a2, $zero, 4
	jal Paint_vertical_line
	
	la $a0, mensaje0
	jal ImprimirTexto
	addi $t0, $zero, 0xffff0004
	sw $zero, 0($t0)
	addi $a0 , $zero , 2000
	addi $v0, $zero, 32				# Servicio 32, sleep
	syscall						# Se espera 100ms para no utilizar todo el procesador.
	j Keyboard_end
	
End_quit:
	# Descripciзn:		Procedimiento encargado de finalizar la ejecuciзn del programa una vez apretada la letra q.
	# Input:		Ninguno.
	# Output:		Ninguno.
	# иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	la $a0, imagen_quit
  	jal Imprimir_imagen
  	jal Update_score_display
  	
  	addi $a0, $zero, 6
	addi $a1, $zero, 1
	jal Coordinate_to_address
	move $a0, $v0
	lw   $a1, score_bar_color
	addi $a2, $zero, 4
	jal Paint_vertical_line
	
	# иии Se asigna un tiempo de espera.
	addi $a0 , $zero , 2000
	addi $v0, $zero, 32				# Servicio 32, sleep
	syscall						# Se espera 100ms para no utilizar todo el procesador.
	
	jal Clear_display				# Se limpia el Display.
	
	li $v0, 10	# Servicio 10:	"terminate execution"
	syscall		
																																																																																																																																																																																																																																																				
Keyboard_end:
	# Descripciзn:	Inicia una nueva partida cuando se presiona cualquier tecla que no sea la "q". 
	#		Cuando se presiona la letra "q" se finaliza la ejecuciзn del programa.
	# Input:	Ninguna.
	# Output:	Ninguna.
	# ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
	addi $t0, $zero, 0xffff0004				# Los caracteres del teclado se guardan en la dir de mem 0xffff0004
	lw $t1 , 0($t0)						# $t1 = Caracter ingresado en el simulador de Keyboard
	beq $t1, 113, End_quit
	beq $t1, 81, End_quit
	beq $t1, 97, Main
	beq $t1, 65, Main
	j Keyboard_end
